import {IProtoMessage, ProtoPayloadType, ProtoOAPayloadType} from "../spotware-messages";
import {SpotwareEventEmitter} from "../spotware-event-emitter"

{{#messages}}
{{^isProtoMessage}}
import {{{type}}} from "./{{{type}}}";
{{/isProtoMessage}}
{{/messages}}

{{#messages}}
{{^isProtoMessage}}
export * from "./{{{type}}}";
{{/isProtoMessage}}
{{/messages}}

export function emitDecoded(
  emitter: SpotwareEventEmitter,
  message: IProtoMessage
): void {
  switch(message.payloadType as ProtoPayloadType | ProtoOAPayloadType) {
{{#messages}}
{{^isProtoMessage}}
    case {{{payloadType}}}:
      return {{{type}}}.emitDecoded(emitter, message);
{{/isProtoMessage}}
{{/messages}}
    default:
    throw new Error(`got unknown 'payloadType' (${message.payloadType})`);
  }
}