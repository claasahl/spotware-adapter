import * as $spotware from "../spotware-messages"

{{#messages}}
{{^isProtoMessage}}
import {{{type}}} from "./{{{type}}}";
{{/isProtoMessage}}
{{/messages}}

{{#messages}}
{{^isProtoMessage}}
export * from "./{{{type}}}";
{{/isProtoMessage}}
{{/messages}}

type Message<M> = { message: M; clientMsgId?: string | null };

{{#messages}}
{{^isProtoMessage}}
export function to(event: "{{{eventName}}}", message: $spotware.I{{{type}}}, clientMsgId?: string | null): $spotware.IProtoMessage;
{{/isProtoMessage}}
{{/messages}}
export function to(event: string, message: any, clientMsgId?: string | null): $spotware.IProtoMessage {
  switch(event) {
{{#messages}}
{{^isProtoMessage}}
    case "{{{eventName}}}":
      return {{{type}}}.toProtoMessage(message, clientMsgId);
{{/isProtoMessage}}
{{/messages}}
  }
  throw new Error(`unknown event ${event}`);
}

{{#messages}}
{{^isProtoMessage}}
export function from(event: "{{{eventName}}}", message: $spotware.IProtoMessage): Message<$spotware.I{{{type}}}>;
{{/isProtoMessage}}
{{/messages}}
export function from(event: string, message: $spotware.IProtoMessage): Message<any> {
  switch(event) {
{{#messages}}
{{^isProtoMessage}}
    case "{{{eventName}}}":
      return {{{type}}}.fromProtoMessage(message);
{{/isProtoMessage}}
{{/messages}}
  }
  throw new Error(`unknown event ${event}`);
}
