/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/minimal");

// Common aliases
var $Reader = $protobuf.Reader,
  $Writer = $protobuf.Writer,
  $util = $protobuf.util;

// Exported root namespace
var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

$root.UndocumentedProtoError = (function() {
  /**
   * Properties of an UndocumentedProtoError.
   * @exports IUndocumentedProtoError
   * @interface IUndocumentedProtoError
   * @property {number|null} [payloadType] UndocumentedProtoError payloadType
   * @property {string} error UndocumentedProtoError error
   * @property {string} errorCode UndocumentedProtoError errorCode
   * @property {string} description UndocumentedProtoError description
   */

  /**
   * Constructs a new UndocumentedProtoError.
   * @exports UndocumentedProtoError
   * @classdesc Represents an UndocumentedProtoError.
   * @implements IUndocumentedProtoError
   * @constructor
   * @param {IUndocumentedProtoError=} [properties] Properties to set
   */
  function UndocumentedProtoError(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * UndocumentedProtoError payloadType.
   * @member {number} payloadType
   * @memberof UndocumentedProtoError
   * @instance
   */
  UndocumentedProtoError.prototype.payloadType = 2173;

  /**
   * UndocumentedProtoError error.
   * @member {string} error
   * @memberof UndocumentedProtoError
   * @instance
   */
  UndocumentedProtoError.prototype.error = "";

  /**
   * UndocumentedProtoError errorCode.
   * @member {string} errorCode
   * @memberof UndocumentedProtoError
   * @instance
   */
  UndocumentedProtoError.prototype.errorCode = "";

  /**
   * UndocumentedProtoError description.
   * @member {string} description
   * @memberof UndocumentedProtoError
   * @instance
   */
  UndocumentedProtoError.prototype.description = "";

  /**
   * Creates a new UndocumentedProtoError instance using the specified properties.
   * @function create
   * @memberof UndocumentedProtoError
   * @static
   * @param {IUndocumentedProtoError=} [properties] Properties to set
   * @returns {UndocumentedProtoError} UndocumentedProtoError instance
   */
  UndocumentedProtoError.create = function create(properties) {
    return new UndocumentedProtoError(properties);
  };

  /**
   * Encodes the specified UndocumentedProtoError message. Does not implicitly {@link UndocumentedProtoError.verify|verify} messages.
   * @function encode
   * @memberof UndocumentedProtoError
   * @static
   * @param {IUndocumentedProtoError} message UndocumentedProtoError message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  UndocumentedProtoError.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.error);
    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.errorCode);
    writer.uint32(/* id 4, wireType 2 =*/ 34).string(message.description);
    return writer;
  };

  /**
   * Encodes the specified UndocumentedProtoError message, length delimited. Does not implicitly {@link UndocumentedProtoError.verify|verify} messages.
   * @function encodeDelimited
   * @memberof UndocumentedProtoError
   * @static
   * @param {IUndocumentedProtoError} message UndocumentedProtoError message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  UndocumentedProtoError.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes an UndocumentedProtoError message from the specified reader or buffer.
   * @function decode
   * @memberof UndocumentedProtoError
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {UndocumentedProtoError} UndocumentedProtoError
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  UndocumentedProtoError.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.UndocumentedProtoError();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.error = reader.string();
          break;
        case 3:
          message.errorCode = reader.string();
          break;
        case 4:
          message.description = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("error"))
      throw $util.ProtocolError("missing required 'error'", {
        instance: message
      });
    if (!message.hasOwnProperty("errorCode"))
      throw $util.ProtocolError("missing required 'errorCode'", {
        instance: message
      });
    if (!message.hasOwnProperty("description"))
      throw $util.ProtocolError("missing required 'description'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes an UndocumentedProtoError message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof UndocumentedProtoError
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {UndocumentedProtoError} UndocumentedProtoError
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  UndocumentedProtoError.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies an UndocumentedProtoError message.
   * @function verify
   * @memberof UndocumentedProtoError
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  UndocumentedProtoError.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      if (!$util.isInteger(message.payloadType))
        return "payloadType: integer expected";
    if (!$util.isString(message.error)) return "error: string expected";
    if (!$util.isString(message.errorCode)) return "errorCode: string expected";
    if (!$util.isString(message.description))
      return "description: string expected";
    return null;
  };

  /**
   * Creates an UndocumentedProtoError message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof UndocumentedProtoError
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {UndocumentedProtoError} UndocumentedProtoError
   */
  UndocumentedProtoError.fromObject = function fromObject(object) {
    if (object instanceof $root.UndocumentedProtoError) return object;
    var message = new $root.UndocumentedProtoError();
    if (object.payloadType != null)
      message.payloadType = object.payloadType | 0;
    if (object.error != null) message.error = String(object.error);
    if (object.errorCode != null) message.errorCode = String(object.errorCode);
    if (object.description != null)
      message.description = String(object.description);
    return message;
  };

  /**
   * Creates a plain object from an UndocumentedProtoError message. Also converts values to other types if specified.
   * @function toObject
   * @memberof UndocumentedProtoError
   * @static
   * @param {UndocumentedProtoError} message UndocumentedProtoError
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  UndocumentedProtoError.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType = 2173;
      object.error = "";
      object.errorCode = "";
      object.description = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType = message.payloadType;
    if (message.error != null && message.hasOwnProperty("error"))
      object.error = message.error;
    if (message.errorCode != null && message.hasOwnProperty("errorCode"))
      object.errorCode = message.errorCode;
    if (message.description != null && message.hasOwnProperty("description"))
      object.description = message.description;
    return object;
  };

  /**
   * Converts this UndocumentedProtoError to JSON.
   * @function toJSON
   * @memberof UndocumentedProtoError
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  UndocumentedProtoError.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return UndocumentedProtoError;
})();

$root.ProtoMessage = (function() {
  /**
   * Properties of a ProtoMessage.
   * @exports IProtoMessage
   * @interface IProtoMessage
   * @property {number} payloadType ProtoMessage payloadType
   * @property {Uint8Array|null} [payload] ProtoMessage payload
   * @property {string|null} [clientMsgId] ProtoMessage clientMsgId
   */

  /**
   * Constructs a new ProtoMessage.
   * @exports ProtoMessage
   * @classdesc Represents a ProtoMessage.
   * @implements IProtoMessage
   * @constructor
   * @param {IProtoMessage=} [properties] Properties to set
   */
  function ProtoMessage(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoMessage payloadType.
   * @member {number} payloadType
   * @memberof ProtoMessage
   * @instance
   */
  ProtoMessage.prototype.payloadType = 0;

  /**
   * ProtoMessage payload.
   * @member {Uint8Array} payload
   * @memberof ProtoMessage
   * @instance
   */
  ProtoMessage.prototype.payload = $util.newBuffer([]);

  /**
   * ProtoMessage clientMsgId.
   * @member {string} clientMsgId
   * @memberof ProtoMessage
   * @instance
   */
  ProtoMessage.prototype.clientMsgId = "";

  /**
   * Creates a new ProtoMessage instance using the specified properties.
   * @function create
   * @memberof ProtoMessage
   * @static
   * @param {IProtoMessage=} [properties] Properties to set
   * @returns {ProtoMessage} ProtoMessage instance
   */
  ProtoMessage.create = function create(properties) {
    return new ProtoMessage(properties);
  };

  /**
   * Encodes the specified ProtoMessage message. Does not implicitly {@link ProtoMessage.verify|verify} messages.
   * @function encode
   * @memberof ProtoMessage
   * @static
   * @param {IProtoMessage} message ProtoMessage message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoMessage.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).uint32(message.payloadType);
    if (message.payload != null && message.hasOwnProperty("payload"))
      writer.uint32(/* id 2, wireType 2 =*/ 18).bytes(message.payload);
    if (message.clientMsgId != null && message.hasOwnProperty("clientMsgId"))
      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.clientMsgId);
    return writer;
  };

  /**
   * Encodes the specified ProtoMessage message, length delimited. Does not implicitly {@link ProtoMessage.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoMessage
   * @static
   * @param {IProtoMessage} message ProtoMessage message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoMessage.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoMessage message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoMessage
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoMessage} ProtoMessage
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoMessage.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoMessage();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.uint32();
          break;
        case 2:
          message.payload = reader.bytes();
          break;
        case 3:
          message.clientMsgId = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("payloadType"))
      throw $util.ProtocolError("missing required 'payloadType'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoMessage message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoMessage
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoMessage} ProtoMessage
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoMessage.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoMessage message.
   * @function verify
   * @memberof ProtoMessage
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoMessage.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (!$util.isInteger(message.payloadType))
      return "payloadType: integer expected";
    if (message.payload != null && message.hasOwnProperty("payload"))
      if (
        !(
          (message.payload && typeof message.payload.length === "number") ||
          $util.isString(message.payload)
        )
      )
        return "payload: buffer expected";
    if (message.clientMsgId != null && message.hasOwnProperty("clientMsgId"))
      if (!$util.isString(message.clientMsgId))
        return "clientMsgId: string expected";
    return null;
  };

  /**
   * Creates a ProtoMessage message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoMessage
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoMessage} ProtoMessage
   */
  ProtoMessage.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoMessage) return object;
    var message = new $root.ProtoMessage();
    if (object.payloadType != null)
      message.payloadType = object.payloadType >>> 0;
    if (object.payload != null)
      if (typeof object.payload === "string")
        $util.base64.decode(
          object.payload,
          (message.payload = $util.newBuffer(
            $util.base64.length(object.payload)
          )),
          0
        );
      else if (object.payload.length) message.payload = object.payload;
    if (object.clientMsgId != null)
      message.clientMsgId = String(object.clientMsgId);
    return message;
  };

  /**
   * Creates a plain object from a ProtoMessage message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoMessage
   * @static
   * @param {ProtoMessage} message ProtoMessage
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoMessage.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType = 0;
      if (options.bytes === String) object.payload = "";
      else {
        object.payload = [];
        if (options.bytes !== Array)
          object.payload = $util.newBuffer(object.payload);
      }
      object.clientMsgId = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType = message.payloadType;
    if (message.payload != null && message.hasOwnProperty("payload"))
      object.payload =
        options.bytes === String
          ? $util.base64.encode(message.payload, 0, message.payload.length)
          : options.bytes === Array
          ? Array.prototype.slice.call(message.payload)
          : message.payload;
    if (message.clientMsgId != null && message.hasOwnProperty("clientMsgId"))
      object.clientMsgId = message.clientMsgId;
    return object;
  };

  /**
   * Converts this ProtoMessage to JSON.
   * @function toJSON
   * @memberof ProtoMessage
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoMessage.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoMessage;
})();

$root.ProtoErrorRes = (function() {
  /**
   * Properties of a ProtoErrorRes.
   * @exports IProtoErrorRes
   * @interface IProtoErrorRes
   * @property {ProtoPayloadType|null} [payloadType] ProtoErrorRes payloadType
   * @property {string} errorCode ProtoErrorRes errorCode
   * @property {string|null} [description] ProtoErrorRes description
   */

  /**
   * Constructs a new ProtoErrorRes.
   * @exports ProtoErrorRes
   * @classdesc Represents a ProtoErrorRes.
   * @implements IProtoErrorRes
   * @constructor
   * @param {IProtoErrorRes=} [properties] Properties to set
   */
  function ProtoErrorRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoErrorRes payloadType.
   * @member {ProtoPayloadType} payloadType
   * @memberof ProtoErrorRes
   * @instance
   */
  ProtoErrorRes.prototype.payloadType = 50;

  /**
   * ProtoErrorRes errorCode.
   * @member {string} errorCode
   * @memberof ProtoErrorRes
   * @instance
   */
  ProtoErrorRes.prototype.errorCode = "";

  /**
   * ProtoErrorRes description.
   * @member {string} description
   * @memberof ProtoErrorRes
   * @instance
   */
  ProtoErrorRes.prototype.description = "";

  /**
   * Creates a new ProtoErrorRes instance using the specified properties.
   * @function create
   * @memberof ProtoErrorRes
   * @static
   * @param {IProtoErrorRes=} [properties] Properties to set
   * @returns {ProtoErrorRes} ProtoErrorRes instance
   */
  ProtoErrorRes.create = function create(properties) {
    return new ProtoErrorRes(properties);
  };

  /**
   * Encodes the specified ProtoErrorRes message. Does not implicitly {@link ProtoErrorRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoErrorRes
   * @static
   * @param {IProtoErrorRes} message ProtoErrorRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoErrorRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.errorCode);
    if (message.description != null && message.hasOwnProperty("description"))
      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.description);
    return writer;
  };

  /**
   * Encodes the specified ProtoErrorRes message, length delimited. Does not implicitly {@link ProtoErrorRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoErrorRes
   * @static
   * @param {IProtoErrorRes} message ProtoErrorRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoErrorRes.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoErrorRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoErrorRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoErrorRes} ProtoErrorRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoErrorRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoErrorRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.errorCode = reader.string();
          break;
        case 3:
          message.description = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("errorCode"))
      throw $util.ProtocolError("missing required 'errorCode'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoErrorRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoErrorRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoErrorRes} ProtoErrorRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoErrorRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoErrorRes message.
   * @function verify
   * @memberof ProtoErrorRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoErrorRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 50:
        case 51:
        case 52:
        case 53:
          break;
      }
    if (!$util.isString(message.errorCode)) return "errorCode: string expected";
    if (message.description != null && message.hasOwnProperty("description"))
      if (!$util.isString(message.description))
        return "description: string expected";
    return null;
  };

  /**
   * Creates a ProtoErrorRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoErrorRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoErrorRes} ProtoErrorRes
   */
  ProtoErrorRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoErrorRes) return object;
    var message = new $root.ProtoErrorRes();
    switch (object.payloadType) {
      case "ERROR_RES":
      case 50:
        message.payloadType = 50;
        break;
      case "HEARTBEAT_EVENT":
      case 51:
        message.payloadType = 51;
        break;
      case "PING_REQ":
      case 52:
        message.payloadType = 52;
        break;
      case "PING_RES":
      case 53:
        message.payloadType = 53;
        break;
    }
    if (object.errorCode != null) message.errorCode = String(object.errorCode);
    if (object.description != null)
      message.description = String(object.description);
    return message;
  };

  /**
   * Creates a plain object from a ProtoErrorRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoErrorRes
   * @static
   * @param {ProtoErrorRes} message ProtoErrorRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoErrorRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType = options.enums === String ? "ERROR_RES" : 50;
      object.errorCode = "";
      object.description = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoPayloadType[message.payloadType]
          : message.payloadType;
    if (message.errorCode != null && message.hasOwnProperty("errorCode"))
      object.errorCode = message.errorCode;
    if (message.description != null && message.hasOwnProperty("description"))
      object.description = message.description;
    return object;
  };

  /**
   * Converts this ProtoErrorRes to JSON.
   * @function toJSON
   * @memberof ProtoErrorRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoErrorRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoErrorRes;
})();

$root.ProtoHeartbeatEvent = (function() {
  /**
   * Properties of a ProtoHeartbeatEvent.
   * @exports IProtoHeartbeatEvent
   * @interface IProtoHeartbeatEvent
   * @property {ProtoPayloadType|null} [payloadType] ProtoHeartbeatEvent payloadType
   */

  /**
   * Constructs a new ProtoHeartbeatEvent.
   * @exports ProtoHeartbeatEvent
   * @classdesc Represents a ProtoHeartbeatEvent.
   * @implements IProtoHeartbeatEvent
   * @constructor
   * @param {IProtoHeartbeatEvent=} [properties] Properties to set
   */
  function ProtoHeartbeatEvent(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoHeartbeatEvent payloadType.
   * @member {ProtoPayloadType} payloadType
   * @memberof ProtoHeartbeatEvent
   * @instance
   */
  ProtoHeartbeatEvent.prototype.payloadType = 51;

  /**
   * Creates a new ProtoHeartbeatEvent instance using the specified properties.
   * @function create
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {IProtoHeartbeatEvent=} [properties] Properties to set
   * @returns {ProtoHeartbeatEvent} ProtoHeartbeatEvent instance
   */
  ProtoHeartbeatEvent.create = function create(properties) {
    return new ProtoHeartbeatEvent(properties);
  };

  /**
   * Encodes the specified ProtoHeartbeatEvent message. Does not implicitly {@link ProtoHeartbeatEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {IProtoHeartbeatEvent} message ProtoHeartbeatEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoHeartbeatEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    return writer;
  };

  /**
   * Encodes the specified ProtoHeartbeatEvent message, length delimited. Does not implicitly {@link ProtoHeartbeatEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {IProtoHeartbeatEvent} message ProtoHeartbeatEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoHeartbeatEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoHeartbeatEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoHeartbeatEvent} ProtoHeartbeatEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoHeartbeatEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoHeartbeatEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoHeartbeatEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoHeartbeatEvent} ProtoHeartbeatEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoHeartbeatEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoHeartbeatEvent message.
   * @function verify
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoHeartbeatEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 50:
        case 51:
        case 52:
        case 53:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoHeartbeatEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoHeartbeatEvent} ProtoHeartbeatEvent
   */
  ProtoHeartbeatEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoHeartbeatEvent) return object;
    var message = new $root.ProtoHeartbeatEvent();
    switch (object.payloadType) {
      case "ERROR_RES":
      case 50:
        message.payloadType = 50;
        break;
      case "HEARTBEAT_EVENT":
      case 51:
        message.payloadType = 51;
        break;
      case "PING_REQ":
      case 52:
        message.payloadType = 52;
        break;
      case "PING_RES":
      case 53:
        message.payloadType = 53;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoHeartbeatEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoHeartbeatEvent
   * @static
   * @param {ProtoHeartbeatEvent} message ProtoHeartbeatEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoHeartbeatEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults)
      object.payloadType = options.enums === String ? "HEARTBEAT_EVENT" : 51;
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoPayloadType[message.payloadType]
          : message.payloadType;
    return object;
  };

  /**
   * Converts this ProtoHeartbeatEvent to JSON.
   * @function toJSON
   * @memberof ProtoHeartbeatEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoHeartbeatEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoHeartbeatEvent;
})();

$root.ProtoPingReq = (function() {
  /**
   * Properties of a ProtoPingReq.
   * @exports IProtoPingReq
   * @interface IProtoPingReq
   * @property {ProtoPayloadType|null} [payloadType] ProtoPingReq payloadType
   * @property {number|Long} timestamp ProtoPingReq timestamp
   */

  /**
   * Constructs a new ProtoPingReq.
   * @exports ProtoPingReq
   * @classdesc Represents a ProtoPingReq.
   * @implements IProtoPingReq
   * @constructor
   * @param {IProtoPingReq=} [properties] Properties to set
   */
  function ProtoPingReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoPingReq payloadType.
   * @member {ProtoPayloadType} payloadType
   * @memberof ProtoPingReq
   * @instance
   */
  ProtoPingReq.prototype.payloadType = 52;

  /**
   * ProtoPingReq timestamp.
   * @member {number|Long} timestamp
   * @memberof ProtoPingReq
   * @instance
   */
  ProtoPingReq.prototype.timestamp = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * Creates a new ProtoPingReq instance using the specified properties.
   * @function create
   * @memberof ProtoPingReq
   * @static
   * @param {IProtoPingReq=} [properties] Properties to set
   * @returns {ProtoPingReq} ProtoPingReq instance
   */
  ProtoPingReq.create = function create(properties) {
    return new ProtoPingReq(properties);
  };

  /**
   * Encodes the specified ProtoPingReq message. Does not implicitly {@link ProtoPingReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoPingReq
   * @static
   * @param {IProtoPingReq} message ProtoPingReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoPingReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 0 =*/ 16).uint64(message.timestamp);
    return writer;
  };

  /**
   * Encodes the specified ProtoPingReq message, length delimited. Does not implicitly {@link ProtoPingReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoPingReq
   * @static
   * @param {IProtoPingReq} message ProtoPingReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoPingReq.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoPingReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoPingReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoPingReq} ProtoPingReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoPingReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoPingReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.timestamp = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("timestamp"))
      throw $util.ProtocolError("missing required 'timestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoPingReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoPingReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoPingReq} ProtoPingReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoPingReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoPingReq message.
   * @function verify
   * @memberof ProtoPingReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoPingReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 50:
        case 51:
        case 52:
        case 53:
          break;
      }
    if (
      !$util.isInteger(message.timestamp) &&
      !(
        message.timestamp &&
        $util.isInteger(message.timestamp.low) &&
        $util.isInteger(message.timestamp.high)
      )
    )
      return "timestamp: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoPingReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoPingReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoPingReq} ProtoPingReq
   */
  ProtoPingReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoPingReq) return object;
    var message = new $root.ProtoPingReq();
    switch (object.payloadType) {
      case "ERROR_RES":
      case 50:
        message.payloadType = 50;
        break;
      case "HEARTBEAT_EVENT":
      case 51:
        message.payloadType = 51;
        break;
      case "PING_REQ":
      case 52:
        message.payloadType = 52;
        break;
      case "PING_RES":
      case 53:
        message.payloadType = 53;
        break;
    }
    if (object.timestamp != null)
      if ($util.Long)
        (message.timestamp = $util.Long.fromValue(
          object.timestamp
        )).unsigned = true;
      else if (typeof object.timestamp === "string")
        message.timestamp = parseInt(object.timestamp, 10);
      else if (typeof object.timestamp === "number")
        message.timestamp = object.timestamp;
      else if (typeof object.timestamp === "object")
        message.timestamp = new $util.LongBits(
          object.timestamp.low >>> 0,
          object.timestamp.high >>> 0
        ).toNumber(true);
    return message;
  };

  /**
   * Creates a plain object from a ProtoPingReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoPingReq
   * @static
   * @param {ProtoPingReq} message ProtoPingReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoPingReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType = options.enums === String ? "PING_REQ" : 52;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.timestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.timestamp = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoPayloadType[message.payloadType]
          : message.payloadType;
    if (message.timestamp != null && message.hasOwnProperty("timestamp"))
      if (typeof message.timestamp === "number")
        object.timestamp =
          options.longs === String
            ? String(message.timestamp)
            : message.timestamp;
      else
        object.timestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.timestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.timestamp.low >>> 0,
                message.timestamp.high >>> 0
              ).toNumber(true)
            : message.timestamp;
    return object;
  };

  /**
   * Converts this ProtoPingReq to JSON.
   * @function toJSON
   * @memberof ProtoPingReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoPingReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoPingReq;
})();

$root.ProtoPingRes = (function() {
  /**
   * Properties of a ProtoPingRes.
   * @exports IProtoPingRes
   * @interface IProtoPingRes
   * @property {ProtoPayloadType|null} [payloadType] ProtoPingRes payloadType
   * @property {number|Long} timestamp ProtoPingRes timestamp
   */

  /**
   * Constructs a new ProtoPingRes.
   * @exports ProtoPingRes
   * @classdesc Represents a ProtoPingRes.
   * @implements IProtoPingRes
   * @constructor
   * @param {IProtoPingRes=} [properties] Properties to set
   */
  function ProtoPingRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoPingRes payloadType.
   * @member {ProtoPayloadType} payloadType
   * @memberof ProtoPingRes
   * @instance
   */
  ProtoPingRes.prototype.payloadType = 53;

  /**
   * ProtoPingRes timestamp.
   * @member {number|Long} timestamp
   * @memberof ProtoPingRes
   * @instance
   */
  ProtoPingRes.prototype.timestamp = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * Creates a new ProtoPingRes instance using the specified properties.
   * @function create
   * @memberof ProtoPingRes
   * @static
   * @param {IProtoPingRes=} [properties] Properties to set
   * @returns {ProtoPingRes} ProtoPingRes instance
   */
  ProtoPingRes.create = function create(properties) {
    return new ProtoPingRes(properties);
  };

  /**
   * Encodes the specified ProtoPingRes message. Does not implicitly {@link ProtoPingRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoPingRes
   * @static
   * @param {IProtoPingRes} message ProtoPingRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoPingRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 0 =*/ 16).uint64(message.timestamp);
    return writer;
  };

  /**
   * Encodes the specified ProtoPingRes message, length delimited. Does not implicitly {@link ProtoPingRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoPingRes
   * @static
   * @param {IProtoPingRes} message ProtoPingRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoPingRes.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoPingRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoPingRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoPingRes} ProtoPingRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoPingRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoPingRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.timestamp = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("timestamp"))
      throw $util.ProtocolError("missing required 'timestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoPingRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoPingRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoPingRes} ProtoPingRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoPingRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoPingRes message.
   * @function verify
   * @memberof ProtoPingRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoPingRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 50:
        case 51:
        case 52:
        case 53:
          break;
      }
    if (
      !$util.isInteger(message.timestamp) &&
      !(
        message.timestamp &&
        $util.isInteger(message.timestamp.low) &&
        $util.isInteger(message.timestamp.high)
      )
    )
      return "timestamp: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoPingRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoPingRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoPingRes} ProtoPingRes
   */
  ProtoPingRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoPingRes) return object;
    var message = new $root.ProtoPingRes();
    switch (object.payloadType) {
      case "ERROR_RES":
      case 50:
        message.payloadType = 50;
        break;
      case "HEARTBEAT_EVENT":
      case 51:
        message.payloadType = 51;
        break;
      case "PING_REQ":
      case 52:
        message.payloadType = 52;
        break;
      case "PING_RES":
      case 53:
        message.payloadType = 53;
        break;
    }
    if (object.timestamp != null)
      if ($util.Long)
        (message.timestamp = $util.Long.fromValue(
          object.timestamp
        )).unsigned = true;
      else if (typeof object.timestamp === "string")
        message.timestamp = parseInt(object.timestamp, 10);
      else if (typeof object.timestamp === "number")
        message.timestamp = object.timestamp;
      else if (typeof object.timestamp === "object")
        message.timestamp = new $util.LongBits(
          object.timestamp.low >>> 0,
          object.timestamp.high >>> 0
        ).toNumber(true);
    return message;
  };

  /**
   * Creates a plain object from a ProtoPingRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoPingRes
   * @static
   * @param {ProtoPingRes} message ProtoPingRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoPingRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType = options.enums === String ? "PING_RES" : 53;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.timestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.timestamp = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoPayloadType[message.payloadType]
          : message.payloadType;
    if (message.timestamp != null && message.hasOwnProperty("timestamp"))
      if (typeof message.timestamp === "number")
        object.timestamp =
          options.longs === String
            ? String(message.timestamp)
            : message.timestamp;
      else
        object.timestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.timestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.timestamp.low >>> 0,
                message.timestamp.high >>> 0
              ).toNumber(true)
            : message.timestamp;
    return object;
  };

  /**
   * Converts this ProtoPingRes to JSON.
   * @function toJSON
   * @memberof ProtoPingRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoPingRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoPingRes;
})();

/**
 * ProtoPayloadType enum.
 * @exports ProtoPayloadType
 * @enum {string}
 * @property {number} ERROR_RES=50 ERROR_RES value
 * @property {number} HEARTBEAT_EVENT=51 HEARTBEAT_EVENT value
 * @property {number} PING_REQ=52 PING_REQ value
 * @property {number} PING_RES=53 PING_RES value
 */
$root.ProtoPayloadType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[50] = "ERROR_RES")] = 50;
  values[(valuesById[51] = "HEARTBEAT_EVENT")] = 51;
  values[(valuesById[52] = "PING_REQ")] = 52;
  values[(valuesById[53] = "PING_RES")] = 53;
  return values;
})();

/**
 * ProtoErrorCode enum.
 * @exports ProtoErrorCode
 * @enum {string}
 * @property {number} UNKNOWN_ERROR=1 UNKNOWN_ERROR value
 * @property {number} UNSUPPORTED_MESSAGE=2 UNSUPPORTED_MESSAGE value
 * @property {number} INVALID_REQUEST=3 INVALID_REQUEST value
 * @property {number} WRONG_PASSWORD=4 WRONG_PASSWORD value
 * @property {number} TIMEOUT_ERROR=5 TIMEOUT_ERROR value
 * @property {number} ENTITY_NOT_FOUND=6 ENTITY_NOT_FOUND value
 * @property {number} CANT_ROUTE_REQUEST=7 CANT_ROUTE_REQUEST value
 * @property {number} FRAME_TOO_LONG=8 FRAME_TOO_LONG value
 * @property {number} MARKET_CLOSED=9 MARKET_CLOSED value
 * @property {number} CONCURRENT_MODIFICATION=10 CONCURRENT_MODIFICATION value
 */
$root.ProtoErrorCode = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "UNKNOWN_ERROR")] = 1;
  values[(valuesById[2] = "UNSUPPORTED_MESSAGE")] = 2;
  values[(valuesById[3] = "INVALID_REQUEST")] = 3;
  values[(valuesById[4] = "WRONG_PASSWORD")] = 4;
  values[(valuesById[5] = "TIMEOUT_ERROR")] = 5;
  values[(valuesById[6] = "ENTITY_NOT_FOUND")] = 6;
  values[(valuesById[7] = "CANT_ROUTE_REQUEST")] = 7;
  values[(valuesById[8] = "FRAME_TOO_LONG")] = 8;
  values[(valuesById[9] = "MARKET_CLOSED")] = 9;
  values[(valuesById[10] = "CONCURRENT_MODIFICATION")] = 10;
  return values;
})();

$root.ProtoIntRange = (function() {
  /**
   * Properties of a ProtoIntRange.
   * @exports IProtoIntRange
   * @interface IProtoIntRange
   * @property {number|null} [from] ProtoIntRange from
   * @property {number|null} [to] ProtoIntRange to
   */

  /**
   * Constructs a new ProtoIntRange.
   * @exports ProtoIntRange
   * @classdesc Represents a ProtoIntRange.
   * @implements IProtoIntRange
   * @constructor
   * @param {IProtoIntRange=} [properties] Properties to set
   */
  function ProtoIntRange(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoIntRange from.
   * @member {number} from
   * @memberof ProtoIntRange
   * @instance
   */
  ProtoIntRange.prototype.from = 0;

  /**
   * ProtoIntRange to.
   * @member {number} to
   * @memberof ProtoIntRange
   * @instance
   */
  ProtoIntRange.prototype.to = 0;

  /**
   * Creates a new ProtoIntRange instance using the specified properties.
   * @function create
   * @memberof ProtoIntRange
   * @static
   * @param {IProtoIntRange=} [properties] Properties to set
   * @returns {ProtoIntRange} ProtoIntRange instance
   */
  ProtoIntRange.create = function create(properties) {
    return new ProtoIntRange(properties);
  };

  /**
   * Encodes the specified ProtoIntRange message. Does not implicitly {@link ProtoIntRange.verify|verify} messages.
   * @function encode
   * @memberof ProtoIntRange
   * @static
   * @param {IProtoIntRange} message ProtoIntRange message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoIntRange.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.from != null && message.hasOwnProperty("from"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.from);
    if (message.to != null && message.hasOwnProperty("to"))
      writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.to);
    return writer;
  };

  /**
   * Encodes the specified ProtoIntRange message, length delimited. Does not implicitly {@link ProtoIntRange.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoIntRange
   * @static
   * @param {IProtoIntRange} message ProtoIntRange message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoIntRange.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoIntRange message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoIntRange
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoIntRange} ProtoIntRange
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoIntRange.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoIntRange();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.from = reader.int32();
          break;
        case 2:
          message.to = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoIntRange message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoIntRange
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoIntRange} ProtoIntRange
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoIntRange.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoIntRange message.
   * @function verify
   * @memberof ProtoIntRange
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoIntRange.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.from != null && message.hasOwnProperty("from"))
      if (!$util.isInteger(message.from)) return "from: integer expected";
    if (message.to != null && message.hasOwnProperty("to"))
      if (!$util.isInteger(message.to)) return "to: integer expected";
    return null;
  };

  /**
   * Creates a ProtoIntRange message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoIntRange
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoIntRange} ProtoIntRange
   */
  ProtoIntRange.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoIntRange) return object;
    var message = new $root.ProtoIntRange();
    if (object.from != null) message.from = object.from | 0;
    if (object.to != null) message.to = object.to | 0;
    return message;
  };

  /**
   * Creates a plain object from a ProtoIntRange message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoIntRange
   * @static
   * @param {ProtoIntRange} message ProtoIntRange
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoIntRange.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.from = 0;
      object.to = 0;
    }
    if (message.from != null && message.hasOwnProperty("from"))
      object.from = message.from;
    if (message.to != null && message.hasOwnProperty("to"))
      object.to = message.to;
    return object;
  };

  /**
   * Converts this ProtoIntRange to JSON.
   * @function toJSON
   * @memberof ProtoIntRange
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoIntRange.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoIntRange;
})();

$root.ProtoLongRange = (function() {
  /**
   * Properties of a ProtoLongRange.
   * @exports IProtoLongRange
   * @interface IProtoLongRange
   * @property {number|Long|null} [from] ProtoLongRange from
   * @property {number|Long|null} [to] ProtoLongRange to
   */

  /**
   * Constructs a new ProtoLongRange.
   * @exports ProtoLongRange
   * @classdesc Represents a ProtoLongRange.
   * @implements IProtoLongRange
   * @constructor
   * @param {IProtoLongRange=} [properties] Properties to set
   */
  function ProtoLongRange(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoLongRange from.
   * @member {number|Long} from
   * @memberof ProtoLongRange
   * @instance
   */
  ProtoLongRange.prototype.from = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoLongRange to.
   * @member {number|Long} to
   * @memberof ProtoLongRange
   * @instance
   */
  ProtoLongRange.prototype.to = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoLongRange instance using the specified properties.
   * @function create
   * @memberof ProtoLongRange
   * @static
   * @param {IProtoLongRange=} [properties] Properties to set
   * @returns {ProtoLongRange} ProtoLongRange instance
   */
  ProtoLongRange.create = function create(properties) {
    return new ProtoLongRange(properties);
  };

  /**
   * Encodes the specified ProtoLongRange message. Does not implicitly {@link ProtoLongRange.verify|verify} messages.
   * @function encode
   * @memberof ProtoLongRange
   * @static
   * @param {IProtoLongRange} message ProtoLongRange message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoLongRange.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.from != null && message.hasOwnProperty("from"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.from);
    if (message.to != null && message.hasOwnProperty("to"))
      writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.to);
    return writer;
  };

  /**
   * Encodes the specified ProtoLongRange message, length delimited. Does not implicitly {@link ProtoLongRange.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoLongRange
   * @static
   * @param {IProtoLongRange} message ProtoLongRange message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoLongRange.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoLongRange message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoLongRange
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoLongRange} ProtoLongRange
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoLongRange.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoLongRange();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.from = reader.int64();
          break;
        case 2:
          message.to = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoLongRange message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoLongRange
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoLongRange} ProtoLongRange
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoLongRange.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoLongRange message.
   * @function verify
   * @memberof ProtoLongRange
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoLongRange.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.from != null && message.hasOwnProperty("from"))
      if (
        !$util.isInteger(message.from) &&
        !(
          message.from &&
          $util.isInteger(message.from.low) &&
          $util.isInteger(message.from.high)
        )
      )
        return "from: integer|Long expected";
    if (message.to != null && message.hasOwnProperty("to"))
      if (
        !$util.isInteger(message.to) &&
        !(
          message.to &&
          $util.isInteger(message.to.low) &&
          $util.isInteger(message.to.high)
        )
      )
        return "to: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoLongRange message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoLongRange
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoLongRange} ProtoLongRange
   */
  ProtoLongRange.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoLongRange) return object;
    var message = new $root.ProtoLongRange();
    if (object.from != null)
      if ($util.Long)
        (message.from = $util.Long.fromValue(object.from)).unsigned = false;
      else if (typeof object.from === "string")
        message.from = parseInt(object.from, 10);
      else if (typeof object.from === "number") message.from = object.from;
      else if (typeof object.from === "object")
        message.from = new $util.LongBits(
          object.from.low >>> 0,
          object.from.high >>> 0
        ).toNumber();
    if (object.to != null)
      if ($util.Long)
        (message.to = $util.Long.fromValue(object.to)).unsigned = false;
      else if (typeof object.to === "string")
        message.to = parseInt(object.to, 10);
      else if (typeof object.to === "number") message.to = object.to;
      else if (typeof object.to === "object")
        message.to = new $util.LongBits(
          object.to.low >>> 0,
          object.to.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoLongRange message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoLongRange
   * @static
   * @param {ProtoLongRange} message ProtoLongRange
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoLongRange.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.from =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.from = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.to =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.to = options.longs === String ? "0" : 0;
    }
    if (message.from != null && message.hasOwnProperty("from"))
      if (typeof message.from === "number")
        object.from =
          options.longs === String ? String(message.from) : message.from;
      else
        object.from =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.from)
            : options.longs === Number
            ? new $util.LongBits(
                message.from.low >>> 0,
                message.from.high >>> 0
              ).toNumber()
            : message.from;
    if (message.to != null && message.hasOwnProperty("to"))
      if (typeof message.to === "number")
        object.to = options.longs === String ? String(message.to) : message.to;
      else
        object.to =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.to)
            : options.longs === Number
            ? new $util.LongBits(
                message.to.low >>> 0,
                message.to.high >>> 0
              ).toNumber()
            : message.to;
    return object;
  };

  /**
   * Converts this ProtoLongRange to JSON.
   * @function toJSON
   * @memberof ProtoLongRange
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoLongRange.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoLongRange;
})();

$root.ProtoDoubleRange = (function() {
  /**
   * Properties of a ProtoDoubleRange.
   * @exports IProtoDoubleRange
   * @interface IProtoDoubleRange
   * @property {number|null} [from] ProtoDoubleRange from
   * @property {number|null} [to] ProtoDoubleRange to
   */

  /**
   * Constructs a new ProtoDoubleRange.
   * @exports ProtoDoubleRange
   * @classdesc Represents a ProtoDoubleRange.
   * @implements IProtoDoubleRange
   * @constructor
   * @param {IProtoDoubleRange=} [properties] Properties to set
   */
  function ProtoDoubleRange(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoDoubleRange from.
   * @member {number} from
   * @memberof ProtoDoubleRange
   * @instance
   */
  ProtoDoubleRange.prototype.from = 0;

  /**
   * ProtoDoubleRange to.
   * @member {number} to
   * @memberof ProtoDoubleRange
   * @instance
   */
  ProtoDoubleRange.prototype.to = 0;

  /**
   * Creates a new ProtoDoubleRange instance using the specified properties.
   * @function create
   * @memberof ProtoDoubleRange
   * @static
   * @param {IProtoDoubleRange=} [properties] Properties to set
   * @returns {ProtoDoubleRange} ProtoDoubleRange instance
   */
  ProtoDoubleRange.create = function create(properties) {
    return new ProtoDoubleRange(properties);
  };

  /**
   * Encodes the specified ProtoDoubleRange message. Does not implicitly {@link ProtoDoubleRange.verify|verify} messages.
   * @function encode
   * @memberof ProtoDoubleRange
   * @static
   * @param {IProtoDoubleRange} message ProtoDoubleRange message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoDoubleRange.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.from != null && message.hasOwnProperty("from"))
      writer.uint32(/* id 1, wireType 1 =*/ 9).double(message.from);
    if (message.to != null && message.hasOwnProperty("to"))
      writer.uint32(/* id 2, wireType 1 =*/ 17).double(message.to);
    return writer;
  };

  /**
   * Encodes the specified ProtoDoubleRange message, length delimited. Does not implicitly {@link ProtoDoubleRange.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoDoubleRange
   * @static
   * @param {IProtoDoubleRange} message ProtoDoubleRange message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoDoubleRange.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoDoubleRange message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoDoubleRange
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoDoubleRange} ProtoDoubleRange
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoDoubleRange.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoDoubleRange();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.from = reader.double();
          break;
        case 2:
          message.to = reader.double();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoDoubleRange message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoDoubleRange
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoDoubleRange} ProtoDoubleRange
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoDoubleRange.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoDoubleRange message.
   * @function verify
   * @memberof ProtoDoubleRange
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoDoubleRange.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.from != null && message.hasOwnProperty("from"))
      if (typeof message.from !== "number") return "from: number expected";
    if (message.to != null && message.hasOwnProperty("to"))
      if (typeof message.to !== "number") return "to: number expected";
    return null;
  };

  /**
   * Creates a ProtoDoubleRange message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoDoubleRange
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoDoubleRange} ProtoDoubleRange
   */
  ProtoDoubleRange.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoDoubleRange) return object;
    var message = new $root.ProtoDoubleRange();
    if (object.from != null) message.from = Number(object.from);
    if (object.to != null) message.to = Number(object.to);
    return message;
  };

  /**
   * Creates a plain object from a ProtoDoubleRange message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoDoubleRange
   * @static
   * @param {ProtoDoubleRange} message ProtoDoubleRange
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoDoubleRange.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.from = 0;
      object.to = 0;
    }
    if (message.from != null && message.hasOwnProperty("from"))
      object.from =
        options.json && !isFinite(message.from)
          ? String(message.from)
          : message.from;
    if (message.to != null && message.hasOwnProperty("to"))
      object.to =
        options.json && !isFinite(message.to) ? String(message.to) : message.to;
    return object;
  };

  /**
   * Converts this ProtoDoubleRange to JSON.
   * @function toJSON
   * @memberof ProtoDoubleRange
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoDoubleRange.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoDoubleRange;
})();

/**
 * ProtoTradeSide enum.
 * @exports ProtoTradeSide
 * @enum {string}
 * @property {number} BUY=1 BUY value
 * @property {number} SELL=2 SELL value
 */
$root.ProtoTradeSide = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "BUY")] = 1;
  values[(valuesById[2] = "SELL")] = 2;
  return values;
})();

/**
 * ProtoQuoteType enum.
 * @exports ProtoQuoteType
 * @enum {string}
 * @property {number} BID=1 BID value
 * @property {number} ASK=2 ASK value
 */
$root.ProtoQuoteType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "BID")] = 1;
  values[(valuesById[2] = "ASK")] = 2;
  return values;
})();

/**
 * ProtoTimeInForce enum.
 * @exports ProtoTimeInForce
 * @enum {string}
 * @property {number} GOOD_TILL_DATE=1 GOOD_TILL_DATE value
 * @property {number} GOOD_TILL_CANCEL=2 GOOD_TILL_CANCEL value
 * @property {number} IMMEDIATE_OR_CANCEL=3 IMMEDIATE_OR_CANCEL value
 */
$root.ProtoTimeInForce = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "GOOD_TILL_DATE")] = 1;
  values[(valuesById[2] = "GOOD_TILL_CANCEL")] = 2;
  values[(valuesById[3] = "IMMEDIATE_OR_CANCEL")] = 3;
  return values;
})();

$root.ProtoOAApplicationAuthReq = (function() {
  /**
   * Properties of a ProtoOAApplicationAuthReq.
   * @exports IProtoOAApplicationAuthReq
   * @interface IProtoOAApplicationAuthReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAApplicationAuthReq payloadType
   * @property {string} clientId ProtoOAApplicationAuthReq clientId
   * @property {string} clientSecret ProtoOAApplicationAuthReq clientSecret
   */

  /**
   * Constructs a new ProtoOAApplicationAuthReq.
   * @exports ProtoOAApplicationAuthReq
   * @classdesc Request for the authorizing an application to work with the cTrader platform Proxies.
   * @implements IProtoOAApplicationAuthReq
   * @constructor
   * @param {IProtoOAApplicationAuthReq=} [properties] Properties to set
   */
  function ProtoOAApplicationAuthReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAApplicationAuthReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAApplicationAuthReq
   * @instance
   */
  ProtoOAApplicationAuthReq.prototype.payloadType = 2100;

  /**
   * ProtoOAApplicationAuthReq clientId.
   * @member {string} clientId
   * @memberof ProtoOAApplicationAuthReq
   * @instance
   */
  ProtoOAApplicationAuthReq.prototype.clientId = "";

  /**
   * ProtoOAApplicationAuthReq clientSecret.
   * @member {string} clientSecret
   * @memberof ProtoOAApplicationAuthReq
   * @instance
   */
  ProtoOAApplicationAuthReq.prototype.clientSecret = "";

  /**
   * Creates a new ProtoOAApplicationAuthReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {IProtoOAApplicationAuthReq=} [properties] Properties to set
   * @returns {ProtoOAApplicationAuthReq} ProtoOAApplicationAuthReq instance
   */
  ProtoOAApplicationAuthReq.create = function create(properties) {
    return new ProtoOAApplicationAuthReq(properties);
  };

  /**
   * Encodes the specified ProtoOAApplicationAuthReq message. Does not implicitly {@link ProtoOAApplicationAuthReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {IProtoOAApplicationAuthReq} message ProtoOAApplicationAuthReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAApplicationAuthReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.clientId);
    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.clientSecret);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAApplicationAuthReq message, length delimited. Does not implicitly {@link ProtoOAApplicationAuthReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {IProtoOAApplicationAuthReq} message ProtoOAApplicationAuthReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAApplicationAuthReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAApplicationAuthReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAApplicationAuthReq} ProtoOAApplicationAuthReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAApplicationAuthReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAApplicationAuthReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.clientId = reader.string();
          break;
        case 3:
          message.clientSecret = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("clientId"))
      throw $util.ProtocolError("missing required 'clientId'", {
        instance: message
      });
    if (!message.hasOwnProperty("clientSecret"))
      throw $util.ProtocolError("missing required 'clientSecret'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAApplicationAuthReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAApplicationAuthReq} ProtoOAApplicationAuthReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAApplicationAuthReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAApplicationAuthReq message.
   * @function verify
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAApplicationAuthReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (!$util.isString(message.clientId)) return "clientId: string expected";
    if (!$util.isString(message.clientSecret))
      return "clientSecret: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAApplicationAuthReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAApplicationAuthReq} ProtoOAApplicationAuthReq
   */
  ProtoOAApplicationAuthReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAApplicationAuthReq) return object;
    var message = new $root.ProtoOAApplicationAuthReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.clientId != null) message.clientId = String(object.clientId);
    if (object.clientSecret != null)
      message.clientSecret = String(object.clientSecret);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAApplicationAuthReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAApplicationAuthReq
   * @static
   * @param {ProtoOAApplicationAuthReq} message ProtoOAApplicationAuthReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAApplicationAuthReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_APPLICATION_AUTH_REQ" : 2100;
      object.clientId = "";
      object.clientSecret = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.clientId != null && message.hasOwnProperty("clientId"))
      object.clientId = message.clientId;
    if (message.clientSecret != null && message.hasOwnProperty("clientSecret"))
      object.clientSecret = message.clientSecret;
    return object;
  };

  /**
   * Converts this ProtoOAApplicationAuthReq to JSON.
   * @function toJSON
   * @memberof ProtoOAApplicationAuthReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAApplicationAuthReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAApplicationAuthReq;
})();

$root.ProtoOAApplicationAuthRes = (function() {
  /**
   * Properties of a ProtoOAApplicationAuthRes.
   * @exports IProtoOAApplicationAuthRes
   * @interface IProtoOAApplicationAuthRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAApplicationAuthRes payloadType
   */

  /**
   * Constructs a new ProtoOAApplicationAuthRes.
   * @exports ProtoOAApplicationAuthRes
   * @classdesc Response to the ProtoOAApplicationAuthReq request.
   * @implements IProtoOAApplicationAuthRes
   * @constructor
   * @param {IProtoOAApplicationAuthRes=} [properties] Properties to set
   */
  function ProtoOAApplicationAuthRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAApplicationAuthRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAApplicationAuthRes
   * @instance
   */
  ProtoOAApplicationAuthRes.prototype.payloadType = 2101;

  /**
   * Creates a new ProtoOAApplicationAuthRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {IProtoOAApplicationAuthRes=} [properties] Properties to set
   * @returns {ProtoOAApplicationAuthRes} ProtoOAApplicationAuthRes instance
   */
  ProtoOAApplicationAuthRes.create = function create(properties) {
    return new ProtoOAApplicationAuthRes(properties);
  };

  /**
   * Encodes the specified ProtoOAApplicationAuthRes message. Does not implicitly {@link ProtoOAApplicationAuthRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {IProtoOAApplicationAuthRes} message ProtoOAApplicationAuthRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAApplicationAuthRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAApplicationAuthRes message, length delimited. Does not implicitly {@link ProtoOAApplicationAuthRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {IProtoOAApplicationAuthRes} message ProtoOAApplicationAuthRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAApplicationAuthRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAApplicationAuthRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAApplicationAuthRes} ProtoOAApplicationAuthRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAApplicationAuthRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAApplicationAuthRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoOAApplicationAuthRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAApplicationAuthRes} ProtoOAApplicationAuthRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAApplicationAuthRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAApplicationAuthRes message.
   * @function verify
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAApplicationAuthRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOAApplicationAuthRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAApplicationAuthRes} ProtoOAApplicationAuthRes
   */
  ProtoOAApplicationAuthRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAApplicationAuthRes) return object;
    var message = new $root.ProtoOAApplicationAuthRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAApplicationAuthRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAApplicationAuthRes
   * @static
   * @param {ProtoOAApplicationAuthRes} message ProtoOAApplicationAuthRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAApplicationAuthRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults)
      object.payloadType =
        options.enums === String ? "PROTO_OA_APPLICATION_AUTH_RES" : 2101;
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    return object;
  };

  /**
   * Converts this ProtoOAApplicationAuthRes to JSON.
   * @function toJSON
   * @memberof ProtoOAApplicationAuthRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAApplicationAuthRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAApplicationAuthRes;
})();

$root.ProtoOAAccountAuthReq = (function() {
  /**
   * Properties of a ProtoOAAccountAuthReq.
   * @exports IProtoOAAccountAuthReq
   * @interface IProtoOAAccountAuthReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAccountAuthReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAccountAuthReq ctidTraderAccountId
   * @property {string} accessToken ProtoOAAccountAuthReq accessToken
   */

  /**
   * Constructs a new ProtoOAAccountAuthReq.
   * @exports ProtoOAAccountAuthReq
   * @classdesc Request for the authorizing trading account session. Requires established authorized connection with the client application using ProtoOAApplicationAuthReq.
   * @implements IProtoOAAccountAuthReq
   * @constructor
   * @param {IProtoOAAccountAuthReq=} [properties] Properties to set
   */
  function ProtoOAAccountAuthReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAccountAuthReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAccountAuthReq
   * @instance
   */
  ProtoOAAccountAuthReq.prototype.payloadType = 2102;

  /**
   * ProtoOAAccountAuthReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAccountAuthReq
   * @instance
   */
  ProtoOAAccountAuthReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAccountAuthReq accessToken.
   * @member {string} accessToken
   * @memberof ProtoOAAccountAuthReq
   * @instance
   */
  ProtoOAAccountAuthReq.prototype.accessToken = "";

  /**
   * Creates a new ProtoOAAccountAuthReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {IProtoOAAccountAuthReq=} [properties] Properties to set
   * @returns {ProtoOAAccountAuthReq} ProtoOAAccountAuthReq instance
   */
  ProtoOAAccountAuthReq.create = function create(properties) {
    return new ProtoOAAccountAuthReq(properties);
  };

  /**
   * Encodes the specified ProtoOAAccountAuthReq message. Does not implicitly {@link ProtoOAAccountAuthReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {IProtoOAAccountAuthReq} message ProtoOAAccountAuthReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountAuthReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.accessToken);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAccountAuthReq message, length delimited. Does not implicitly {@link ProtoOAAccountAuthReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {IProtoOAAccountAuthReq} message ProtoOAAccountAuthReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountAuthReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAccountAuthReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAccountAuthReq} ProtoOAAccountAuthReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountAuthReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAccountAuthReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.accessToken = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("accessToken"))
      throw $util.ProtocolError("missing required 'accessToken'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAccountAuthReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAccountAuthReq} ProtoOAAccountAuthReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountAuthReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAccountAuthReq message.
   * @function verify
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAccountAuthReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (!$util.isString(message.accessToken))
      return "accessToken: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAAccountAuthReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAccountAuthReq} ProtoOAAccountAuthReq
   */
  ProtoOAAccountAuthReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAccountAuthReq) return object;
    var message = new $root.ProtoOAAccountAuthReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.accessToken != null)
      message.accessToken = String(object.accessToken);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAccountAuthReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAccountAuthReq
   * @static
   * @param {ProtoOAAccountAuthReq} message ProtoOAAccountAuthReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAccountAuthReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ACCOUNT_AUTH_REQ" : 2102;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.accessToken = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.accessToken != null && message.hasOwnProperty("accessToken"))
      object.accessToken = message.accessToken;
    return object;
  };

  /**
   * Converts this ProtoOAAccountAuthReq to JSON.
   * @function toJSON
   * @memberof ProtoOAAccountAuthReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAccountAuthReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAccountAuthReq;
})();

$root.ProtoOAAccountAuthRes = (function() {
  /**
   * Properties of a ProtoOAAccountAuthRes.
   * @exports IProtoOAAccountAuthRes
   * @interface IProtoOAAccountAuthRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAccountAuthRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAccountAuthRes ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAAccountAuthRes.
   * @exports ProtoOAAccountAuthRes
   * @classdesc Response to the ProtoOAApplicationAuthRes request.
   * @implements IProtoOAAccountAuthRes
   * @constructor
   * @param {IProtoOAAccountAuthRes=} [properties] Properties to set
   */
  function ProtoOAAccountAuthRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAccountAuthRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAccountAuthRes
   * @instance
   */
  ProtoOAAccountAuthRes.prototype.payloadType = 2103;

  /**
   * ProtoOAAccountAuthRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAccountAuthRes
   * @instance
   */
  ProtoOAAccountAuthRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAAccountAuthRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {IProtoOAAccountAuthRes=} [properties] Properties to set
   * @returns {ProtoOAAccountAuthRes} ProtoOAAccountAuthRes instance
   */
  ProtoOAAccountAuthRes.create = function create(properties) {
    return new ProtoOAAccountAuthRes(properties);
  };

  /**
   * Encodes the specified ProtoOAAccountAuthRes message. Does not implicitly {@link ProtoOAAccountAuthRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {IProtoOAAccountAuthRes} message ProtoOAAccountAuthRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountAuthRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAccountAuthRes message, length delimited. Does not implicitly {@link ProtoOAAccountAuthRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {IProtoOAAccountAuthRes} message ProtoOAAccountAuthRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountAuthRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAccountAuthRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAccountAuthRes} ProtoOAAccountAuthRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountAuthRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAccountAuthRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAccountAuthRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAccountAuthRes} ProtoOAAccountAuthRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountAuthRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAccountAuthRes message.
   * @function verify
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAccountAuthRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAAccountAuthRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAccountAuthRes} ProtoOAAccountAuthRes
   */
  ProtoOAAccountAuthRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAccountAuthRes) return object;
    var message = new $root.ProtoOAAccountAuthRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAccountAuthRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAccountAuthRes
   * @static
   * @param {ProtoOAAccountAuthRes} message ProtoOAAccountAuthRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAccountAuthRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ACCOUNT_AUTH_RES" : 2103;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAAccountAuthRes to JSON.
   * @function toJSON
   * @memberof ProtoOAAccountAuthRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAccountAuthRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAccountAuthRes;
})();

$root.ProtoOAErrorRes = (function() {
  /**
   * Properties of a ProtoOAErrorRes.
   * @exports IProtoOAErrorRes
   * @interface IProtoOAErrorRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAErrorRes payloadType
   * @property {number|Long|null} [ctidTraderAccountId] ProtoOAErrorRes ctidTraderAccountId
   * @property {string} errorCode ProtoOAErrorRes errorCode
   * @property {string|null} [description] ProtoOAErrorRes description
   */

  /**
   * Constructs a new ProtoOAErrorRes.
   * @exports ProtoOAErrorRes
   * @classdesc Generic response when an ERROR occurred.
   * @implements IProtoOAErrorRes
   * @constructor
   * @param {IProtoOAErrorRes=} [properties] Properties to set
   */
  function ProtoOAErrorRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAErrorRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAErrorRes
   * @instance
   */
  ProtoOAErrorRes.prototype.payloadType = 2142;

  /**
   * ProtoOAErrorRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAErrorRes
   * @instance
   */
  ProtoOAErrorRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAErrorRes errorCode.
   * @member {string} errorCode
   * @memberof ProtoOAErrorRes
   * @instance
   */
  ProtoOAErrorRes.prototype.errorCode = "";

  /**
   * ProtoOAErrorRes description.
   * @member {string} description
   * @memberof ProtoOAErrorRes
   * @instance
   */
  ProtoOAErrorRes.prototype.description = "";

  /**
   * Creates a new ProtoOAErrorRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAErrorRes
   * @static
   * @param {IProtoOAErrorRes=} [properties] Properties to set
   * @returns {ProtoOAErrorRes} ProtoOAErrorRes instance
   */
  ProtoOAErrorRes.create = function create(properties) {
    return new ProtoOAErrorRes(properties);
  };

  /**
   * Encodes the specified ProtoOAErrorRes message. Does not implicitly {@link ProtoOAErrorRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAErrorRes
   * @static
   * @param {IProtoOAErrorRes} message ProtoOAErrorRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAErrorRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      writer
        .uint32(/* id 2, wireType 0 =*/ 16)
        .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.errorCode);
    if (message.description != null && message.hasOwnProperty("description"))
      writer.uint32(/* id 4, wireType 2 =*/ 34).string(message.description);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAErrorRes message, length delimited. Does not implicitly {@link ProtoOAErrorRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAErrorRes
   * @static
   * @param {IProtoOAErrorRes} message ProtoOAErrorRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAErrorRes.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAErrorRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAErrorRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAErrorRes} ProtoOAErrorRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAErrorRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAErrorRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.errorCode = reader.string();
          break;
        case 4:
          message.description = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("errorCode"))
      throw $util.ProtocolError("missing required 'errorCode'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAErrorRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAErrorRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAErrorRes} ProtoOAErrorRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAErrorRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAErrorRes message.
   * @function verify
   * @memberof ProtoOAErrorRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAErrorRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (
        !$util.isInteger(message.ctidTraderAccountId) &&
        !(
          message.ctidTraderAccountId &&
          $util.isInteger(message.ctidTraderAccountId.low) &&
          $util.isInteger(message.ctidTraderAccountId.high)
        )
      )
        return "ctidTraderAccountId: integer|Long expected";
    if (!$util.isString(message.errorCode)) return "errorCode: string expected";
    if (message.description != null && message.hasOwnProperty("description"))
      if (!$util.isString(message.description))
        return "description: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAErrorRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAErrorRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAErrorRes} ProtoOAErrorRes
   */
  ProtoOAErrorRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAErrorRes) return object;
    var message = new $root.ProtoOAErrorRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.errorCode != null) message.errorCode = String(object.errorCode);
    if (object.description != null)
      message.description = String(object.description);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAErrorRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAErrorRes
   * @static
   * @param {ProtoOAErrorRes} message ProtoOAErrorRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAErrorRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ERROR_RES" : 2142;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.errorCode = "";
      object.description = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.errorCode != null && message.hasOwnProperty("errorCode"))
      object.errorCode = message.errorCode;
    if (message.description != null && message.hasOwnProperty("description"))
      object.description = message.description;
    return object;
  };

  /**
   * Converts this ProtoOAErrorRes to JSON.
   * @function toJSON
   * @memberof ProtoOAErrorRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAErrorRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAErrorRes;
})();

$root.ProtoOAClientDisconnectEvent = (function() {
  /**
   * Properties of a ProtoOAClientDisconnectEvent.
   * @exports IProtoOAClientDisconnectEvent
   * @interface IProtoOAClientDisconnectEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAClientDisconnectEvent payloadType
   * @property {string|null} [reason] ProtoOAClientDisconnectEvent reason
   */

  /**
   * Constructs a new ProtoOAClientDisconnectEvent.
   * @exports ProtoOAClientDisconnectEvent
   * @classdesc The event that is sent when the connection with the client application is cancelled by the server. All the sessions for the traders' accounts will be terminated.
   * @implements IProtoOAClientDisconnectEvent
   * @constructor
   * @param {IProtoOAClientDisconnectEvent=} [properties] Properties to set
   */
  function ProtoOAClientDisconnectEvent(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAClientDisconnectEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAClientDisconnectEvent
   * @instance
   */
  ProtoOAClientDisconnectEvent.prototype.payloadType = 2148;

  /**
   * ProtoOAClientDisconnectEvent reason.
   * @member {string} reason
   * @memberof ProtoOAClientDisconnectEvent
   * @instance
   */
  ProtoOAClientDisconnectEvent.prototype.reason = "";

  /**
   * Creates a new ProtoOAClientDisconnectEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {IProtoOAClientDisconnectEvent=} [properties] Properties to set
   * @returns {ProtoOAClientDisconnectEvent} ProtoOAClientDisconnectEvent instance
   */
  ProtoOAClientDisconnectEvent.create = function create(properties) {
    return new ProtoOAClientDisconnectEvent(properties);
  };

  /**
   * Encodes the specified ProtoOAClientDisconnectEvent message. Does not implicitly {@link ProtoOAClientDisconnectEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {IProtoOAClientDisconnectEvent} message ProtoOAClientDisconnectEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAClientDisconnectEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    if (message.reason != null && message.hasOwnProperty("reason"))
      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.reason);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAClientDisconnectEvent message, length delimited. Does not implicitly {@link ProtoOAClientDisconnectEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {IProtoOAClientDisconnectEvent} message ProtoOAClientDisconnectEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAClientDisconnectEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAClientDisconnectEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAClientDisconnectEvent} ProtoOAClientDisconnectEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAClientDisconnectEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAClientDisconnectEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.reason = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoOAClientDisconnectEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAClientDisconnectEvent} ProtoOAClientDisconnectEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAClientDisconnectEvent.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAClientDisconnectEvent message.
   * @function verify
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAClientDisconnectEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (message.reason != null && message.hasOwnProperty("reason"))
      if (!$util.isString(message.reason)) return "reason: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAClientDisconnectEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAClientDisconnectEvent} ProtoOAClientDisconnectEvent
   */
  ProtoOAClientDisconnectEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAClientDisconnectEvent) return object;
    var message = new $root.ProtoOAClientDisconnectEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.reason != null) message.reason = String(object.reason);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAClientDisconnectEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAClientDisconnectEvent
   * @static
   * @param {ProtoOAClientDisconnectEvent} message ProtoOAClientDisconnectEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAClientDisconnectEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_CLIENT_DISCONNECT_EVENT" : 2148;
      object.reason = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.reason != null && message.hasOwnProperty("reason"))
      object.reason = message.reason;
    return object;
  };

  /**
   * Converts this ProtoOAClientDisconnectEvent to JSON.
   * @function toJSON
   * @memberof ProtoOAClientDisconnectEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAClientDisconnectEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAClientDisconnectEvent;
})();

$root.ProtoOAAccountsTokenInvalidatedEvent = (function() {
  /**
   * Properties of a ProtoOAAccountsTokenInvalidatedEvent.
   * @exports IProtoOAAccountsTokenInvalidatedEvent
   * @interface IProtoOAAccountsTokenInvalidatedEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAccountsTokenInvalidatedEvent payloadType
   * @property {Array.<number|Long>|null} [ctidTraderAccountIds] ProtoOAAccountsTokenInvalidatedEvent ctidTraderAccountIds
   * @property {string|null} [reason] ProtoOAAccountsTokenInvalidatedEvent reason
   */

  /**
   * Constructs a new ProtoOAAccountsTokenInvalidatedEvent.
   * @exports ProtoOAAccountsTokenInvalidatedEvent
   * @classdesc Event that is sent when a session to a specific trader's account is terminated by the server but the existing connections with the other trader's accounts are maintained.
   * @implements IProtoOAAccountsTokenInvalidatedEvent
   * @constructor
   * @param {IProtoOAAccountsTokenInvalidatedEvent=} [properties] Properties to set
   */
  function ProtoOAAccountsTokenInvalidatedEvent(properties) {
    this.ctidTraderAccountIds = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAccountsTokenInvalidatedEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @instance
   */
  ProtoOAAccountsTokenInvalidatedEvent.prototype.payloadType = 2147;

  /**
   * ProtoOAAccountsTokenInvalidatedEvent ctidTraderAccountIds.
   * @member {Array.<number|Long>} ctidTraderAccountIds
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @instance
   */
  ProtoOAAccountsTokenInvalidatedEvent.prototype.ctidTraderAccountIds =
    $util.emptyArray;

  /**
   * ProtoOAAccountsTokenInvalidatedEvent reason.
   * @member {string} reason
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @instance
   */
  ProtoOAAccountsTokenInvalidatedEvent.prototype.reason = "";

  /**
   * Creates a new ProtoOAAccountsTokenInvalidatedEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {IProtoOAAccountsTokenInvalidatedEvent=} [properties] Properties to set
   * @returns {ProtoOAAccountsTokenInvalidatedEvent} ProtoOAAccountsTokenInvalidatedEvent instance
   */
  ProtoOAAccountsTokenInvalidatedEvent.create = function create(properties) {
    return new ProtoOAAccountsTokenInvalidatedEvent(properties);
  };

  /**
   * Encodes the specified ProtoOAAccountsTokenInvalidatedEvent message. Does not implicitly {@link ProtoOAAccountsTokenInvalidatedEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {IProtoOAAccountsTokenInvalidatedEvent} message ProtoOAAccountsTokenInvalidatedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountsTokenInvalidatedEvent.encode = function encode(
    message,
    writer
  ) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    if (
      message.ctidTraderAccountIds != null &&
      message.ctidTraderAccountIds.length
    )
      for (var i = 0; i < message.ctidTraderAccountIds.length; ++i)
        writer
          .uint32(/* id 2, wireType 0 =*/ 16)
          .int64(message.ctidTraderAccountIds[i]);
    if (message.reason != null && message.hasOwnProperty("reason"))
      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.reason);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAccountsTokenInvalidatedEvent message, length delimited. Does not implicitly {@link ProtoOAAccountsTokenInvalidatedEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {IProtoOAAccountsTokenInvalidatedEvent} message ProtoOAAccountsTokenInvalidatedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountsTokenInvalidatedEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAccountsTokenInvalidatedEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAccountsTokenInvalidatedEvent} ProtoOAAccountsTokenInvalidatedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountsTokenInvalidatedEvent.decode = function decode(
    reader,
    length
  ) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAccountsTokenInvalidatedEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          if (
            !(
              message.ctidTraderAccountIds &&
              message.ctidTraderAccountIds.length
            )
          )
            message.ctidTraderAccountIds = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2)
              message.ctidTraderAccountIds.push(reader.int64());
          } else message.ctidTraderAccountIds.push(reader.int64());
          break;
        case 3:
          message.reason = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoOAAccountsTokenInvalidatedEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAccountsTokenInvalidatedEvent} ProtoOAAccountsTokenInvalidatedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountsTokenInvalidatedEvent.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAccountsTokenInvalidatedEvent message.
   * @function verify
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAccountsTokenInvalidatedEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      message.ctidTraderAccountIds != null &&
      message.hasOwnProperty("ctidTraderAccountIds")
    ) {
      if (!Array.isArray(message.ctidTraderAccountIds))
        return "ctidTraderAccountIds: array expected";
      for (var i = 0; i < message.ctidTraderAccountIds.length; ++i)
        if (
          !$util.isInteger(message.ctidTraderAccountIds[i]) &&
          !(
            message.ctidTraderAccountIds[i] &&
            $util.isInteger(message.ctidTraderAccountIds[i].low) &&
            $util.isInteger(message.ctidTraderAccountIds[i].high)
          )
        )
          return "ctidTraderAccountIds: integer|Long[] expected";
    }
    if (message.reason != null && message.hasOwnProperty("reason"))
      if (!$util.isString(message.reason)) return "reason: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAAccountsTokenInvalidatedEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAccountsTokenInvalidatedEvent} ProtoOAAccountsTokenInvalidatedEvent
   */
  ProtoOAAccountsTokenInvalidatedEvent.fromObject = function fromObject(
    object
  ) {
    if (object instanceof $root.ProtoOAAccountsTokenInvalidatedEvent)
      return object;
    var message = new $root.ProtoOAAccountsTokenInvalidatedEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountIds) {
      if (!Array.isArray(object.ctidTraderAccountIds))
        throw TypeError(
          ".ProtoOAAccountsTokenInvalidatedEvent.ctidTraderAccountIds: array expected"
        );
      message.ctidTraderAccountIds = [];
      for (var i = 0; i < object.ctidTraderAccountIds.length; ++i)
        if ($util.Long)
          (message.ctidTraderAccountIds[i] = $util.Long.fromValue(
            object.ctidTraderAccountIds[i]
          )).unsigned = false;
        else if (typeof object.ctidTraderAccountIds[i] === "string")
          message.ctidTraderAccountIds[i] = parseInt(
            object.ctidTraderAccountIds[i],
            10
          );
        else if (typeof object.ctidTraderAccountIds[i] === "number")
          message.ctidTraderAccountIds[i] = object.ctidTraderAccountIds[i];
        else if (typeof object.ctidTraderAccountIds[i] === "object")
          message.ctidTraderAccountIds[i] = new $util.LongBits(
            object.ctidTraderAccountIds[i].low >>> 0,
            object.ctidTraderAccountIds[i].high >>> 0
          ).toNumber();
    }
    if (object.reason != null) message.reason = String(object.reason);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAccountsTokenInvalidatedEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @static
   * @param {ProtoOAAccountsTokenInvalidatedEvent} message ProtoOAAccountsTokenInvalidatedEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAccountsTokenInvalidatedEvent.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.ctidTraderAccountIds = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT"
          : 2147;
      object.reason = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.ctidTraderAccountIds && message.ctidTraderAccountIds.length) {
      object.ctidTraderAccountIds = [];
      for (var j = 0; j < message.ctidTraderAccountIds.length; ++j)
        if (typeof message.ctidTraderAccountIds[j] === "number")
          object.ctidTraderAccountIds[j] =
            options.longs === String
              ? String(message.ctidTraderAccountIds[j])
              : message.ctidTraderAccountIds[j];
        else
          object.ctidTraderAccountIds[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(
                  message.ctidTraderAccountIds[j]
                )
              : options.longs === Number
              ? new $util.LongBits(
                  message.ctidTraderAccountIds[j].low >>> 0,
                  message.ctidTraderAccountIds[j].high >>> 0
                ).toNumber()
              : message.ctidTraderAccountIds[j];
    }
    if (message.reason != null && message.hasOwnProperty("reason"))
      object.reason = message.reason;
    return object;
  };

  /**
   * Converts this ProtoOAAccountsTokenInvalidatedEvent to JSON.
   * @function toJSON
   * @memberof ProtoOAAccountsTokenInvalidatedEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAccountsTokenInvalidatedEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAccountsTokenInvalidatedEvent;
})();

$root.ProtoOAVersionReq = (function() {
  /**
   * Properties of a ProtoOAVersionReq.
   * @exports IProtoOAVersionReq
   * @interface IProtoOAVersionReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAVersionReq payloadType
   */

  /**
   * Constructs a new ProtoOAVersionReq.
   * @exports ProtoOAVersionReq
   * @classdesc Request for getting the proxy version. Can be used to check the current version of the Open API scheme.
   * @implements IProtoOAVersionReq
   * @constructor
   * @param {IProtoOAVersionReq=} [properties] Properties to set
   */
  function ProtoOAVersionReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAVersionReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAVersionReq
   * @instance
   */
  ProtoOAVersionReq.prototype.payloadType = 2104;

  /**
   * Creates a new ProtoOAVersionReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAVersionReq
   * @static
   * @param {IProtoOAVersionReq=} [properties] Properties to set
   * @returns {ProtoOAVersionReq} ProtoOAVersionReq instance
   */
  ProtoOAVersionReq.create = function create(properties) {
    return new ProtoOAVersionReq(properties);
  };

  /**
   * Encodes the specified ProtoOAVersionReq message. Does not implicitly {@link ProtoOAVersionReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAVersionReq
   * @static
   * @param {IProtoOAVersionReq} message ProtoOAVersionReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAVersionReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAVersionReq message, length delimited. Does not implicitly {@link ProtoOAVersionReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAVersionReq
   * @static
   * @param {IProtoOAVersionReq} message ProtoOAVersionReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAVersionReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAVersionReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAVersionReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAVersionReq} ProtoOAVersionReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAVersionReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAVersionReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoOAVersionReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAVersionReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAVersionReq} ProtoOAVersionReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAVersionReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAVersionReq message.
   * @function verify
   * @memberof ProtoOAVersionReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAVersionReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOAVersionReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAVersionReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAVersionReq} ProtoOAVersionReq
   */
  ProtoOAVersionReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAVersionReq) return object;
    var message = new $root.ProtoOAVersionReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAVersionReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAVersionReq
   * @static
   * @param {ProtoOAVersionReq} message ProtoOAVersionReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAVersionReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults)
      object.payloadType =
        options.enums === String ? "PROTO_OA_VERSION_REQ" : 2104;
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    return object;
  };

  /**
   * Converts this ProtoOAVersionReq to JSON.
   * @function toJSON
   * @memberof ProtoOAVersionReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAVersionReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAVersionReq;
})();

$root.ProtoOAVersionRes = (function() {
  /**
   * Properties of a ProtoOAVersionRes.
   * @exports IProtoOAVersionRes
   * @interface IProtoOAVersionRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAVersionRes payloadType
   * @property {string} version ProtoOAVersionRes version
   */

  /**
   * Constructs a new ProtoOAVersionRes.
   * @exports ProtoOAVersionRes
   * @classdesc Response to the ProtoOAVersionReq request.
   * @implements IProtoOAVersionRes
   * @constructor
   * @param {IProtoOAVersionRes=} [properties] Properties to set
   */
  function ProtoOAVersionRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAVersionRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAVersionRes
   * @instance
   */
  ProtoOAVersionRes.prototype.payloadType = 2105;

  /**
   * ProtoOAVersionRes version.
   * @member {string} version
   * @memberof ProtoOAVersionRes
   * @instance
   */
  ProtoOAVersionRes.prototype.version = "";

  /**
   * Creates a new ProtoOAVersionRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAVersionRes
   * @static
   * @param {IProtoOAVersionRes=} [properties] Properties to set
   * @returns {ProtoOAVersionRes} ProtoOAVersionRes instance
   */
  ProtoOAVersionRes.create = function create(properties) {
    return new ProtoOAVersionRes(properties);
  };

  /**
   * Encodes the specified ProtoOAVersionRes message. Does not implicitly {@link ProtoOAVersionRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAVersionRes
   * @static
   * @param {IProtoOAVersionRes} message ProtoOAVersionRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAVersionRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.version);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAVersionRes message, length delimited. Does not implicitly {@link ProtoOAVersionRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAVersionRes
   * @static
   * @param {IProtoOAVersionRes} message ProtoOAVersionRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAVersionRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAVersionRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAVersionRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAVersionRes} ProtoOAVersionRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAVersionRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAVersionRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.version = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("version"))
      throw $util.ProtocolError("missing required 'version'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAVersionRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAVersionRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAVersionRes} ProtoOAVersionRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAVersionRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAVersionRes message.
   * @function verify
   * @memberof ProtoOAVersionRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAVersionRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (!$util.isString(message.version)) return "version: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAVersionRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAVersionRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAVersionRes} ProtoOAVersionRes
   */
  ProtoOAVersionRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAVersionRes) return object;
    var message = new $root.ProtoOAVersionRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.version != null) message.version = String(object.version);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAVersionRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAVersionRes
   * @static
   * @param {ProtoOAVersionRes} message ProtoOAVersionRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAVersionRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_VERSION_RES" : 2105;
      object.version = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.version != null && message.hasOwnProperty("version"))
      object.version = message.version;
    return object;
  };

  /**
   * Converts this ProtoOAVersionRes to JSON.
   * @function toJSON
   * @memberof ProtoOAVersionRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAVersionRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAVersionRes;
})();

$root.ProtoOANewOrderReq = (function() {
  /**
   * Properties of a ProtoOANewOrderReq.
   * @exports IProtoOANewOrderReq
   * @interface IProtoOANewOrderReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOANewOrderReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOANewOrderReq ctidTraderAccountId
   * @property {number|Long} symbolId ProtoOANewOrderReq symbolId
   * @property {ProtoOAOrderType} orderType ProtoOANewOrderReq orderType
   * @property {ProtoOATradeSide} tradeSide ProtoOANewOrderReq tradeSide
   * @property {number|Long} volume ProtoOANewOrderReq volume
   * @property {number|null} [limitPrice] ProtoOANewOrderReq limitPrice
   * @property {number|null} [stopPrice] ProtoOANewOrderReq stopPrice
   * @property {ProtoOATimeInForce|null} [timeInForce] ProtoOANewOrderReq timeInForce
   * @property {number|Long|null} [expirationTimestamp] ProtoOANewOrderReq expirationTimestamp
   * @property {number|null} [stopLoss] ProtoOANewOrderReq stopLoss
   * @property {number|null} [takeProfit] ProtoOANewOrderReq takeProfit
   * @property {string|null} [comment] ProtoOANewOrderReq comment
   * @property {number|null} [baseSlippagePrice] ProtoOANewOrderReq baseSlippagePrice
   * @property {number|null} [slippageInPoints] ProtoOANewOrderReq slippageInPoints
   * @property {string|null} [label] ProtoOANewOrderReq label
   * @property {number|Long|null} [positionId] ProtoOANewOrderReq positionId
   * @property {string|null} [clientOrderId] ProtoOANewOrderReq clientOrderId
   * @property {number|Long|null} [relativeStopLoss] ProtoOANewOrderReq relativeStopLoss
   * @property {number|Long|null} [relativeTakeProfit] ProtoOANewOrderReq relativeTakeProfit
   * @property {boolean|null} [guaranteedStopLoss] ProtoOANewOrderReq guaranteedStopLoss
   * @property {boolean|null} [trailingStopLoss] ProtoOANewOrderReq trailingStopLoss
   * @property {ProtoOAOrderTriggerMethod|null} [stopTriggerMethod] ProtoOANewOrderReq stopTriggerMethod
   */

  /**
   * Constructs a new ProtoOANewOrderReq.
   * @exports ProtoOANewOrderReq
   * @classdesc Request for sending a new trading order. Allowed only if the accessToken has the "trade" permissions for the trading account.
   * @implements IProtoOANewOrderReq
   * @constructor
   * @param {IProtoOANewOrderReq=} [properties] Properties to set
   */
  function ProtoOANewOrderReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOANewOrderReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.payloadType = 2106;

  /**
   * ProtoOANewOrderReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOANewOrderReq symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOANewOrderReq orderType.
   * @member {ProtoOAOrderType} orderType
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.orderType = 1;

  /**
   * ProtoOANewOrderReq tradeSide.
   * @member {ProtoOATradeSide} tradeSide
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.tradeSide = 1;

  /**
   * ProtoOANewOrderReq volume.
   * @member {number|Long} volume
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.volume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOANewOrderReq limitPrice.
   * @member {number} limitPrice
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.limitPrice = 0;

  /**
   * ProtoOANewOrderReq stopPrice.
   * @member {number} stopPrice
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.stopPrice = 0;

  /**
   * ProtoOANewOrderReq timeInForce.
   * @member {ProtoOATimeInForce} timeInForce
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.timeInForce = 2;

  /**
   * ProtoOANewOrderReq expirationTimestamp.
   * @member {number|Long} expirationTimestamp
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.expirationTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOANewOrderReq stopLoss.
   * @member {number} stopLoss
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.stopLoss = 0;

  /**
   * ProtoOANewOrderReq takeProfit.
   * @member {number} takeProfit
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.takeProfit = 0;

  /**
   * ProtoOANewOrderReq comment.
   * @member {string} comment
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.comment = "";

  /**
   * ProtoOANewOrderReq baseSlippagePrice.
   * @member {number} baseSlippagePrice
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.baseSlippagePrice = 0;

  /**
   * ProtoOANewOrderReq slippageInPoints.
   * @member {number} slippageInPoints
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.slippageInPoints = 0;

  /**
   * ProtoOANewOrderReq label.
   * @member {string} label
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.label = "";

  /**
   * ProtoOANewOrderReq positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOANewOrderReq clientOrderId.
   * @member {string} clientOrderId
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.clientOrderId = "";

  /**
   * ProtoOANewOrderReq relativeStopLoss.
   * @member {number|Long} relativeStopLoss
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.relativeStopLoss = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOANewOrderReq relativeTakeProfit.
   * @member {number|Long} relativeTakeProfit
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.relativeTakeProfit = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOANewOrderReq guaranteedStopLoss.
   * @member {boolean} guaranteedStopLoss
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.guaranteedStopLoss = false;

  /**
   * ProtoOANewOrderReq trailingStopLoss.
   * @member {boolean} trailingStopLoss
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.trailingStopLoss = false;

  /**
   * ProtoOANewOrderReq stopTriggerMethod.
   * @member {ProtoOAOrderTriggerMethod} stopTriggerMethod
   * @memberof ProtoOANewOrderReq
   * @instance
   */
  ProtoOANewOrderReq.prototype.stopTriggerMethod = 1;

  /**
   * Creates a new ProtoOANewOrderReq instance using the specified properties.
   * @function create
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {IProtoOANewOrderReq=} [properties] Properties to set
   * @returns {ProtoOANewOrderReq} ProtoOANewOrderReq instance
   */
  ProtoOANewOrderReq.create = function create(properties) {
    return new ProtoOANewOrderReq(properties);
  };

  /**
   * Encodes the specified ProtoOANewOrderReq message. Does not implicitly {@link ProtoOANewOrderReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {IProtoOANewOrderReq} message ProtoOANewOrderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOANewOrderReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.orderType);
    writer.uint32(/* id 5, wireType 0 =*/ 40).int32(message.tradeSide);
    writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.volume);
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      writer.uint32(/* id 7, wireType 1 =*/ 57).double(message.limitPrice);
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      writer.uint32(/* id 8, wireType 1 =*/ 65).double(message.stopPrice);
    if (message.timeInForce != null && message.hasOwnProperty("timeInForce"))
      writer.uint32(/* id 9, wireType 0 =*/ 72).int32(message.timeInForce);
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      writer
        .uint32(/* id 10, wireType 0 =*/ 80)
        .int64(message.expirationTimestamp);
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      writer.uint32(/* id 11, wireType 1 =*/ 89).double(message.stopLoss);
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      writer.uint32(/* id 12, wireType 1 =*/ 97).double(message.takeProfit);
    if (message.comment != null && message.hasOwnProperty("comment"))
      writer.uint32(/* id 13, wireType 2 =*/ 106).string(message.comment);
    if (
      message.baseSlippagePrice != null &&
      message.hasOwnProperty("baseSlippagePrice")
    )
      writer
        .uint32(/* id 14, wireType 1 =*/ 113)
        .double(message.baseSlippagePrice);
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      writer
        .uint32(/* id 15, wireType 0 =*/ 120)
        .int32(message.slippageInPoints);
    if (message.label != null && message.hasOwnProperty("label"))
      writer.uint32(/* id 16, wireType 2 =*/ 130).string(message.label);
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      writer.uint32(/* id 17, wireType 0 =*/ 136).int64(message.positionId);
    if (
      message.clientOrderId != null &&
      message.hasOwnProperty("clientOrderId")
    )
      writer.uint32(/* id 18, wireType 2 =*/ 146).string(message.clientOrderId);
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      writer
        .uint32(/* id 19, wireType 0 =*/ 152)
        .int64(message.relativeStopLoss);
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      writer
        .uint32(/* id 20, wireType 0 =*/ 160)
        .int64(message.relativeTakeProfit);
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      writer
        .uint32(/* id 21, wireType 0 =*/ 168)
        .bool(message.guaranteedStopLoss);
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      writer
        .uint32(/* id 22, wireType 0 =*/ 176)
        .bool(message.trailingStopLoss);
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      writer
        .uint32(/* id 23, wireType 0 =*/ 184)
        .int32(message.stopTriggerMethod);
    return writer;
  };

  /**
   * Encodes the specified ProtoOANewOrderReq message, length delimited. Does not implicitly {@link ProtoOANewOrderReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {IProtoOANewOrderReq} message ProtoOANewOrderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOANewOrderReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOANewOrderReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOANewOrderReq} ProtoOANewOrderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOANewOrderReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOANewOrderReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.symbolId = reader.int64();
          break;
        case 4:
          message.orderType = reader.int32();
          break;
        case 5:
          message.tradeSide = reader.int32();
          break;
        case 6:
          message.volume = reader.int64();
          break;
        case 7:
          message.limitPrice = reader.double();
          break;
        case 8:
          message.stopPrice = reader.double();
          break;
        case 9:
          message.timeInForce = reader.int32();
          break;
        case 10:
          message.expirationTimestamp = reader.int64();
          break;
        case 11:
          message.stopLoss = reader.double();
          break;
        case 12:
          message.takeProfit = reader.double();
          break;
        case 13:
          message.comment = reader.string();
          break;
        case 14:
          message.baseSlippagePrice = reader.double();
          break;
        case 15:
          message.slippageInPoints = reader.int32();
          break;
        case 16:
          message.label = reader.string();
          break;
        case 17:
          message.positionId = reader.int64();
          break;
        case 18:
          message.clientOrderId = reader.string();
          break;
        case 19:
          message.relativeStopLoss = reader.int64();
          break;
        case 20:
          message.relativeTakeProfit = reader.int64();
          break;
        case 21:
          message.guaranteedStopLoss = reader.bool();
          break;
        case 22:
          message.trailingStopLoss = reader.bool();
          break;
        case 23:
          message.stopTriggerMethod = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    if (!message.hasOwnProperty("orderType"))
      throw $util.ProtocolError("missing required 'orderType'", {
        instance: message
      });
    if (!message.hasOwnProperty("tradeSide"))
      throw $util.ProtocolError("missing required 'tradeSide'", {
        instance: message
      });
    if (!message.hasOwnProperty("volume"))
      throw $util.ProtocolError("missing required 'volume'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOANewOrderReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOANewOrderReq} ProtoOANewOrderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOANewOrderReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOANewOrderReq message.
   * @function verify
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOANewOrderReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    switch (message.orderType) {
      default:
        return "orderType: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        break;
    }
    switch (message.tradeSide) {
      default:
        return "tradeSide: enum value expected";
      case 1:
      case 2:
        break;
    }
    if (
      !$util.isInteger(message.volume) &&
      !(
        message.volume &&
        $util.isInteger(message.volume.low) &&
        $util.isInteger(message.volume.high)
      )
    )
      return "volume: integer|Long expected";
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      if (typeof message.limitPrice !== "number")
        return "limitPrice: number expected";
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      if (typeof message.stopPrice !== "number")
        return "stopPrice: number expected";
    if (message.timeInForce != null && message.hasOwnProperty("timeInForce"))
      switch (message.timeInForce) {
        default:
          return "timeInForce: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
      }
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      if (
        !$util.isInteger(message.expirationTimestamp) &&
        !(
          message.expirationTimestamp &&
          $util.isInteger(message.expirationTimestamp.low) &&
          $util.isInteger(message.expirationTimestamp.high)
        )
      )
        return "expirationTimestamp: integer|Long expected";
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      if (typeof message.stopLoss !== "number")
        return "stopLoss: number expected";
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      if (typeof message.takeProfit !== "number")
        return "takeProfit: number expected";
    if (message.comment != null && message.hasOwnProperty("comment"))
      if (!$util.isString(message.comment)) return "comment: string expected";
    if (
      message.baseSlippagePrice != null &&
      message.hasOwnProperty("baseSlippagePrice")
    )
      if (typeof message.baseSlippagePrice !== "number")
        return "baseSlippagePrice: number expected";
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      if (!$util.isInteger(message.slippageInPoints))
        return "slippageInPoints: integer expected";
    if (message.label != null && message.hasOwnProperty("label"))
      if (!$util.isString(message.label)) return "label: string expected";
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (
        !$util.isInteger(message.positionId) &&
        !(
          message.positionId &&
          $util.isInteger(message.positionId.low) &&
          $util.isInteger(message.positionId.high)
        )
      )
        return "positionId: integer|Long expected";
    if (
      message.clientOrderId != null &&
      message.hasOwnProperty("clientOrderId")
    )
      if (!$util.isString(message.clientOrderId))
        return "clientOrderId: string expected";
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      if (
        !$util.isInteger(message.relativeStopLoss) &&
        !(
          message.relativeStopLoss &&
          $util.isInteger(message.relativeStopLoss.low) &&
          $util.isInteger(message.relativeStopLoss.high)
        )
      )
        return "relativeStopLoss: integer|Long expected";
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      if (
        !$util.isInteger(message.relativeTakeProfit) &&
        !(
          message.relativeTakeProfit &&
          $util.isInteger(message.relativeTakeProfit.low) &&
          $util.isInteger(message.relativeTakeProfit.high)
        )
      )
        return "relativeTakeProfit: integer|Long expected";
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      if (typeof message.guaranteedStopLoss !== "boolean")
        return "guaranteedStopLoss: boolean expected";
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      if (typeof message.trailingStopLoss !== "boolean")
        return "trailingStopLoss: boolean expected";
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      switch (message.stopTriggerMethod) {
        default:
          return "stopTriggerMethod: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOANewOrderReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOANewOrderReq} ProtoOANewOrderReq
   */
  ProtoOANewOrderReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOANewOrderReq) return object;
    var message = new $root.ProtoOANewOrderReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    switch (object.orderType) {
      case "MARKET":
      case 1:
        message.orderType = 1;
        break;
      case "LIMIT":
      case 2:
        message.orderType = 2;
        break;
      case "STOP":
      case 3:
        message.orderType = 3;
        break;
      case "STOP_LOSS_TAKE_PROFIT":
      case 4:
        message.orderType = 4;
        break;
      case "MARKET_RANGE":
      case 5:
        message.orderType = 5;
        break;
      case "STOP_LIMIT":
      case 6:
        message.orderType = 6;
        break;
    }
    switch (object.tradeSide) {
      case "BUY":
      case 1:
        message.tradeSide = 1;
        break;
      case "SELL":
      case 2:
        message.tradeSide = 2;
        break;
    }
    if (object.volume != null)
      if ($util.Long)
        (message.volume = $util.Long.fromValue(object.volume)).unsigned = false;
      else if (typeof object.volume === "string")
        message.volume = parseInt(object.volume, 10);
      else if (typeof object.volume === "number")
        message.volume = object.volume;
      else if (typeof object.volume === "object")
        message.volume = new $util.LongBits(
          object.volume.low >>> 0,
          object.volume.high >>> 0
        ).toNumber();
    if (object.limitPrice != null)
      message.limitPrice = Number(object.limitPrice);
    if (object.stopPrice != null) message.stopPrice = Number(object.stopPrice);
    switch (object.timeInForce) {
      case "GOOD_TILL_DATE":
      case 1:
        message.timeInForce = 1;
        break;
      case "GOOD_TILL_CANCEL":
      case 2:
        message.timeInForce = 2;
        break;
      case "IMMEDIATE_OR_CANCEL":
      case 3:
        message.timeInForce = 3;
        break;
      case "FILL_OR_KILL":
      case 4:
        message.timeInForce = 4;
        break;
      case "MARKET_ON_OPEN":
      case 5:
        message.timeInForce = 5;
        break;
    }
    if (object.expirationTimestamp != null)
      if ($util.Long)
        (message.expirationTimestamp = $util.Long.fromValue(
          object.expirationTimestamp
        )).unsigned = false;
      else if (typeof object.expirationTimestamp === "string")
        message.expirationTimestamp = parseInt(object.expirationTimestamp, 10);
      else if (typeof object.expirationTimestamp === "number")
        message.expirationTimestamp = object.expirationTimestamp;
      else if (typeof object.expirationTimestamp === "object")
        message.expirationTimestamp = new $util.LongBits(
          object.expirationTimestamp.low >>> 0,
          object.expirationTimestamp.high >>> 0
        ).toNumber();
    if (object.stopLoss != null) message.stopLoss = Number(object.stopLoss);
    if (object.takeProfit != null)
      message.takeProfit = Number(object.takeProfit);
    if (object.comment != null) message.comment = String(object.comment);
    if (object.baseSlippagePrice != null)
      message.baseSlippagePrice = Number(object.baseSlippagePrice);
    if (object.slippageInPoints != null)
      message.slippageInPoints = object.slippageInPoints | 0;
    if (object.label != null) message.label = String(object.label);
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.clientOrderId != null)
      message.clientOrderId = String(object.clientOrderId);
    if (object.relativeStopLoss != null)
      if ($util.Long)
        (message.relativeStopLoss = $util.Long.fromValue(
          object.relativeStopLoss
        )).unsigned = false;
      else if (typeof object.relativeStopLoss === "string")
        message.relativeStopLoss = parseInt(object.relativeStopLoss, 10);
      else if (typeof object.relativeStopLoss === "number")
        message.relativeStopLoss = object.relativeStopLoss;
      else if (typeof object.relativeStopLoss === "object")
        message.relativeStopLoss = new $util.LongBits(
          object.relativeStopLoss.low >>> 0,
          object.relativeStopLoss.high >>> 0
        ).toNumber();
    if (object.relativeTakeProfit != null)
      if ($util.Long)
        (message.relativeTakeProfit = $util.Long.fromValue(
          object.relativeTakeProfit
        )).unsigned = false;
      else if (typeof object.relativeTakeProfit === "string")
        message.relativeTakeProfit = parseInt(object.relativeTakeProfit, 10);
      else if (typeof object.relativeTakeProfit === "number")
        message.relativeTakeProfit = object.relativeTakeProfit;
      else if (typeof object.relativeTakeProfit === "object")
        message.relativeTakeProfit = new $util.LongBits(
          object.relativeTakeProfit.low >>> 0,
          object.relativeTakeProfit.high >>> 0
        ).toNumber();
    if (object.guaranteedStopLoss != null)
      message.guaranteedStopLoss = Boolean(object.guaranteedStopLoss);
    if (object.trailingStopLoss != null)
      message.trailingStopLoss = Boolean(object.trailingStopLoss);
    switch (object.stopTriggerMethod) {
      case "TRADE":
      case 1:
        message.stopTriggerMethod = 1;
        break;
      case "OPPOSITE":
      case 2:
        message.stopTriggerMethod = 2;
        break;
      case "DOUBLE_TRADE":
      case 3:
        message.stopTriggerMethod = 3;
        break;
      case "DOUBLE_OPPOSITE":
      case 4:
        message.stopTriggerMethod = 4;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOANewOrderReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOANewOrderReq
   * @static
   * @param {ProtoOANewOrderReq} message ProtoOANewOrderReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOANewOrderReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_NEW_ORDER_REQ" : 2106;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
      object.orderType = options.enums === String ? "MARKET" : 1;
      object.tradeSide = options.enums === String ? "BUY" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.volume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.volume = options.longs === String ? "0" : 0;
      object.limitPrice = 0;
      object.stopPrice = 0;
      object.timeInForce = options.enums === String ? "GOOD_TILL_CANCEL" : 2;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.expirationTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.expirationTimestamp = options.longs === String ? "0" : 0;
      object.stopLoss = 0;
      object.takeProfit = 0;
      object.comment = "";
      object.baseSlippagePrice = 0;
      object.slippageInPoints = 0;
      object.label = "";
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      object.clientOrderId = "";
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.relativeStopLoss =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.relativeStopLoss = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.relativeTakeProfit =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.relativeTakeProfit = options.longs === String ? "0" : 0;
      object.guaranteedStopLoss = false;
      object.trailingStopLoss = false;
      object.stopTriggerMethod = options.enums === String ? "TRADE" : 1;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (message.orderType != null && message.hasOwnProperty("orderType"))
      object.orderType =
        options.enums === String
          ? $root.ProtoOAOrderType[message.orderType]
          : message.orderType;
    if (message.tradeSide != null && message.hasOwnProperty("tradeSide"))
      object.tradeSide =
        options.enums === String
          ? $root.ProtoOATradeSide[message.tradeSide]
          : message.tradeSide;
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (typeof message.volume === "number")
        object.volume =
          options.longs === String ? String(message.volume) : message.volume;
      else
        object.volume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.volume)
            : options.longs === Number
            ? new $util.LongBits(
                message.volume.low >>> 0,
                message.volume.high >>> 0
              ).toNumber()
            : message.volume;
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      object.limitPrice =
        options.json && !isFinite(message.limitPrice)
          ? String(message.limitPrice)
          : message.limitPrice;
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      object.stopPrice =
        options.json && !isFinite(message.stopPrice)
          ? String(message.stopPrice)
          : message.stopPrice;
    if (message.timeInForce != null && message.hasOwnProperty("timeInForce"))
      object.timeInForce =
        options.enums === String
          ? $root.ProtoOATimeInForce[message.timeInForce]
          : message.timeInForce;
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      if (typeof message.expirationTimestamp === "number")
        object.expirationTimestamp =
          options.longs === String
            ? String(message.expirationTimestamp)
            : message.expirationTimestamp;
      else
        object.expirationTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.expirationTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.expirationTimestamp.low >>> 0,
                message.expirationTimestamp.high >>> 0
              ).toNumber()
            : message.expirationTimestamp;
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      object.stopLoss =
        options.json && !isFinite(message.stopLoss)
          ? String(message.stopLoss)
          : message.stopLoss;
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      object.takeProfit =
        options.json && !isFinite(message.takeProfit)
          ? String(message.takeProfit)
          : message.takeProfit;
    if (message.comment != null && message.hasOwnProperty("comment"))
      object.comment = message.comment;
    if (
      message.baseSlippagePrice != null &&
      message.hasOwnProperty("baseSlippagePrice")
    )
      object.baseSlippagePrice =
        options.json && !isFinite(message.baseSlippagePrice)
          ? String(message.baseSlippagePrice)
          : message.baseSlippagePrice;
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      object.slippageInPoints = message.slippageInPoints;
    if (message.label != null && message.hasOwnProperty("label"))
      object.label = message.label;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (
      message.clientOrderId != null &&
      message.hasOwnProperty("clientOrderId")
    )
      object.clientOrderId = message.clientOrderId;
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      if (typeof message.relativeStopLoss === "number")
        object.relativeStopLoss =
          options.longs === String
            ? String(message.relativeStopLoss)
            : message.relativeStopLoss;
      else
        object.relativeStopLoss =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.relativeStopLoss)
            : options.longs === Number
            ? new $util.LongBits(
                message.relativeStopLoss.low >>> 0,
                message.relativeStopLoss.high >>> 0
              ).toNumber()
            : message.relativeStopLoss;
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      if (typeof message.relativeTakeProfit === "number")
        object.relativeTakeProfit =
          options.longs === String
            ? String(message.relativeTakeProfit)
            : message.relativeTakeProfit;
      else
        object.relativeTakeProfit =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.relativeTakeProfit)
            : options.longs === Number
            ? new $util.LongBits(
                message.relativeTakeProfit.low >>> 0,
                message.relativeTakeProfit.high >>> 0
              ).toNumber()
            : message.relativeTakeProfit;
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      object.guaranteedStopLoss = message.guaranteedStopLoss;
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      object.trailingStopLoss = message.trailingStopLoss;
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      object.stopTriggerMethod =
        options.enums === String
          ? $root.ProtoOAOrderTriggerMethod[message.stopTriggerMethod]
          : message.stopTriggerMethod;
    return object;
  };

  /**
   * Converts this ProtoOANewOrderReq to JSON.
   * @function toJSON
   * @memberof ProtoOANewOrderReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOANewOrderReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOANewOrderReq;
})();

$root.ProtoOAExecutionEvent = (function() {
  /**
   * Properties of a ProtoOAExecutionEvent.
   * @exports IProtoOAExecutionEvent
   * @interface IProtoOAExecutionEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAExecutionEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAExecutionEvent ctidTraderAccountId
   * @property {ProtoOAExecutionType} executionType ProtoOAExecutionEvent executionType
   * @property {IProtoOAPosition|null} [position] ProtoOAExecutionEvent position
   * @property {IProtoOAOrder|null} [order] ProtoOAExecutionEvent order
   * @property {IProtoOADeal|null} [deal] ProtoOAExecutionEvent deal
   * @property {IProtoOABonusDepositWithdraw|null} [bonusDepositWithdraw] ProtoOAExecutionEvent bonusDepositWithdraw
   * @property {IProtoOADepositWithdraw|null} [depositWithdraw] ProtoOAExecutionEvent depositWithdraw
   * @property {string|null} [errorCode] ProtoOAExecutionEvent errorCode
   * @property {boolean|null} [isServerEvent] ProtoOAExecutionEvent isServerEvent
   */

  /**
   * Constructs a new ProtoOAExecutionEvent.
   * @exports ProtoOAExecutionEvent
   * @classdesc The event that is sent following the successful order acceptance or execution by the server. Acts as response to the ProtoOANewOrderReq, ProtoOACancelOrderReq, ProtoOAAmendOrderReq, ProtoOAAmendPositionSLTPReq, ProtoOAClosePositionReq requests. Also, the event is sent when a Deposit/Withdrawal took place.
   * @implements IProtoOAExecutionEvent
   * @constructor
   * @param {IProtoOAExecutionEvent=} [properties] Properties to set
   */
  function ProtoOAExecutionEvent(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAExecutionEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.payloadType = 2126;

  /**
   * ProtoOAExecutionEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAExecutionEvent executionType.
   * @member {ProtoOAExecutionType} executionType
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.executionType = 2;

  /**
   * ProtoOAExecutionEvent position.
   * @member {IProtoOAPosition|null|undefined} position
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.position = null;

  /**
   * ProtoOAExecutionEvent order.
   * @member {IProtoOAOrder|null|undefined} order
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.order = null;

  /**
   * ProtoOAExecutionEvent deal.
   * @member {IProtoOADeal|null|undefined} deal
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.deal = null;

  /**
   * ProtoOAExecutionEvent bonusDepositWithdraw.
   * @member {IProtoOABonusDepositWithdraw|null|undefined} bonusDepositWithdraw
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.bonusDepositWithdraw = null;

  /**
   * ProtoOAExecutionEvent depositWithdraw.
   * @member {IProtoOADepositWithdraw|null|undefined} depositWithdraw
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.depositWithdraw = null;

  /**
   * ProtoOAExecutionEvent errorCode.
   * @member {string} errorCode
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.errorCode = "";

  /**
   * ProtoOAExecutionEvent isServerEvent.
   * @member {boolean} isServerEvent
   * @memberof ProtoOAExecutionEvent
   * @instance
   */
  ProtoOAExecutionEvent.prototype.isServerEvent = false;

  /**
   * Creates a new ProtoOAExecutionEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {IProtoOAExecutionEvent=} [properties] Properties to set
   * @returns {ProtoOAExecutionEvent} ProtoOAExecutionEvent instance
   */
  ProtoOAExecutionEvent.create = function create(properties) {
    return new ProtoOAExecutionEvent(properties);
  };

  /**
   * Encodes the specified ProtoOAExecutionEvent message. Does not implicitly {@link ProtoOAExecutionEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {IProtoOAExecutionEvent} message ProtoOAExecutionEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExecutionEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.executionType);
    if (message.position != null && message.hasOwnProperty("position"))
      $root.ProtoOAPosition.encode(
        message.position,
        writer.uint32(/* id 4, wireType 2 =*/ 34).fork()
      ).ldelim();
    if (message.order != null && message.hasOwnProperty("order"))
      $root.ProtoOAOrder.encode(
        message.order,
        writer.uint32(/* id 5, wireType 2 =*/ 42).fork()
      ).ldelim();
    if (message.deal != null && message.hasOwnProperty("deal"))
      $root.ProtoOADeal.encode(
        message.deal,
        writer.uint32(/* id 6, wireType 2 =*/ 50).fork()
      ).ldelim();
    if (
      message.bonusDepositWithdraw != null &&
      message.hasOwnProperty("bonusDepositWithdraw")
    )
      $root.ProtoOABonusDepositWithdraw.encode(
        message.bonusDepositWithdraw,
        writer.uint32(/* id 7, wireType 2 =*/ 58).fork()
      ).ldelim();
    if (
      message.depositWithdraw != null &&
      message.hasOwnProperty("depositWithdraw")
    )
      $root.ProtoOADepositWithdraw.encode(
        message.depositWithdraw,
        writer.uint32(/* id 8, wireType 2 =*/ 66).fork()
      ).ldelim();
    if (message.errorCode != null && message.hasOwnProperty("errorCode"))
      writer.uint32(/* id 9, wireType 2 =*/ 74).string(message.errorCode);
    if (
      message.isServerEvent != null &&
      message.hasOwnProperty("isServerEvent")
    )
      writer.uint32(/* id 10, wireType 0 =*/ 80).bool(message.isServerEvent);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAExecutionEvent message, length delimited. Does not implicitly {@link ProtoOAExecutionEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {IProtoOAExecutionEvent} message ProtoOAExecutionEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExecutionEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAExecutionEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAExecutionEvent} ProtoOAExecutionEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExecutionEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAExecutionEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.executionType = reader.int32();
          break;
        case 4:
          message.position = $root.ProtoOAPosition.decode(
            reader,
            reader.uint32()
          );
          break;
        case 5:
          message.order = $root.ProtoOAOrder.decode(reader, reader.uint32());
          break;
        case 6:
          message.deal = $root.ProtoOADeal.decode(reader, reader.uint32());
          break;
        case 7:
          message.bonusDepositWithdraw = $root.ProtoOABonusDepositWithdraw.decode(
            reader,
            reader.uint32()
          );
          break;
        case 8:
          message.depositWithdraw = $root.ProtoOADepositWithdraw.decode(
            reader,
            reader.uint32()
          );
          break;
        case 9:
          message.errorCode = reader.string();
          break;
        case 10:
          message.isServerEvent = reader.bool();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("executionType"))
      throw $util.ProtocolError("missing required 'executionType'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAExecutionEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAExecutionEvent} ProtoOAExecutionEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExecutionEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAExecutionEvent message.
   * @function verify
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAExecutionEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    switch (message.executionType) {
      default:
        return "executionType: enum value expected";
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
        break;
    }
    if (message.position != null && message.hasOwnProperty("position")) {
      var error = $root.ProtoOAPosition.verify(message.position);
      if (error) return "position." + error;
    }
    if (message.order != null && message.hasOwnProperty("order")) {
      var error = $root.ProtoOAOrder.verify(message.order);
      if (error) return "order." + error;
    }
    if (message.deal != null && message.hasOwnProperty("deal")) {
      var error = $root.ProtoOADeal.verify(message.deal);
      if (error) return "deal." + error;
    }
    if (
      message.bonusDepositWithdraw != null &&
      message.hasOwnProperty("bonusDepositWithdraw")
    ) {
      var error = $root.ProtoOABonusDepositWithdraw.verify(
        message.bonusDepositWithdraw
      );
      if (error) return "bonusDepositWithdraw." + error;
    }
    if (
      message.depositWithdraw != null &&
      message.hasOwnProperty("depositWithdraw")
    ) {
      var error = $root.ProtoOADepositWithdraw.verify(message.depositWithdraw);
      if (error) return "depositWithdraw." + error;
    }
    if (message.errorCode != null && message.hasOwnProperty("errorCode"))
      if (!$util.isString(message.errorCode))
        return "errorCode: string expected";
    if (
      message.isServerEvent != null &&
      message.hasOwnProperty("isServerEvent")
    )
      if (typeof message.isServerEvent !== "boolean")
        return "isServerEvent: boolean expected";
    return null;
  };

  /**
   * Creates a ProtoOAExecutionEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAExecutionEvent} ProtoOAExecutionEvent
   */
  ProtoOAExecutionEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAExecutionEvent) return object;
    var message = new $root.ProtoOAExecutionEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    switch (object.executionType) {
      case "ORDER_ACCEPTED":
      case 2:
        message.executionType = 2;
        break;
      case "ORDER_FILLED":
      case 3:
        message.executionType = 3;
        break;
      case "ORDER_REPLACED":
      case 4:
        message.executionType = 4;
        break;
      case "ORDER_CANCELLED":
      case 5:
        message.executionType = 5;
        break;
      case "ORDER_EXPIRED":
      case 6:
        message.executionType = 6;
        break;
      case "ORDER_REJECTED":
      case 7:
        message.executionType = 7;
        break;
      case "ORDER_CANCEL_REJECTED":
      case 8:
        message.executionType = 8;
        break;
      case "SWAP":
      case 9:
        message.executionType = 9;
        break;
      case "DEPOSIT_WITHDRAW":
      case 10:
        message.executionType = 10;
        break;
      case "ORDER_PARTIAL_FILL":
      case 11:
        message.executionType = 11;
        break;
      case "BONUS_DEPOSIT_WITHDRAW":
      case 12:
        message.executionType = 12;
        break;
    }
    if (object.position != null) {
      if (typeof object.position !== "object")
        throw TypeError(".ProtoOAExecutionEvent.position: object expected");
      message.position = $root.ProtoOAPosition.fromObject(object.position);
    }
    if (object.order != null) {
      if (typeof object.order !== "object")
        throw TypeError(".ProtoOAExecutionEvent.order: object expected");
      message.order = $root.ProtoOAOrder.fromObject(object.order);
    }
    if (object.deal != null) {
      if (typeof object.deal !== "object")
        throw TypeError(".ProtoOAExecutionEvent.deal: object expected");
      message.deal = $root.ProtoOADeal.fromObject(object.deal);
    }
    if (object.bonusDepositWithdraw != null) {
      if (typeof object.bonusDepositWithdraw !== "object")
        throw TypeError(
          ".ProtoOAExecutionEvent.bonusDepositWithdraw: object expected"
        );
      message.bonusDepositWithdraw = $root.ProtoOABonusDepositWithdraw.fromObject(
        object.bonusDepositWithdraw
      );
    }
    if (object.depositWithdraw != null) {
      if (typeof object.depositWithdraw !== "object")
        throw TypeError(
          ".ProtoOAExecutionEvent.depositWithdraw: object expected"
        );
      message.depositWithdraw = $root.ProtoOADepositWithdraw.fromObject(
        object.depositWithdraw
      );
    }
    if (object.errorCode != null) message.errorCode = String(object.errorCode);
    if (object.isServerEvent != null)
      message.isServerEvent = Boolean(object.isServerEvent);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAExecutionEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAExecutionEvent
   * @static
   * @param {ProtoOAExecutionEvent} message ProtoOAExecutionEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAExecutionEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_EXECUTION_EVENT" : 2126;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.executionType = options.enums === String ? "ORDER_ACCEPTED" : 2;
      object.position = null;
      object.order = null;
      object.deal = null;
      object.bonusDepositWithdraw = null;
      object.depositWithdraw = null;
      object.errorCode = "";
      object.isServerEvent = false;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (
      message.executionType != null &&
      message.hasOwnProperty("executionType")
    )
      object.executionType =
        options.enums === String
          ? $root.ProtoOAExecutionType[message.executionType]
          : message.executionType;
    if (message.position != null && message.hasOwnProperty("position"))
      object.position = $root.ProtoOAPosition.toObject(
        message.position,
        options
      );
    if (message.order != null && message.hasOwnProperty("order"))
      object.order = $root.ProtoOAOrder.toObject(message.order, options);
    if (message.deal != null && message.hasOwnProperty("deal"))
      object.deal = $root.ProtoOADeal.toObject(message.deal, options);
    if (
      message.bonusDepositWithdraw != null &&
      message.hasOwnProperty("bonusDepositWithdraw")
    )
      object.bonusDepositWithdraw = $root.ProtoOABonusDepositWithdraw.toObject(
        message.bonusDepositWithdraw,
        options
      );
    if (
      message.depositWithdraw != null &&
      message.hasOwnProperty("depositWithdraw")
    )
      object.depositWithdraw = $root.ProtoOADepositWithdraw.toObject(
        message.depositWithdraw,
        options
      );
    if (message.errorCode != null && message.hasOwnProperty("errorCode"))
      object.errorCode = message.errorCode;
    if (
      message.isServerEvent != null &&
      message.hasOwnProperty("isServerEvent")
    )
      object.isServerEvent = message.isServerEvent;
    return object;
  };

  /**
   * Converts this ProtoOAExecutionEvent to JSON.
   * @function toJSON
   * @memberof ProtoOAExecutionEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAExecutionEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAExecutionEvent;
})();

$root.ProtoOACancelOrderReq = (function() {
  /**
   * Properties of a ProtoOACancelOrderReq.
   * @exports IProtoOACancelOrderReq
   * @interface IProtoOACancelOrderReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOACancelOrderReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOACancelOrderReq ctidTraderAccountId
   * @property {number|Long} orderId ProtoOACancelOrderReq orderId
   */

  /**
   * Constructs a new ProtoOACancelOrderReq.
   * @exports ProtoOACancelOrderReq
   * @classdesc Request for cancelling existing pending order. Allowed only if the accessToken has "trade" permissions for the trading account.
   * @implements IProtoOACancelOrderReq
   * @constructor
   * @param {IProtoOACancelOrderReq=} [properties] Properties to set
   */
  function ProtoOACancelOrderReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOACancelOrderReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOACancelOrderReq
   * @instance
   */
  ProtoOACancelOrderReq.prototype.payloadType = 2108;

  /**
   * ProtoOACancelOrderReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOACancelOrderReq
   * @instance
   */
  ProtoOACancelOrderReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOACancelOrderReq orderId.
   * @member {number|Long} orderId
   * @memberof ProtoOACancelOrderReq
   * @instance
   */
  ProtoOACancelOrderReq.prototype.orderId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOACancelOrderReq instance using the specified properties.
   * @function create
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {IProtoOACancelOrderReq=} [properties] Properties to set
   * @returns {ProtoOACancelOrderReq} ProtoOACancelOrderReq instance
   */
  ProtoOACancelOrderReq.create = function create(properties) {
    return new ProtoOACancelOrderReq(properties);
  };

  /**
   * Encodes the specified ProtoOACancelOrderReq message. Does not implicitly {@link ProtoOACancelOrderReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {IProtoOACancelOrderReq} message ProtoOACancelOrderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACancelOrderReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.orderId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOACancelOrderReq message, length delimited. Does not implicitly {@link ProtoOACancelOrderReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {IProtoOACancelOrderReq} message ProtoOACancelOrderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACancelOrderReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOACancelOrderReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOACancelOrderReq} ProtoOACancelOrderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACancelOrderReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOACancelOrderReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.orderId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("orderId"))
      throw $util.ProtocolError("missing required 'orderId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOACancelOrderReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOACancelOrderReq} ProtoOACancelOrderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACancelOrderReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOACancelOrderReq message.
   * @function verify
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOACancelOrderReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.orderId) &&
      !(
        message.orderId &&
        $util.isInteger(message.orderId.low) &&
        $util.isInteger(message.orderId.high)
      )
    )
      return "orderId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOACancelOrderReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOACancelOrderReq} ProtoOACancelOrderReq
   */
  ProtoOACancelOrderReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOACancelOrderReq) return object;
    var message = new $root.ProtoOACancelOrderReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.orderId != null)
      if ($util.Long)
        (message.orderId = $util.Long.fromValue(
          object.orderId
        )).unsigned = false;
      else if (typeof object.orderId === "string")
        message.orderId = parseInt(object.orderId, 10);
      else if (typeof object.orderId === "number")
        message.orderId = object.orderId;
      else if (typeof object.orderId === "object")
        message.orderId = new $util.LongBits(
          object.orderId.low >>> 0,
          object.orderId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOACancelOrderReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOACancelOrderReq
   * @static
   * @param {ProtoOACancelOrderReq} message ProtoOACancelOrderReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOACancelOrderReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_CANCEL_ORDER_REQ" : 2108;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.orderId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.orderId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      if (typeof message.orderId === "number")
        object.orderId =
          options.longs === String ? String(message.orderId) : message.orderId;
      else
        object.orderId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.orderId)
            : options.longs === Number
            ? new $util.LongBits(
                message.orderId.low >>> 0,
                message.orderId.high >>> 0
              ).toNumber()
            : message.orderId;
    return object;
  };

  /**
   * Converts this ProtoOACancelOrderReq to JSON.
   * @function toJSON
   * @memberof ProtoOACancelOrderReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOACancelOrderReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOACancelOrderReq;
})();

$root.ProtoOAAmendOrderReq = (function() {
  /**
   * Properties of a ProtoOAAmendOrderReq.
   * @exports IProtoOAAmendOrderReq
   * @interface IProtoOAAmendOrderReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAmendOrderReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAmendOrderReq ctidTraderAccountId
   * @property {number|Long} orderId ProtoOAAmendOrderReq orderId
   * @property {number|Long|null} [volume] ProtoOAAmendOrderReq volume
   * @property {number|null} [limitPrice] ProtoOAAmendOrderReq limitPrice
   * @property {number|null} [stopPrice] ProtoOAAmendOrderReq stopPrice
   * @property {number|Long|null} [expirationTimestamp] ProtoOAAmendOrderReq expirationTimestamp
   * @property {number|null} [stopLoss] ProtoOAAmendOrderReq stopLoss
   * @property {number|null} [takeProfit] ProtoOAAmendOrderReq takeProfit
   * @property {number|null} [slippageInPoints] ProtoOAAmendOrderReq slippageInPoints
   * @property {number|Long|null} [relativeStopLoss] ProtoOAAmendOrderReq relativeStopLoss
   * @property {number|Long|null} [relativeTakeProfit] ProtoOAAmendOrderReq relativeTakeProfit
   * @property {boolean|null} [guaranteedStopLoss] ProtoOAAmendOrderReq guaranteedStopLoss
   * @property {boolean|null} [trailingStopLoss] ProtoOAAmendOrderReq trailingStopLoss
   * @property {ProtoOAOrderTriggerMethod|null} [stopTriggerMethod] ProtoOAAmendOrderReq stopTriggerMethod
   */

  /**
   * Constructs a new ProtoOAAmendOrderReq.
   * @exports ProtoOAAmendOrderReq
   * @classdesc Request for amending the existing pending order. Allowed only if the Access Token has "trade" permissions for the trading account.
   * @implements IProtoOAAmendOrderReq
   * @constructor
   * @param {IProtoOAAmendOrderReq=} [properties] Properties to set
   */
  function ProtoOAAmendOrderReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAmendOrderReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.payloadType = 2109;

  /**
   * ProtoOAAmendOrderReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendOrderReq orderId.
   * @member {number|Long} orderId
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.orderId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendOrderReq volume.
   * @member {number|Long} volume
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.volume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendOrderReq limitPrice.
   * @member {number} limitPrice
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.limitPrice = 0;

  /**
   * ProtoOAAmendOrderReq stopPrice.
   * @member {number} stopPrice
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.stopPrice = 0;

  /**
   * ProtoOAAmendOrderReq expirationTimestamp.
   * @member {number|Long} expirationTimestamp
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.expirationTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendOrderReq stopLoss.
   * @member {number} stopLoss
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.stopLoss = 0;

  /**
   * ProtoOAAmendOrderReq takeProfit.
   * @member {number} takeProfit
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.takeProfit = 0;

  /**
   * ProtoOAAmendOrderReq slippageInPoints.
   * @member {number} slippageInPoints
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.slippageInPoints = 0;

  /**
   * ProtoOAAmendOrderReq relativeStopLoss.
   * @member {number|Long} relativeStopLoss
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.relativeStopLoss = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendOrderReq relativeTakeProfit.
   * @member {number|Long} relativeTakeProfit
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.relativeTakeProfit = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendOrderReq guaranteedStopLoss.
   * @member {boolean} guaranteedStopLoss
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.guaranteedStopLoss = false;

  /**
   * ProtoOAAmendOrderReq trailingStopLoss.
   * @member {boolean} trailingStopLoss
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.trailingStopLoss = false;

  /**
   * ProtoOAAmendOrderReq stopTriggerMethod.
   * @member {ProtoOAOrderTriggerMethod} stopTriggerMethod
   * @memberof ProtoOAAmendOrderReq
   * @instance
   */
  ProtoOAAmendOrderReq.prototype.stopTriggerMethod = 1;

  /**
   * Creates a new ProtoOAAmendOrderReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {IProtoOAAmendOrderReq=} [properties] Properties to set
   * @returns {ProtoOAAmendOrderReq} ProtoOAAmendOrderReq instance
   */
  ProtoOAAmendOrderReq.create = function create(properties) {
    return new ProtoOAAmendOrderReq(properties);
  };

  /**
   * Encodes the specified ProtoOAAmendOrderReq message. Does not implicitly {@link ProtoOAAmendOrderReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {IProtoOAAmendOrderReq} message ProtoOAAmendOrderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAmendOrderReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.orderId);
    if (message.volume != null && message.hasOwnProperty("volume"))
      writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.volume);
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      writer.uint32(/* id 5, wireType 1 =*/ 41).double(message.limitPrice);
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      writer.uint32(/* id 6, wireType 1 =*/ 49).double(message.stopPrice);
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      writer
        .uint32(/* id 7, wireType 0 =*/ 56)
        .int64(message.expirationTimestamp);
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      writer.uint32(/* id 8, wireType 1 =*/ 65).double(message.stopLoss);
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      writer.uint32(/* id 9, wireType 1 =*/ 73).double(message.takeProfit);
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      writer
        .uint32(/* id 10, wireType 0 =*/ 80)
        .int32(message.slippageInPoints);
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      writer
        .uint32(/* id 11, wireType 0 =*/ 88)
        .int64(message.relativeStopLoss);
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      writer
        .uint32(/* id 12, wireType 0 =*/ 96)
        .int64(message.relativeTakeProfit);
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      writer
        .uint32(/* id 13, wireType 0 =*/ 104)
        .bool(message.guaranteedStopLoss);
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      writer
        .uint32(/* id 14, wireType 0 =*/ 112)
        .bool(message.trailingStopLoss);
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      writer
        .uint32(/* id 15, wireType 0 =*/ 120)
        .int32(message.stopTriggerMethod);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAmendOrderReq message, length delimited. Does not implicitly {@link ProtoOAAmendOrderReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {IProtoOAAmendOrderReq} message ProtoOAAmendOrderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAmendOrderReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAmendOrderReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAmendOrderReq} ProtoOAAmendOrderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAmendOrderReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAmendOrderReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.orderId = reader.int64();
          break;
        case 4:
          message.volume = reader.int64();
          break;
        case 5:
          message.limitPrice = reader.double();
          break;
        case 6:
          message.stopPrice = reader.double();
          break;
        case 7:
          message.expirationTimestamp = reader.int64();
          break;
        case 8:
          message.stopLoss = reader.double();
          break;
        case 9:
          message.takeProfit = reader.double();
          break;
        case 10:
          message.slippageInPoints = reader.int32();
          break;
        case 11:
          message.relativeStopLoss = reader.int64();
          break;
        case 12:
          message.relativeTakeProfit = reader.int64();
          break;
        case 13:
          message.guaranteedStopLoss = reader.bool();
          break;
        case 14:
          message.trailingStopLoss = reader.bool();
          break;
        case 15:
          message.stopTriggerMethod = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("orderId"))
      throw $util.ProtocolError("missing required 'orderId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAmendOrderReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAmendOrderReq} ProtoOAAmendOrderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAmendOrderReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAmendOrderReq message.
   * @function verify
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAmendOrderReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.orderId) &&
      !(
        message.orderId &&
        $util.isInteger(message.orderId.low) &&
        $util.isInteger(message.orderId.high)
      )
    )
      return "orderId: integer|Long expected";
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (
        !$util.isInteger(message.volume) &&
        !(
          message.volume &&
          $util.isInteger(message.volume.low) &&
          $util.isInteger(message.volume.high)
        )
      )
        return "volume: integer|Long expected";
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      if (typeof message.limitPrice !== "number")
        return "limitPrice: number expected";
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      if (typeof message.stopPrice !== "number")
        return "stopPrice: number expected";
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      if (
        !$util.isInteger(message.expirationTimestamp) &&
        !(
          message.expirationTimestamp &&
          $util.isInteger(message.expirationTimestamp.low) &&
          $util.isInteger(message.expirationTimestamp.high)
        )
      )
        return "expirationTimestamp: integer|Long expected";
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      if (typeof message.stopLoss !== "number")
        return "stopLoss: number expected";
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      if (typeof message.takeProfit !== "number")
        return "takeProfit: number expected";
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      if (!$util.isInteger(message.slippageInPoints))
        return "slippageInPoints: integer expected";
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      if (
        !$util.isInteger(message.relativeStopLoss) &&
        !(
          message.relativeStopLoss &&
          $util.isInteger(message.relativeStopLoss.low) &&
          $util.isInteger(message.relativeStopLoss.high)
        )
      )
        return "relativeStopLoss: integer|Long expected";
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      if (
        !$util.isInteger(message.relativeTakeProfit) &&
        !(
          message.relativeTakeProfit &&
          $util.isInteger(message.relativeTakeProfit.low) &&
          $util.isInteger(message.relativeTakeProfit.high)
        )
      )
        return "relativeTakeProfit: integer|Long expected";
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      if (typeof message.guaranteedStopLoss !== "boolean")
        return "guaranteedStopLoss: boolean expected";
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      if (typeof message.trailingStopLoss !== "boolean")
        return "trailingStopLoss: boolean expected";
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      switch (message.stopTriggerMethod) {
        default:
          return "stopTriggerMethod: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOAAmendOrderReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAmendOrderReq} ProtoOAAmendOrderReq
   */
  ProtoOAAmendOrderReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAmendOrderReq) return object;
    var message = new $root.ProtoOAAmendOrderReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.orderId != null)
      if ($util.Long)
        (message.orderId = $util.Long.fromValue(
          object.orderId
        )).unsigned = false;
      else if (typeof object.orderId === "string")
        message.orderId = parseInt(object.orderId, 10);
      else if (typeof object.orderId === "number")
        message.orderId = object.orderId;
      else if (typeof object.orderId === "object")
        message.orderId = new $util.LongBits(
          object.orderId.low >>> 0,
          object.orderId.high >>> 0
        ).toNumber();
    if (object.volume != null)
      if ($util.Long)
        (message.volume = $util.Long.fromValue(object.volume)).unsigned = false;
      else if (typeof object.volume === "string")
        message.volume = parseInt(object.volume, 10);
      else if (typeof object.volume === "number")
        message.volume = object.volume;
      else if (typeof object.volume === "object")
        message.volume = new $util.LongBits(
          object.volume.low >>> 0,
          object.volume.high >>> 0
        ).toNumber();
    if (object.limitPrice != null)
      message.limitPrice = Number(object.limitPrice);
    if (object.stopPrice != null) message.stopPrice = Number(object.stopPrice);
    if (object.expirationTimestamp != null)
      if ($util.Long)
        (message.expirationTimestamp = $util.Long.fromValue(
          object.expirationTimestamp
        )).unsigned = false;
      else if (typeof object.expirationTimestamp === "string")
        message.expirationTimestamp = parseInt(object.expirationTimestamp, 10);
      else if (typeof object.expirationTimestamp === "number")
        message.expirationTimestamp = object.expirationTimestamp;
      else if (typeof object.expirationTimestamp === "object")
        message.expirationTimestamp = new $util.LongBits(
          object.expirationTimestamp.low >>> 0,
          object.expirationTimestamp.high >>> 0
        ).toNumber();
    if (object.stopLoss != null) message.stopLoss = Number(object.stopLoss);
    if (object.takeProfit != null)
      message.takeProfit = Number(object.takeProfit);
    if (object.slippageInPoints != null)
      message.slippageInPoints = object.slippageInPoints | 0;
    if (object.relativeStopLoss != null)
      if ($util.Long)
        (message.relativeStopLoss = $util.Long.fromValue(
          object.relativeStopLoss
        )).unsigned = false;
      else if (typeof object.relativeStopLoss === "string")
        message.relativeStopLoss = parseInt(object.relativeStopLoss, 10);
      else if (typeof object.relativeStopLoss === "number")
        message.relativeStopLoss = object.relativeStopLoss;
      else if (typeof object.relativeStopLoss === "object")
        message.relativeStopLoss = new $util.LongBits(
          object.relativeStopLoss.low >>> 0,
          object.relativeStopLoss.high >>> 0
        ).toNumber();
    if (object.relativeTakeProfit != null)
      if ($util.Long)
        (message.relativeTakeProfit = $util.Long.fromValue(
          object.relativeTakeProfit
        )).unsigned = false;
      else if (typeof object.relativeTakeProfit === "string")
        message.relativeTakeProfit = parseInt(object.relativeTakeProfit, 10);
      else if (typeof object.relativeTakeProfit === "number")
        message.relativeTakeProfit = object.relativeTakeProfit;
      else if (typeof object.relativeTakeProfit === "object")
        message.relativeTakeProfit = new $util.LongBits(
          object.relativeTakeProfit.low >>> 0,
          object.relativeTakeProfit.high >>> 0
        ).toNumber();
    if (object.guaranteedStopLoss != null)
      message.guaranteedStopLoss = Boolean(object.guaranteedStopLoss);
    if (object.trailingStopLoss != null)
      message.trailingStopLoss = Boolean(object.trailingStopLoss);
    switch (object.stopTriggerMethod) {
      case "TRADE":
      case 1:
        message.stopTriggerMethod = 1;
        break;
      case "OPPOSITE":
      case 2:
        message.stopTriggerMethod = 2;
        break;
      case "DOUBLE_TRADE":
      case 3:
        message.stopTriggerMethod = 3;
        break;
      case "DOUBLE_OPPOSITE":
      case 4:
        message.stopTriggerMethod = 4;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAmendOrderReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAmendOrderReq
   * @static
   * @param {ProtoOAAmendOrderReq} message ProtoOAAmendOrderReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAmendOrderReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_AMEND_ORDER_REQ" : 2109;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.orderId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.orderId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.volume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.volume = options.longs === String ? "0" : 0;
      object.limitPrice = 0;
      object.stopPrice = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.expirationTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.expirationTimestamp = options.longs === String ? "0" : 0;
      object.stopLoss = 0;
      object.takeProfit = 0;
      object.slippageInPoints = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.relativeStopLoss =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.relativeStopLoss = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.relativeTakeProfit =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.relativeTakeProfit = options.longs === String ? "0" : 0;
      object.guaranteedStopLoss = false;
      object.trailingStopLoss = false;
      object.stopTriggerMethod = options.enums === String ? "TRADE" : 1;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      if (typeof message.orderId === "number")
        object.orderId =
          options.longs === String ? String(message.orderId) : message.orderId;
      else
        object.orderId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.orderId)
            : options.longs === Number
            ? new $util.LongBits(
                message.orderId.low >>> 0,
                message.orderId.high >>> 0
              ).toNumber()
            : message.orderId;
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (typeof message.volume === "number")
        object.volume =
          options.longs === String ? String(message.volume) : message.volume;
      else
        object.volume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.volume)
            : options.longs === Number
            ? new $util.LongBits(
                message.volume.low >>> 0,
                message.volume.high >>> 0
              ).toNumber()
            : message.volume;
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      object.limitPrice =
        options.json && !isFinite(message.limitPrice)
          ? String(message.limitPrice)
          : message.limitPrice;
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      object.stopPrice =
        options.json && !isFinite(message.stopPrice)
          ? String(message.stopPrice)
          : message.stopPrice;
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      if (typeof message.expirationTimestamp === "number")
        object.expirationTimestamp =
          options.longs === String
            ? String(message.expirationTimestamp)
            : message.expirationTimestamp;
      else
        object.expirationTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.expirationTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.expirationTimestamp.low >>> 0,
                message.expirationTimestamp.high >>> 0
              ).toNumber()
            : message.expirationTimestamp;
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      object.stopLoss =
        options.json && !isFinite(message.stopLoss)
          ? String(message.stopLoss)
          : message.stopLoss;
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      object.takeProfit =
        options.json && !isFinite(message.takeProfit)
          ? String(message.takeProfit)
          : message.takeProfit;
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      object.slippageInPoints = message.slippageInPoints;
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      if (typeof message.relativeStopLoss === "number")
        object.relativeStopLoss =
          options.longs === String
            ? String(message.relativeStopLoss)
            : message.relativeStopLoss;
      else
        object.relativeStopLoss =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.relativeStopLoss)
            : options.longs === Number
            ? new $util.LongBits(
                message.relativeStopLoss.low >>> 0,
                message.relativeStopLoss.high >>> 0
              ).toNumber()
            : message.relativeStopLoss;
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      if (typeof message.relativeTakeProfit === "number")
        object.relativeTakeProfit =
          options.longs === String
            ? String(message.relativeTakeProfit)
            : message.relativeTakeProfit;
      else
        object.relativeTakeProfit =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.relativeTakeProfit)
            : options.longs === Number
            ? new $util.LongBits(
                message.relativeTakeProfit.low >>> 0,
                message.relativeTakeProfit.high >>> 0
              ).toNumber()
            : message.relativeTakeProfit;
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      object.guaranteedStopLoss = message.guaranteedStopLoss;
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      object.trailingStopLoss = message.trailingStopLoss;
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      object.stopTriggerMethod =
        options.enums === String
          ? $root.ProtoOAOrderTriggerMethod[message.stopTriggerMethod]
          : message.stopTriggerMethod;
    return object;
  };

  /**
   * Converts this ProtoOAAmendOrderReq to JSON.
   * @function toJSON
   * @memberof ProtoOAAmendOrderReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAmendOrderReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAmendOrderReq;
})();

$root.ProtoOAAmendPositionSLTPReq = (function() {
  /**
   * Properties of a ProtoOAAmendPositionSLTPReq.
   * @exports IProtoOAAmendPositionSLTPReq
   * @interface IProtoOAAmendPositionSLTPReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAmendPositionSLTPReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAmendPositionSLTPReq ctidTraderAccountId
   * @property {number|Long} positionId ProtoOAAmendPositionSLTPReq positionId
   * @property {number|null} [stopLoss] ProtoOAAmendPositionSLTPReq stopLoss
   * @property {number|null} [takeProfit] ProtoOAAmendPositionSLTPReq takeProfit
   * @property {boolean|null} [guaranteedStopLoss] ProtoOAAmendPositionSLTPReq guaranteedStopLoss
   * @property {boolean|null} [trailingStopLoss] ProtoOAAmendPositionSLTPReq trailingStopLoss
   * @property {ProtoOAOrderTriggerMethod|null} [stopLossTriggerMethod] ProtoOAAmendPositionSLTPReq stopLossTriggerMethod
   */

  /**
   * Constructs a new ProtoOAAmendPositionSLTPReq.
   * @exports ProtoOAAmendPositionSLTPReq
   * @classdesc Request for amending StopLoss and TakeProfit of existing position. Allowed only if the accessToken has "trade" permissions for the trading account.
   * @implements IProtoOAAmendPositionSLTPReq
   * @constructor
   * @param {IProtoOAAmendPositionSLTPReq=} [properties] Properties to set
   */
  function ProtoOAAmendPositionSLTPReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAmendPositionSLTPReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.payloadType = 2110;

  /**
   * ProtoOAAmendPositionSLTPReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendPositionSLTPReq positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAmendPositionSLTPReq stopLoss.
   * @member {number} stopLoss
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.stopLoss = 0;

  /**
   * ProtoOAAmendPositionSLTPReq takeProfit.
   * @member {number} takeProfit
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.takeProfit = 0;

  /**
   * ProtoOAAmendPositionSLTPReq guaranteedStopLoss.
   * @member {boolean} guaranteedStopLoss
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.guaranteedStopLoss = false;

  /**
   * ProtoOAAmendPositionSLTPReq trailingStopLoss.
   * @member {boolean} trailingStopLoss
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.trailingStopLoss = false;

  /**
   * ProtoOAAmendPositionSLTPReq stopLossTriggerMethod.
   * @member {ProtoOAOrderTriggerMethod} stopLossTriggerMethod
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   */
  ProtoOAAmendPositionSLTPReq.prototype.stopLossTriggerMethod = 1;

  /**
   * Creates a new ProtoOAAmendPositionSLTPReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {IProtoOAAmendPositionSLTPReq=} [properties] Properties to set
   * @returns {ProtoOAAmendPositionSLTPReq} ProtoOAAmendPositionSLTPReq instance
   */
  ProtoOAAmendPositionSLTPReq.create = function create(properties) {
    return new ProtoOAAmendPositionSLTPReq(properties);
  };

  /**
   * Encodes the specified ProtoOAAmendPositionSLTPReq message. Does not implicitly {@link ProtoOAAmendPositionSLTPReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {IProtoOAAmendPositionSLTPReq} message ProtoOAAmendPositionSLTPReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAmendPositionSLTPReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.positionId);
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      writer.uint32(/* id 4, wireType 1 =*/ 33).double(message.stopLoss);
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      writer.uint32(/* id 5, wireType 1 =*/ 41).double(message.takeProfit);
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      writer
        .uint32(/* id 7, wireType 0 =*/ 56)
        .bool(message.guaranteedStopLoss);
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      writer.uint32(/* id 8, wireType 0 =*/ 64).bool(message.trailingStopLoss);
    if (
      message.stopLossTriggerMethod != null &&
      message.hasOwnProperty("stopLossTriggerMethod")
    )
      writer
        .uint32(/* id 9, wireType 0 =*/ 72)
        .int32(message.stopLossTriggerMethod);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAmendPositionSLTPReq message, length delimited. Does not implicitly {@link ProtoOAAmendPositionSLTPReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {IProtoOAAmendPositionSLTPReq} message ProtoOAAmendPositionSLTPReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAmendPositionSLTPReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAmendPositionSLTPReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAmendPositionSLTPReq} ProtoOAAmendPositionSLTPReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAmendPositionSLTPReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAmendPositionSLTPReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.positionId = reader.int64();
          break;
        case 4:
          message.stopLoss = reader.double();
          break;
        case 5:
          message.takeProfit = reader.double();
          break;
        case 7:
          message.guaranteedStopLoss = reader.bool();
          break;
        case 8:
          message.trailingStopLoss = reader.bool();
          break;
        case 9:
          message.stopLossTriggerMethod = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("positionId"))
      throw $util.ProtocolError("missing required 'positionId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAmendPositionSLTPReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAmendPositionSLTPReq} ProtoOAAmendPositionSLTPReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAmendPositionSLTPReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAmendPositionSLTPReq message.
   * @function verify
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAmendPositionSLTPReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.positionId) &&
      !(
        message.positionId &&
        $util.isInteger(message.positionId.low) &&
        $util.isInteger(message.positionId.high)
      )
    )
      return "positionId: integer|Long expected";
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      if (typeof message.stopLoss !== "number")
        return "stopLoss: number expected";
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      if (typeof message.takeProfit !== "number")
        return "takeProfit: number expected";
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      if (typeof message.guaranteedStopLoss !== "boolean")
        return "guaranteedStopLoss: boolean expected";
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      if (typeof message.trailingStopLoss !== "boolean")
        return "trailingStopLoss: boolean expected";
    if (
      message.stopLossTriggerMethod != null &&
      message.hasOwnProperty("stopLossTriggerMethod")
    )
      switch (message.stopLossTriggerMethod) {
        default:
          return "stopLossTriggerMethod: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOAAmendPositionSLTPReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAmendPositionSLTPReq} ProtoOAAmendPositionSLTPReq
   */
  ProtoOAAmendPositionSLTPReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAmendPositionSLTPReq) return object;
    var message = new $root.ProtoOAAmendPositionSLTPReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.stopLoss != null) message.stopLoss = Number(object.stopLoss);
    if (object.takeProfit != null)
      message.takeProfit = Number(object.takeProfit);
    if (object.guaranteedStopLoss != null)
      message.guaranteedStopLoss = Boolean(object.guaranteedStopLoss);
    if (object.trailingStopLoss != null)
      message.trailingStopLoss = Boolean(object.trailingStopLoss);
    switch (object.stopLossTriggerMethod) {
      case "TRADE":
      case 1:
        message.stopLossTriggerMethod = 1;
        break;
      case "OPPOSITE":
      case 2:
        message.stopLossTriggerMethod = 2;
        break;
      case "DOUBLE_TRADE":
      case 3:
        message.stopLossTriggerMethod = 3;
        break;
      case "DOUBLE_OPPOSITE":
      case 4:
        message.stopLossTriggerMethod = 4;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAmendPositionSLTPReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAmendPositionSLTPReq
   * @static
   * @param {ProtoOAAmendPositionSLTPReq} message ProtoOAAmendPositionSLTPReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAmendPositionSLTPReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_AMEND_POSITION_SLTP_REQ" : 2110;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      object.stopLoss = 0;
      object.takeProfit = 0;
      object.guaranteedStopLoss = false;
      object.trailingStopLoss = false;
      object.stopLossTriggerMethod = options.enums === String ? "TRADE" : 1;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      object.stopLoss =
        options.json && !isFinite(message.stopLoss)
          ? String(message.stopLoss)
          : message.stopLoss;
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      object.takeProfit =
        options.json && !isFinite(message.takeProfit)
          ? String(message.takeProfit)
          : message.takeProfit;
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      object.guaranteedStopLoss = message.guaranteedStopLoss;
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      object.trailingStopLoss = message.trailingStopLoss;
    if (
      message.stopLossTriggerMethod != null &&
      message.hasOwnProperty("stopLossTriggerMethod")
    )
      object.stopLossTriggerMethod =
        options.enums === String
          ? $root.ProtoOAOrderTriggerMethod[message.stopLossTriggerMethod]
          : message.stopLossTriggerMethod;
    return object;
  };

  /**
   * Converts this ProtoOAAmendPositionSLTPReq to JSON.
   * @function toJSON
   * @memberof ProtoOAAmendPositionSLTPReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAmendPositionSLTPReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAmendPositionSLTPReq;
})();

$root.ProtoOAClosePositionReq = (function() {
  /**
   * Properties of a ProtoOAClosePositionReq.
   * @exports IProtoOAClosePositionReq
   * @interface IProtoOAClosePositionReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAClosePositionReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAClosePositionReq ctidTraderAccountId
   * @property {number|Long} positionId ProtoOAClosePositionReq positionId
   * @property {number|Long} volume ProtoOAClosePositionReq volume
   */

  /**
   * Constructs a new ProtoOAClosePositionReq.
   * @exports ProtoOAClosePositionReq
   * @classdesc Request for closing or partially closing of an existing position. Allowed only if the accessToken has "trade" permissions for the trading account.
   * @implements IProtoOAClosePositionReq
   * @constructor
   * @param {IProtoOAClosePositionReq=} [properties] Properties to set
   */
  function ProtoOAClosePositionReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAClosePositionReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAClosePositionReq
   * @instance
   */
  ProtoOAClosePositionReq.prototype.payloadType = 2111;

  /**
   * ProtoOAClosePositionReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAClosePositionReq
   * @instance
   */
  ProtoOAClosePositionReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAClosePositionReq positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOAClosePositionReq
   * @instance
   */
  ProtoOAClosePositionReq.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAClosePositionReq volume.
   * @member {number|Long} volume
   * @memberof ProtoOAClosePositionReq
   * @instance
   */
  ProtoOAClosePositionReq.prototype.volume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAClosePositionReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {IProtoOAClosePositionReq=} [properties] Properties to set
   * @returns {ProtoOAClosePositionReq} ProtoOAClosePositionReq instance
   */
  ProtoOAClosePositionReq.create = function create(properties) {
    return new ProtoOAClosePositionReq(properties);
  };

  /**
   * Encodes the specified ProtoOAClosePositionReq message. Does not implicitly {@link ProtoOAClosePositionReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {IProtoOAClosePositionReq} message ProtoOAClosePositionReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAClosePositionReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.positionId);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.volume);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAClosePositionReq message, length delimited. Does not implicitly {@link ProtoOAClosePositionReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {IProtoOAClosePositionReq} message ProtoOAClosePositionReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAClosePositionReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAClosePositionReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAClosePositionReq} ProtoOAClosePositionReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAClosePositionReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAClosePositionReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.positionId = reader.int64();
          break;
        case 4:
          message.volume = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("positionId"))
      throw $util.ProtocolError("missing required 'positionId'", {
        instance: message
      });
    if (!message.hasOwnProperty("volume"))
      throw $util.ProtocolError("missing required 'volume'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAClosePositionReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAClosePositionReq} ProtoOAClosePositionReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAClosePositionReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAClosePositionReq message.
   * @function verify
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAClosePositionReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.positionId) &&
      !(
        message.positionId &&
        $util.isInteger(message.positionId.low) &&
        $util.isInteger(message.positionId.high)
      )
    )
      return "positionId: integer|Long expected";
    if (
      !$util.isInteger(message.volume) &&
      !(
        message.volume &&
        $util.isInteger(message.volume.low) &&
        $util.isInteger(message.volume.high)
      )
    )
      return "volume: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAClosePositionReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAClosePositionReq} ProtoOAClosePositionReq
   */
  ProtoOAClosePositionReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAClosePositionReq) return object;
    var message = new $root.ProtoOAClosePositionReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.volume != null)
      if ($util.Long)
        (message.volume = $util.Long.fromValue(object.volume)).unsigned = false;
      else if (typeof object.volume === "string")
        message.volume = parseInt(object.volume, 10);
      else if (typeof object.volume === "number")
        message.volume = object.volume;
      else if (typeof object.volume === "object")
        message.volume = new $util.LongBits(
          object.volume.low >>> 0,
          object.volume.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAClosePositionReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAClosePositionReq
   * @static
   * @param {ProtoOAClosePositionReq} message ProtoOAClosePositionReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAClosePositionReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_CLOSE_POSITION_REQ" : 2111;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.volume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.volume = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (typeof message.volume === "number")
        object.volume =
          options.longs === String ? String(message.volume) : message.volume;
      else
        object.volume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.volume)
            : options.longs === Number
            ? new $util.LongBits(
                message.volume.low >>> 0,
                message.volume.high >>> 0
              ).toNumber()
            : message.volume;
    return object;
  };

  /**
   * Converts this ProtoOAClosePositionReq to JSON.
   * @function toJSON
   * @memberof ProtoOAClosePositionReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAClosePositionReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAClosePositionReq;
})();

$root.ProtoOATrailingSLChangedEvent = (function() {
  /**
   * Properties of a ProtoOATrailingSLChangedEvent.
   * @exports IProtoOATrailingSLChangedEvent
   * @interface IProtoOATrailingSLChangedEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOATrailingSLChangedEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOATrailingSLChangedEvent ctidTraderAccountId
   * @property {number|Long} positionId ProtoOATrailingSLChangedEvent positionId
   * @property {number|Long} orderId ProtoOATrailingSLChangedEvent orderId
   * @property {number} stopPrice ProtoOATrailingSLChangedEvent stopPrice
   * @property {number|Long} utcLastUpdateTimestamp ProtoOATrailingSLChangedEvent utcLastUpdateTimestamp
   */

  /**
   * Constructs a new ProtoOATrailingSLChangedEvent.
   * @exports ProtoOATrailingSLChangedEvent
   * @classdesc Event that is sent when the level of the Trailing Stop Loss is changed due to the price level changes.
   * @implements IProtoOATrailingSLChangedEvent
   * @constructor
   * @param {IProtoOATrailingSLChangedEvent=} [properties] Properties to set
   */
  function ProtoOATrailingSLChangedEvent(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATrailingSLChangedEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOATrailingSLChangedEvent
   * @instance
   */
  ProtoOATrailingSLChangedEvent.prototype.payloadType = 2107;

  /**
   * ProtoOATrailingSLChangedEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOATrailingSLChangedEvent
   * @instance
   */
  ProtoOATrailingSLChangedEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrailingSLChangedEvent positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOATrailingSLChangedEvent
   * @instance
   */
  ProtoOATrailingSLChangedEvent.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrailingSLChangedEvent orderId.
   * @member {number|Long} orderId
   * @memberof ProtoOATrailingSLChangedEvent
   * @instance
   */
  ProtoOATrailingSLChangedEvent.prototype.orderId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrailingSLChangedEvent stopPrice.
   * @member {number} stopPrice
   * @memberof ProtoOATrailingSLChangedEvent
   * @instance
   */
  ProtoOATrailingSLChangedEvent.prototype.stopPrice = 0;

  /**
   * ProtoOATrailingSLChangedEvent utcLastUpdateTimestamp.
   * @member {number|Long} utcLastUpdateTimestamp
   * @memberof ProtoOATrailingSLChangedEvent
   * @instance
   */
  ProtoOATrailingSLChangedEvent.prototype.utcLastUpdateTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOATrailingSLChangedEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {IProtoOATrailingSLChangedEvent=} [properties] Properties to set
   * @returns {ProtoOATrailingSLChangedEvent} ProtoOATrailingSLChangedEvent instance
   */
  ProtoOATrailingSLChangedEvent.create = function create(properties) {
    return new ProtoOATrailingSLChangedEvent(properties);
  };

  /**
   * Encodes the specified ProtoOATrailingSLChangedEvent message. Does not implicitly {@link ProtoOATrailingSLChangedEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {IProtoOATrailingSLChangedEvent} message ProtoOATrailingSLChangedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATrailingSLChangedEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.positionId);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.orderId);
    writer.uint32(/* id 5, wireType 1 =*/ 41).double(message.stopPrice);
    writer
      .uint32(/* id 6, wireType 0 =*/ 48)
      .int64(message.utcLastUpdateTimestamp);
    return writer;
  };

  /**
   * Encodes the specified ProtoOATrailingSLChangedEvent message, length delimited. Does not implicitly {@link ProtoOATrailingSLChangedEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {IProtoOATrailingSLChangedEvent} message ProtoOATrailingSLChangedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATrailingSLChangedEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATrailingSLChangedEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATrailingSLChangedEvent} ProtoOATrailingSLChangedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATrailingSLChangedEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATrailingSLChangedEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.positionId = reader.int64();
          break;
        case 4:
          message.orderId = reader.int64();
          break;
        case 5:
          message.stopPrice = reader.double();
          break;
        case 6:
          message.utcLastUpdateTimestamp = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("positionId"))
      throw $util.ProtocolError("missing required 'positionId'", {
        instance: message
      });
    if (!message.hasOwnProperty("orderId"))
      throw $util.ProtocolError("missing required 'orderId'", {
        instance: message
      });
    if (!message.hasOwnProperty("stopPrice"))
      throw $util.ProtocolError("missing required 'stopPrice'", {
        instance: message
      });
    if (!message.hasOwnProperty("utcLastUpdateTimestamp"))
      throw $util.ProtocolError("missing required 'utcLastUpdateTimestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATrailingSLChangedEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATrailingSLChangedEvent} ProtoOATrailingSLChangedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATrailingSLChangedEvent.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATrailingSLChangedEvent message.
   * @function verify
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATrailingSLChangedEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.positionId) &&
      !(
        message.positionId &&
        $util.isInteger(message.positionId.low) &&
        $util.isInteger(message.positionId.high)
      )
    )
      return "positionId: integer|Long expected";
    if (
      !$util.isInteger(message.orderId) &&
      !(
        message.orderId &&
        $util.isInteger(message.orderId.low) &&
        $util.isInteger(message.orderId.high)
      )
    )
      return "orderId: integer|Long expected";
    if (typeof message.stopPrice !== "number")
      return "stopPrice: number expected";
    if (
      !$util.isInteger(message.utcLastUpdateTimestamp) &&
      !(
        message.utcLastUpdateTimestamp &&
        $util.isInteger(message.utcLastUpdateTimestamp.low) &&
        $util.isInteger(message.utcLastUpdateTimestamp.high)
      )
    )
      return "utcLastUpdateTimestamp: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOATrailingSLChangedEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATrailingSLChangedEvent} ProtoOATrailingSLChangedEvent
   */
  ProtoOATrailingSLChangedEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATrailingSLChangedEvent) return object;
    var message = new $root.ProtoOATrailingSLChangedEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.orderId != null)
      if ($util.Long)
        (message.orderId = $util.Long.fromValue(
          object.orderId
        )).unsigned = false;
      else if (typeof object.orderId === "string")
        message.orderId = parseInt(object.orderId, 10);
      else if (typeof object.orderId === "number")
        message.orderId = object.orderId;
      else if (typeof object.orderId === "object")
        message.orderId = new $util.LongBits(
          object.orderId.low >>> 0,
          object.orderId.high >>> 0
        ).toNumber();
    if (object.stopPrice != null) message.stopPrice = Number(object.stopPrice);
    if (object.utcLastUpdateTimestamp != null)
      if ($util.Long)
        (message.utcLastUpdateTimestamp = $util.Long.fromValue(
          object.utcLastUpdateTimestamp
        )).unsigned = false;
      else if (typeof object.utcLastUpdateTimestamp === "string")
        message.utcLastUpdateTimestamp = parseInt(
          object.utcLastUpdateTimestamp,
          10
        );
      else if (typeof object.utcLastUpdateTimestamp === "number")
        message.utcLastUpdateTimestamp = object.utcLastUpdateTimestamp;
      else if (typeof object.utcLastUpdateTimestamp === "object")
        message.utcLastUpdateTimestamp = new $util.LongBits(
          object.utcLastUpdateTimestamp.low >>> 0,
          object.utcLastUpdateTimestamp.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATrailingSLChangedEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATrailingSLChangedEvent
   * @static
   * @param {ProtoOATrailingSLChangedEvent} message ProtoOATrailingSLChangedEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATrailingSLChangedEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_TRAILING_SL_CHANGED_EVENT" : 2107;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.orderId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.orderId = options.longs === String ? "0" : 0;
      object.stopPrice = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.utcLastUpdateTimestamp = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      if (typeof message.orderId === "number")
        object.orderId =
          options.longs === String ? String(message.orderId) : message.orderId;
      else
        object.orderId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.orderId)
            : options.longs === Number
            ? new $util.LongBits(
                message.orderId.low >>> 0,
                message.orderId.high >>> 0
              ).toNumber()
            : message.orderId;
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      object.stopPrice =
        options.json && !isFinite(message.stopPrice)
          ? String(message.stopPrice)
          : message.stopPrice;
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      if (typeof message.utcLastUpdateTimestamp === "number")
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? String(message.utcLastUpdateTimestamp)
            : message.utcLastUpdateTimestamp;
      else
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.utcLastUpdateTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.utcLastUpdateTimestamp.low >>> 0,
                message.utcLastUpdateTimestamp.high >>> 0
              ).toNumber()
            : message.utcLastUpdateTimestamp;
    return object;
  };

  /**
   * Converts this ProtoOATrailingSLChangedEvent to JSON.
   * @function toJSON
   * @memberof ProtoOATrailingSLChangedEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATrailingSLChangedEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATrailingSLChangedEvent;
})();

$root.ProtoOAAssetListReq = (function() {
  /**
   * Properties of a ProtoOAAssetListReq.
   * @exports IProtoOAAssetListReq
   * @interface IProtoOAAssetListReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAssetListReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAssetListReq ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAAssetListReq.
   * @exports ProtoOAAssetListReq
   * @classdesc Request for the list of assets available for a trader's account.
   * @implements IProtoOAAssetListReq
   * @constructor
   * @param {IProtoOAAssetListReq=} [properties] Properties to set
   */
  function ProtoOAAssetListReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAssetListReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAssetListReq
   * @instance
   */
  ProtoOAAssetListReq.prototype.payloadType = 2112;

  /**
   * ProtoOAAssetListReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAssetListReq
   * @instance
   */
  ProtoOAAssetListReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAAssetListReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {IProtoOAAssetListReq=} [properties] Properties to set
   * @returns {ProtoOAAssetListReq} ProtoOAAssetListReq instance
   */
  ProtoOAAssetListReq.create = function create(properties) {
    return new ProtoOAAssetListReq(properties);
  };

  /**
   * Encodes the specified ProtoOAAssetListReq message. Does not implicitly {@link ProtoOAAssetListReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {IProtoOAAssetListReq} message ProtoOAAssetListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetListReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAssetListReq message, length delimited. Does not implicitly {@link ProtoOAAssetListReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {IProtoOAAssetListReq} message ProtoOAAssetListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetListReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAssetListReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAssetListReq} ProtoOAAssetListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetListReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAssetListReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAssetListReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAssetListReq} ProtoOAAssetListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetListReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAssetListReq message.
   * @function verify
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAssetListReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAAssetListReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAssetListReq} ProtoOAAssetListReq
   */
  ProtoOAAssetListReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAssetListReq) return object;
    var message = new $root.ProtoOAAssetListReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAssetListReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAssetListReq
   * @static
   * @param {ProtoOAAssetListReq} message ProtoOAAssetListReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAssetListReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ASSET_LIST_REQ" : 2112;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAAssetListReq to JSON.
   * @function toJSON
   * @memberof ProtoOAAssetListReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAssetListReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAssetListReq;
})();

$root.ProtoOAAssetListRes = (function() {
  /**
   * Properties of a ProtoOAAssetListRes.
   * @exports IProtoOAAssetListRes
   * @interface IProtoOAAssetListRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAssetListRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAssetListRes ctidTraderAccountId
   * @property {Array.<IProtoOAAsset>|null} [asset] ProtoOAAssetListRes asset
   */

  /**
   * Constructs a new ProtoOAAssetListRes.
   * @exports ProtoOAAssetListRes
   * @classdesc Response to the ProtoOAAssetListReq request.
   * @implements IProtoOAAssetListRes
   * @constructor
   * @param {IProtoOAAssetListRes=} [properties] Properties to set
   */
  function ProtoOAAssetListRes(properties) {
    this.asset = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAssetListRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAssetListRes
   * @instance
   */
  ProtoOAAssetListRes.prototype.payloadType = 2113;

  /**
   * ProtoOAAssetListRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAssetListRes
   * @instance
   */
  ProtoOAAssetListRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAssetListRes asset.
   * @member {Array.<IProtoOAAsset>} asset
   * @memberof ProtoOAAssetListRes
   * @instance
   */
  ProtoOAAssetListRes.prototype.asset = $util.emptyArray;

  /**
   * Creates a new ProtoOAAssetListRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {IProtoOAAssetListRes=} [properties] Properties to set
   * @returns {ProtoOAAssetListRes} ProtoOAAssetListRes instance
   */
  ProtoOAAssetListRes.create = function create(properties) {
    return new ProtoOAAssetListRes(properties);
  };

  /**
   * Encodes the specified ProtoOAAssetListRes message. Does not implicitly {@link ProtoOAAssetListRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {IProtoOAAssetListRes} message ProtoOAAssetListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetListRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.asset != null && message.asset.length)
      for (var i = 0; i < message.asset.length; ++i)
        $root.ProtoOAAsset.encode(
          message.asset[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAssetListRes message, length delimited. Does not implicitly {@link ProtoOAAssetListRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {IProtoOAAssetListRes} message ProtoOAAssetListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetListRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAssetListRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAssetListRes} ProtoOAAssetListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetListRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAssetListRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.asset && message.asset.length)) message.asset = [];
          message.asset.push(
            $root.ProtoOAAsset.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAssetListRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAssetListRes} ProtoOAAssetListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetListRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAssetListRes message.
   * @function verify
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAssetListRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.asset != null && message.hasOwnProperty("asset")) {
      if (!Array.isArray(message.asset)) return "asset: array expected";
      for (var i = 0; i < message.asset.length; ++i) {
        var error = $root.ProtoOAAsset.verify(message.asset[i]);
        if (error) return "asset." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOAAssetListRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAssetListRes} ProtoOAAssetListRes
   */
  ProtoOAAssetListRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAssetListRes) return object;
    var message = new $root.ProtoOAAssetListRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.asset) {
      if (!Array.isArray(object.asset))
        throw TypeError(".ProtoOAAssetListRes.asset: array expected");
      message.asset = [];
      for (var i = 0; i < object.asset.length; ++i) {
        if (typeof object.asset[i] !== "object")
          throw TypeError(".ProtoOAAssetListRes.asset: object expected");
        message.asset[i] = $root.ProtoOAAsset.fromObject(object.asset[i]);
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAssetListRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAssetListRes
   * @static
   * @param {ProtoOAAssetListRes} message ProtoOAAssetListRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAssetListRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.asset = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ASSET_LIST_RES" : 2113;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.asset && message.asset.length) {
      object.asset = [];
      for (var j = 0; j < message.asset.length; ++j)
        object.asset[j] = $root.ProtoOAAsset.toObject(
          message.asset[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOAAssetListRes to JSON.
   * @function toJSON
   * @memberof ProtoOAAssetListRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAssetListRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAssetListRes;
})();

$root.ProtoOASymbolsListReq = (function() {
  /**
   * Properties of a ProtoOASymbolsListReq.
   * @exports IProtoOASymbolsListReq
   * @interface IProtoOASymbolsListReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolsListReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolsListReq ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOASymbolsListReq.
   * @exports ProtoOASymbolsListReq
   * @classdesc Request for a list of symbols available for a trading account. Symbol entries are returned with the limited set of fields.
   * @implements IProtoOASymbolsListReq
   * @constructor
   * @param {IProtoOASymbolsListReq=} [properties] Properties to set
   */
  function ProtoOASymbolsListReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolsListReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolsListReq
   * @instance
   */
  ProtoOASymbolsListReq.prototype.payloadType = 2114;

  /**
   * ProtoOASymbolsListReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolsListReq
   * @instance
   */
  ProtoOASymbolsListReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOASymbolsListReq instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {IProtoOASymbolsListReq=} [properties] Properties to set
   * @returns {ProtoOASymbolsListReq} ProtoOASymbolsListReq instance
   */
  ProtoOASymbolsListReq.create = function create(properties) {
    return new ProtoOASymbolsListReq(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolsListReq message. Does not implicitly {@link ProtoOASymbolsListReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {IProtoOASymbolsListReq} message ProtoOASymbolsListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsListReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolsListReq message, length delimited. Does not implicitly {@link ProtoOASymbolsListReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {IProtoOASymbolsListReq} message ProtoOASymbolsListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsListReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolsListReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolsListReq} ProtoOASymbolsListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsListReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolsListReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolsListReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolsListReq} ProtoOASymbolsListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsListReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolsListReq message.
   * @function verify
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolsListReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOASymbolsListReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolsListReq} ProtoOASymbolsListReq
   */
  ProtoOASymbolsListReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolsListReq) return object;
    var message = new $root.ProtoOASymbolsListReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolsListReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolsListReq
   * @static
   * @param {ProtoOASymbolsListReq} message ProtoOASymbolsListReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolsListReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOLS_LIST_REQ" : 2114;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOASymbolsListReq to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolsListReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolsListReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolsListReq;
})();

$root.ProtoOASymbolsListRes = (function() {
  /**
   * Properties of a ProtoOASymbolsListRes.
   * @exports IProtoOASymbolsListRes
   * @interface IProtoOASymbolsListRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolsListRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolsListRes ctidTraderAccountId
   * @property {Array.<IProtoOALightSymbol>|null} [symbol] ProtoOASymbolsListRes symbol
   */

  /**
   * Constructs a new ProtoOASymbolsListRes.
   * @exports ProtoOASymbolsListRes
   * @classdesc Response to the ProtoOASymbolsListReq request.
   * @implements IProtoOASymbolsListRes
   * @constructor
   * @param {IProtoOASymbolsListRes=} [properties] Properties to set
   */
  function ProtoOASymbolsListRes(properties) {
    this.symbol = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolsListRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolsListRes
   * @instance
   */
  ProtoOASymbolsListRes.prototype.payloadType = 2115;

  /**
   * ProtoOASymbolsListRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolsListRes
   * @instance
   */
  ProtoOASymbolsListRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolsListRes symbol.
   * @member {Array.<IProtoOALightSymbol>} symbol
   * @memberof ProtoOASymbolsListRes
   * @instance
   */
  ProtoOASymbolsListRes.prototype.symbol = $util.emptyArray;

  /**
   * Creates a new ProtoOASymbolsListRes instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {IProtoOASymbolsListRes=} [properties] Properties to set
   * @returns {ProtoOASymbolsListRes} ProtoOASymbolsListRes instance
   */
  ProtoOASymbolsListRes.create = function create(properties) {
    return new ProtoOASymbolsListRes(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolsListRes message. Does not implicitly {@link ProtoOASymbolsListRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {IProtoOASymbolsListRes} message ProtoOASymbolsListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsListRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbol != null && message.symbol.length)
      for (var i = 0; i < message.symbol.length; ++i)
        $root.ProtoOALightSymbol.encode(
          message.symbol[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolsListRes message, length delimited. Does not implicitly {@link ProtoOASymbolsListRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {IProtoOASymbolsListRes} message ProtoOASymbolsListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsListRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolsListRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolsListRes} ProtoOASymbolsListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsListRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolsListRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbol && message.symbol.length)) message.symbol = [];
          message.symbol.push(
            $root.ProtoOALightSymbol.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolsListRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolsListRes} ProtoOASymbolsListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsListRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolsListRes message.
   * @function verify
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolsListRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbol != null && message.hasOwnProperty("symbol")) {
      if (!Array.isArray(message.symbol)) return "symbol: array expected";
      for (var i = 0; i < message.symbol.length; ++i) {
        var error = $root.ProtoOALightSymbol.verify(message.symbol[i]);
        if (error) return "symbol." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOASymbolsListRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolsListRes} ProtoOASymbolsListRes
   */
  ProtoOASymbolsListRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolsListRes) return object;
    var message = new $root.ProtoOASymbolsListRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbol) {
      if (!Array.isArray(object.symbol))
        throw TypeError(".ProtoOASymbolsListRes.symbol: array expected");
      message.symbol = [];
      for (var i = 0; i < object.symbol.length; ++i) {
        if (typeof object.symbol[i] !== "object")
          throw TypeError(".ProtoOASymbolsListRes.symbol: object expected");
        message.symbol[i] = $root.ProtoOALightSymbol.fromObject(
          object.symbol[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolsListRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolsListRes
   * @static
   * @param {ProtoOASymbolsListRes} message ProtoOASymbolsListRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolsListRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbol = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOLS_LIST_RES" : 2115;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbol && message.symbol.length) {
      object.symbol = [];
      for (var j = 0; j < message.symbol.length; ++j)
        object.symbol[j] = $root.ProtoOALightSymbol.toObject(
          message.symbol[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOASymbolsListRes to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolsListRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolsListRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolsListRes;
})();

$root.ProtoOASymbolByIdReq = (function() {
  /**
   * Properties of a ProtoOASymbolByIdReq.
   * @exports IProtoOASymbolByIdReq
   * @interface IProtoOASymbolByIdReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolByIdReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolByIdReq ctidTraderAccountId
   * @property {Array.<number|Long>|null} [symbolId] ProtoOASymbolByIdReq symbolId
   */

  /**
   * Constructs a new ProtoOASymbolByIdReq.
   * @exports ProtoOASymbolByIdReq
   * @classdesc Request for getting a full symbol entity.
   * @implements IProtoOASymbolByIdReq
   * @constructor
   * @param {IProtoOASymbolByIdReq=} [properties] Properties to set
   */
  function ProtoOASymbolByIdReq(properties) {
    this.symbolId = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolByIdReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolByIdReq
   * @instance
   */
  ProtoOASymbolByIdReq.prototype.payloadType = 2116;

  /**
   * ProtoOASymbolByIdReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolByIdReq
   * @instance
   */
  ProtoOASymbolByIdReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolByIdReq symbolId.
   * @member {Array.<number|Long>} symbolId
   * @memberof ProtoOASymbolByIdReq
   * @instance
   */
  ProtoOASymbolByIdReq.prototype.symbolId = $util.emptyArray;

  /**
   * Creates a new ProtoOASymbolByIdReq instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {IProtoOASymbolByIdReq=} [properties] Properties to set
   * @returns {ProtoOASymbolByIdReq} ProtoOASymbolByIdReq instance
   */
  ProtoOASymbolByIdReq.create = function create(properties) {
    return new ProtoOASymbolByIdReq(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolByIdReq message. Does not implicitly {@link ProtoOASymbolByIdReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {IProtoOASymbolByIdReq} message ProtoOASymbolByIdReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolByIdReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbolId != null && message.symbolId.length)
      for (var i = 0; i < message.symbolId.length; ++i)
        writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId[i]);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolByIdReq message, length delimited. Does not implicitly {@link ProtoOASymbolByIdReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {IProtoOASymbolByIdReq} message ProtoOASymbolByIdReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolByIdReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolByIdReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolByIdReq} ProtoOASymbolByIdReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolByIdReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolByIdReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbolId && message.symbolId.length))
            message.symbolId = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) message.symbolId.push(reader.int64());
          } else message.symbolId.push(reader.int64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolByIdReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolByIdReq} ProtoOASymbolByIdReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolByIdReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolByIdReq message.
   * @function verify
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolByIdReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbolId != null && message.hasOwnProperty("symbolId")) {
      if (!Array.isArray(message.symbolId)) return "symbolId: array expected";
      for (var i = 0; i < message.symbolId.length; ++i)
        if (
          !$util.isInteger(message.symbolId[i]) &&
          !(
            message.symbolId[i] &&
            $util.isInteger(message.symbolId[i].low) &&
            $util.isInteger(message.symbolId[i].high)
          )
        )
          return "symbolId: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOASymbolByIdReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolByIdReq} ProtoOASymbolByIdReq
   */
  ProtoOASymbolByIdReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolByIdReq) return object;
    var message = new $root.ProtoOASymbolByIdReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId) {
      if (!Array.isArray(object.symbolId))
        throw TypeError(".ProtoOASymbolByIdReq.symbolId: array expected");
      message.symbolId = [];
      for (var i = 0; i < object.symbolId.length; ++i)
        if ($util.Long)
          (message.symbolId[i] = $util.Long.fromValue(
            object.symbolId[i]
          )).unsigned = false;
        else if (typeof object.symbolId[i] === "string")
          message.symbolId[i] = parseInt(object.symbolId[i], 10);
        else if (typeof object.symbolId[i] === "number")
          message.symbolId[i] = object.symbolId[i];
        else if (typeof object.symbolId[i] === "object")
          message.symbolId[i] = new $util.LongBits(
            object.symbolId[i].low >>> 0,
            object.symbolId[i].high >>> 0
          ).toNumber();
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolByIdReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolByIdReq
   * @static
   * @param {ProtoOASymbolByIdReq} message ProtoOASymbolByIdReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolByIdReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbolId = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOL_BY_ID_REQ" : 2116;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId && message.symbolId.length) {
      object.symbolId = [];
      for (var j = 0; j < message.symbolId.length; ++j)
        if (typeof message.symbolId[j] === "number")
          object.symbolId[j] =
            options.longs === String
              ? String(message.symbolId[j])
              : message.symbolId[j];
        else
          object.symbolId[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.symbolId[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.symbolId[j].low >>> 0,
                  message.symbolId[j].high >>> 0
                ).toNumber()
              : message.symbolId[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOASymbolByIdReq to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolByIdReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolByIdReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolByIdReq;
})();

$root.ProtoOASymbolByIdRes = (function() {
  /**
   * Properties of a ProtoOASymbolByIdRes.
   * @exports IProtoOASymbolByIdRes
   * @interface IProtoOASymbolByIdRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolByIdRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolByIdRes ctidTraderAccountId
   * @property {Array.<IProtoOASymbol>|null} [symbol] ProtoOASymbolByIdRes symbol
   */

  /**
   * Constructs a new ProtoOASymbolByIdRes.
   * @exports ProtoOASymbolByIdRes
   * @classdesc Response to the ProtoOASymbolByIdReq request.
   * @implements IProtoOASymbolByIdRes
   * @constructor
   * @param {IProtoOASymbolByIdRes=} [properties] Properties to set
   */
  function ProtoOASymbolByIdRes(properties) {
    this.symbol = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolByIdRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolByIdRes
   * @instance
   */
  ProtoOASymbolByIdRes.prototype.payloadType = 2117;

  /**
   * ProtoOASymbolByIdRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolByIdRes
   * @instance
   */
  ProtoOASymbolByIdRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolByIdRes symbol.
   * @member {Array.<IProtoOASymbol>} symbol
   * @memberof ProtoOASymbolByIdRes
   * @instance
   */
  ProtoOASymbolByIdRes.prototype.symbol = $util.emptyArray;

  /**
   * Creates a new ProtoOASymbolByIdRes instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {IProtoOASymbolByIdRes=} [properties] Properties to set
   * @returns {ProtoOASymbolByIdRes} ProtoOASymbolByIdRes instance
   */
  ProtoOASymbolByIdRes.create = function create(properties) {
    return new ProtoOASymbolByIdRes(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolByIdRes message. Does not implicitly {@link ProtoOASymbolByIdRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {IProtoOASymbolByIdRes} message ProtoOASymbolByIdRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolByIdRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbol != null && message.symbol.length)
      for (var i = 0; i < message.symbol.length; ++i)
        $root.ProtoOASymbol.encode(
          message.symbol[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolByIdRes message, length delimited. Does not implicitly {@link ProtoOASymbolByIdRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {IProtoOASymbolByIdRes} message ProtoOASymbolByIdRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolByIdRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolByIdRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolByIdRes} ProtoOASymbolByIdRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolByIdRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolByIdRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbol && message.symbol.length)) message.symbol = [];
          message.symbol.push(
            $root.ProtoOASymbol.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolByIdRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolByIdRes} ProtoOASymbolByIdRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolByIdRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolByIdRes message.
   * @function verify
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolByIdRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbol != null && message.hasOwnProperty("symbol")) {
      if (!Array.isArray(message.symbol)) return "symbol: array expected";
      for (var i = 0; i < message.symbol.length; ++i) {
        var error = $root.ProtoOASymbol.verify(message.symbol[i]);
        if (error) return "symbol." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOASymbolByIdRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolByIdRes} ProtoOASymbolByIdRes
   */
  ProtoOASymbolByIdRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolByIdRes) return object;
    var message = new $root.ProtoOASymbolByIdRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbol) {
      if (!Array.isArray(object.symbol))
        throw TypeError(".ProtoOASymbolByIdRes.symbol: array expected");
      message.symbol = [];
      for (var i = 0; i < object.symbol.length; ++i) {
        if (typeof object.symbol[i] !== "object")
          throw TypeError(".ProtoOASymbolByIdRes.symbol: object expected");
        message.symbol[i] = $root.ProtoOASymbol.fromObject(object.symbol[i]);
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolByIdRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolByIdRes
   * @static
   * @param {ProtoOASymbolByIdRes} message ProtoOASymbolByIdRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolByIdRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbol = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOL_BY_ID_RES" : 2117;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbol && message.symbol.length) {
      object.symbol = [];
      for (var j = 0; j < message.symbol.length; ++j)
        object.symbol[j] = $root.ProtoOASymbol.toObject(
          message.symbol[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOASymbolByIdRes to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolByIdRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolByIdRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolByIdRes;
})();

$root.ProtoOASymbolsForConversionReq = (function() {
  /**
   * Properties of a ProtoOASymbolsForConversionReq.
   * @exports IProtoOASymbolsForConversionReq
   * @interface IProtoOASymbolsForConversionReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolsForConversionReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolsForConversionReq ctidTraderAccountId
   * @property {number|Long} firstAssetId ProtoOASymbolsForConversionReq firstAssetId
   * @property {number|Long} lastAssetId ProtoOASymbolsForConversionReq lastAssetId
   */

  /**
   * Constructs a new ProtoOASymbolsForConversionReq.
   * @exports ProtoOASymbolsForConversionReq
   * @classdesc Request for getting a conversion chain between two assets that consists of several symbols. Use when no direct quote is available
   * @implements IProtoOASymbolsForConversionReq
   * @constructor
   * @param {IProtoOASymbolsForConversionReq=} [properties] Properties to set
   */
  function ProtoOASymbolsForConversionReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolsForConversionReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolsForConversionReq
   * @instance
   */
  ProtoOASymbolsForConversionReq.prototype.payloadType = 2118;

  /**
   * ProtoOASymbolsForConversionReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolsForConversionReq
   * @instance
   */
  ProtoOASymbolsForConversionReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolsForConversionReq firstAssetId.
   * @member {number|Long} firstAssetId
   * @memberof ProtoOASymbolsForConversionReq
   * @instance
   */
  ProtoOASymbolsForConversionReq.prototype.firstAssetId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolsForConversionReq lastAssetId.
   * @member {number|Long} lastAssetId
   * @memberof ProtoOASymbolsForConversionReq
   * @instance
   */
  ProtoOASymbolsForConversionReq.prototype.lastAssetId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOASymbolsForConversionReq instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {IProtoOASymbolsForConversionReq=} [properties] Properties to set
   * @returns {ProtoOASymbolsForConversionReq} ProtoOASymbolsForConversionReq instance
   */
  ProtoOASymbolsForConversionReq.create = function create(properties) {
    return new ProtoOASymbolsForConversionReq(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolsForConversionReq message. Does not implicitly {@link ProtoOASymbolsForConversionReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {IProtoOASymbolsForConversionReq} message ProtoOASymbolsForConversionReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsForConversionReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.firstAssetId);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.lastAssetId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolsForConversionReq message, length delimited. Does not implicitly {@link ProtoOASymbolsForConversionReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {IProtoOASymbolsForConversionReq} message ProtoOASymbolsForConversionReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsForConversionReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolsForConversionReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolsForConversionReq} ProtoOASymbolsForConversionReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsForConversionReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolsForConversionReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.firstAssetId = reader.int64();
          break;
        case 4:
          message.lastAssetId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("firstAssetId"))
      throw $util.ProtocolError("missing required 'firstAssetId'", {
        instance: message
      });
    if (!message.hasOwnProperty("lastAssetId"))
      throw $util.ProtocolError("missing required 'lastAssetId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolsForConversionReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolsForConversionReq} ProtoOASymbolsForConversionReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsForConversionReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolsForConversionReq message.
   * @function verify
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolsForConversionReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.firstAssetId) &&
      !(
        message.firstAssetId &&
        $util.isInteger(message.firstAssetId.low) &&
        $util.isInteger(message.firstAssetId.high)
      )
    )
      return "firstAssetId: integer|Long expected";
    if (
      !$util.isInteger(message.lastAssetId) &&
      !(
        message.lastAssetId &&
        $util.isInteger(message.lastAssetId.low) &&
        $util.isInteger(message.lastAssetId.high)
      )
    )
      return "lastAssetId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOASymbolsForConversionReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolsForConversionReq} ProtoOASymbolsForConversionReq
   */
  ProtoOASymbolsForConversionReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolsForConversionReq) return object;
    var message = new $root.ProtoOASymbolsForConversionReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.firstAssetId != null)
      if ($util.Long)
        (message.firstAssetId = $util.Long.fromValue(
          object.firstAssetId
        )).unsigned = false;
      else if (typeof object.firstAssetId === "string")
        message.firstAssetId = parseInt(object.firstAssetId, 10);
      else if (typeof object.firstAssetId === "number")
        message.firstAssetId = object.firstAssetId;
      else if (typeof object.firstAssetId === "object")
        message.firstAssetId = new $util.LongBits(
          object.firstAssetId.low >>> 0,
          object.firstAssetId.high >>> 0
        ).toNumber();
    if (object.lastAssetId != null)
      if ($util.Long)
        (message.lastAssetId = $util.Long.fromValue(
          object.lastAssetId
        )).unsigned = false;
      else if (typeof object.lastAssetId === "string")
        message.lastAssetId = parseInt(object.lastAssetId, 10);
      else if (typeof object.lastAssetId === "number")
        message.lastAssetId = object.lastAssetId;
      else if (typeof object.lastAssetId === "object")
        message.lastAssetId = new $util.LongBits(
          object.lastAssetId.low >>> 0,
          object.lastAssetId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolsForConversionReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolsForConversionReq
   * @static
   * @param {ProtoOASymbolsForConversionReq} message ProtoOASymbolsForConversionReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolsForConversionReq.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ" : 2118;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.firstAssetId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.firstAssetId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.lastAssetId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.lastAssetId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.firstAssetId != null && message.hasOwnProperty("firstAssetId"))
      if (typeof message.firstAssetId === "number")
        object.firstAssetId =
          options.longs === String
            ? String(message.firstAssetId)
            : message.firstAssetId;
      else
        object.firstAssetId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.firstAssetId)
            : options.longs === Number
            ? new $util.LongBits(
                message.firstAssetId.low >>> 0,
                message.firstAssetId.high >>> 0
              ).toNumber()
            : message.firstAssetId;
    if (message.lastAssetId != null && message.hasOwnProperty("lastAssetId"))
      if (typeof message.lastAssetId === "number")
        object.lastAssetId =
          options.longs === String
            ? String(message.lastAssetId)
            : message.lastAssetId;
      else
        object.lastAssetId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.lastAssetId)
            : options.longs === Number
            ? new $util.LongBits(
                message.lastAssetId.low >>> 0,
                message.lastAssetId.high >>> 0
              ).toNumber()
            : message.lastAssetId;
    return object;
  };

  /**
   * Converts this ProtoOASymbolsForConversionReq to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolsForConversionReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolsForConversionReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolsForConversionReq;
})();

$root.ProtoOASymbolsForConversionRes = (function() {
  /**
   * Properties of a ProtoOASymbolsForConversionRes.
   * @exports IProtoOASymbolsForConversionRes
   * @interface IProtoOASymbolsForConversionRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolsForConversionRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolsForConversionRes ctidTraderAccountId
   * @property {Array.<IProtoOALightSymbol>|null} [symbol] ProtoOASymbolsForConversionRes symbol
   */

  /**
   * Constructs a new ProtoOASymbolsForConversionRes.
   * @exports ProtoOASymbolsForConversionRes
   * @classdesc Response to the ProtoOASymbolsForConversionReq request.
   * @implements IProtoOASymbolsForConversionRes
   * @constructor
   * @param {IProtoOASymbolsForConversionRes=} [properties] Properties to set
   */
  function ProtoOASymbolsForConversionRes(properties) {
    this.symbol = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolsForConversionRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolsForConversionRes
   * @instance
   */
  ProtoOASymbolsForConversionRes.prototype.payloadType = 2119;

  /**
   * ProtoOASymbolsForConversionRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolsForConversionRes
   * @instance
   */
  ProtoOASymbolsForConversionRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolsForConversionRes symbol.
   * @member {Array.<IProtoOALightSymbol>} symbol
   * @memberof ProtoOASymbolsForConversionRes
   * @instance
   */
  ProtoOASymbolsForConversionRes.prototype.symbol = $util.emptyArray;

  /**
   * Creates a new ProtoOASymbolsForConversionRes instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {IProtoOASymbolsForConversionRes=} [properties] Properties to set
   * @returns {ProtoOASymbolsForConversionRes} ProtoOASymbolsForConversionRes instance
   */
  ProtoOASymbolsForConversionRes.create = function create(properties) {
    return new ProtoOASymbolsForConversionRes(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolsForConversionRes message. Does not implicitly {@link ProtoOASymbolsForConversionRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {IProtoOASymbolsForConversionRes} message ProtoOASymbolsForConversionRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsForConversionRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbol != null && message.symbol.length)
      for (var i = 0; i < message.symbol.length; ++i)
        $root.ProtoOALightSymbol.encode(
          message.symbol[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolsForConversionRes message, length delimited. Does not implicitly {@link ProtoOASymbolsForConversionRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {IProtoOASymbolsForConversionRes} message ProtoOASymbolsForConversionRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolsForConversionRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolsForConversionRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolsForConversionRes} ProtoOASymbolsForConversionRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsForConversionRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolsForConversionRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbol && message.symbol.length)) message.symbol = [];
          message.symbol.push(
            $root.ProtoOALightSymbol.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolsForConversionRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolsForConversionRes} ProtoOASymbolsForConversionRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolsForConversionRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolsForConversionRes message.
   * @function verify
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolsForConversionRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbol != null && message.hasOwnProperty("symbol")) {
      if (!Array.isArray(message.symbol)) return "symbol: array expected";
      for (var i = 0; i < message.symbol.length; ++i) {
        var error = $root.ProtoOALightSymbol.verify(message.symbol[i]);
        if (error) return "symbol." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOASymbolsForConversionRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolsForConversionRes} ProtoOASymbolsForConversionRes
   */
  ProtoOASymbolsForConversionRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolsForConversionRes) return object;
    var message = new $root.ProtoOASymbolsForConversionRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbol) {
      if (!Array.isArray(object.symbol))
        throw TypeError(
          ".ProtoOASymbolsForConversionRes.symbol: array expected"
        );
      message.symbol = [];
      for (var i = 0; i < object.symbol.length; ++i) {
        if (typeof object.symbol[i] !== "object")
          throw TypeError(
            ".ProtoOASymbolsForConversionRes.symbol: object expected"
          );
        message.symbol[i] = $root.ProtoOALightSymbol.fromObject(
          object.symbol[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolsForConversionRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolsForConversionRes
   * @static
   * @param {ProtoOASymbolsForConversionRes} message ProtoOASymbolsForConversionRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolsForConversionRes.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbol = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES" : 2119;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbol && message.symbol.length) {
      object.symbol = [];
      for (var j = 0; j < message.symbol.length; ++j)
        object.symbol[j] = $root.ProtoOALightSymbol.toObject(
          message.symbol[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOASymbolsForConversionRes to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolsForConversionRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolsForConversionRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolsForConversionRes;
})();

$root.ProtoOASymbolChangedEvent = (function() {
  /**
   * Properties of a ProtoOASymbolChangedEvent.
   * @exports IProtoOASymbolChangedEvent
   * @interface IProtoOASymbolChangedEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolChangedEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolChangedEvent ctidTraderAccountId
   * @property {Array.<number|Long>|null} [symbolId] ProtoOASymbolChangedEvent symbolId
   */

  /**
   * Constructs a new ProtoOASymbolChangedEvent.
   * @exports ProtoOASymbolChangedEvent
   * @classdesc Event that is sent when the symbol is changed on the Server side.
   * @implements IProtoOASymbolChangedEvent
   * @constructor
   * @param {IProtoOASymbolChangedEvent=} [properties] Properties to set
   */
  function ProtoOASymbolChangedEvent(properties) {
    this.symbolId = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolChangedEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolChangedEvent
   * @instance
   */
  ProtoOASymbolChangedEvent.prototype.payloadType = 2120;

  /**
   * ProtoOASymbolChangedEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolChangedEvent
   * @instance
   */
  ProtoOASymbolChangedEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolChangedEvent symbolId.
   * @member {Array.<number|Long>} symbolId
   * @memberof ProtoOASymbolChangedEvent
   * @instance
   */
  ProtoOASymbolChangedEvent.prototype.symbolId = $util.emptyArray;

  /**
   * Creates a new ProtoOASymbolChangedEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {IProtoOASymbolChangedEvent=} [properties] Properties to set
   * @returns {ProtoOASymbolChangedEvent} ProtoOASymbolChangedEvent instance
   */
  ProtoOASymbolChangedEvent.create = function create(properties) {
    return new ProtoOASymbolChangedEvent(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolChangedEvent message. Does not implicitly {@link ProtoOASymbolChangedEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {IProtoOASymbolChangedEvent} message ProtoOASymbolChangedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolChangedEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbolId != null && message.symbolId.length)
      for (var i = 0; i < message.symbolId.length; ++i)
        writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId[i]);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolChangedEvent message, length delimited. Does not implicitly {@link ProtoOASymbolChangedEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {IProtoOASymbolChangedEvent} message ProtoOASymbolChangedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolChangedEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolChangedEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolChangedEvent} ProtoOASymbolChangedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolChangedEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolChangedEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbolId && message.symbolId.length))
            message.symbolId = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) message.symbolId.push(reader.int64());
          } else message.symbolId.push(reader.int64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolChangedEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolChangedEvent} ProtoOASymbolChangedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolChangedEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolChangedEvent message.
   * @function verify
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolChangedEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbolId != null && message.hasOwnProperty("symbolId")) {
      if (!Array.isArray(message.symbolId)) return "symbolId: array expected";
      for (var i = 0; i < message.symbolId.length; ++i)
        if (
          !$util.isInteger(message.symbolId[i]) &&
          !(
            message.symbolId[i] &&
            $util.isInteger(message.symbolId[i].low) &&
            $util.isInteger(message.symbolId[i].high)
          )
        )
          return "symbolId: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOASymbolChangedEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolChangedEvent} ProtoOASymbolChangedEvent
   */
  ProtoOASymbolChangedEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolChangedEvent) return object;
    var message = new $root.ProtoOASymbolChangedEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId) {
      if (!Array.isArray(object.symbolId))
        throw TypeError(".ProtoOASymbolChangedEvent.symbolId: array expected");
      message.symbolId = [];
      for (var i = 0; i < object.symbolId.length; ++i)
        if ($util.Long)
          (message.symbolId[i] = $util.Long.fromValue(
            object.symbolId[i]
          )).unsigned = false;
        else if (typeof object.symbolId[i] === "string")
          message.symbolId[i] = parseInt(object.symbolId[i], 10);
        else if (typeof object.symbolId[i] === "number")
          message.symbolId[i] = object.symbolId[i];
        else if (typeof object.symbolId[i] === "object")
          message.symbolId[i] = new $util.LongBits(
            object.symbolId[i].low >>> 0,
            object.symbolId[i].high >>> 0
          ).toNumber();
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolChangedEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolChangedEvent
   * @static
   * @param {ProtoOASymbolChangedEvent} message ProtoOASymbolChangedEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolChangedEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbolId = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOL_CHANGED_EVENT" : 2120;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId && message.symbolId.length) {
      object.symbolId = [];
      for (var j = 0; j < message.symbolId.length; ++j)
        if (typeof message.symbolId[j] === "number")
          object.symbolId[j] =
            options.longs === String
              ? String(message.symbolId[j])
              : message.symbolId[j];
        else
          object.symbolId[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.symbolId[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.symbolId[j].low >>> 0,
                  message.symbolId[j].high >>> 0
                ).toNumber()
              : message.symbolId[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOASymbolChangedEvent to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolChangedEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolChangedEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolChangedEvent;
})();

$root.ProtoOAAssetClassListReq = (function() {
  /**
   * Properties of a ProtoOAAssetClassListReq.
   * @exports IProtoOAAssetClassListReq
   * @interface IProtoOAAssetClassListReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAssetClassListReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAssetClassListReq ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAAssetClassListReq.
   * @exports ProtoOAAssetClassListReq
   * @classdesc Request for a list of asset classes available for the trader's account.
   * @implements IProtoOAAssetClassListReq
   * @constructor
   * @param {IProtoOAAssetClassListReq=} [properties] Properties to set
   */
  function ProtoOAAssetClassListReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAssetClassListReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAssetClassListReq
   * @instance
   */
  ProtoOAAssetClassListReq.prototype.payloadType = 2153;

  /**
   * ProtoOAAssetClassListReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAssetClassListReq
   * @instance
   */
  ProtoOAAssetClassListReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAAssetClassListReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {IProtoOAAssetClassListReq=} [properties] Properties to set
   * @returns {ProtoOAAssetClassListReq} ProtoOAAssetClassListReq instance
   */
  ProtoOAAssetClassListReq.create = function create(properties) {
    return new ProtoOAAssetClassListReq(properties);
  };

  /**
   * Encodes the specified ProtoOAAssetClassListReq message. Does not implicitly {@link ProtoOAAssetClassListReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {IProtoOAAssetClassListReq} message ProtoOAAssetClassListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetClassListReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAssetClassListReq message, length delimited. Does not implicitly {@link ProtoOAAssetClassListReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {IProtoOAAssetClassListReq} message ProtoOAAssetClassListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetClassListReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAssetClassListReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAssetClassListReq} ProtoOAAssetClassListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetClassListReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAssetClassListReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAssetClassListReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAssetClassListReq} ProtoOAAssetClassListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetClassListReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAssetClassListReq message.
   * @function verify
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAssetClassListReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAAssetClassListReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAssetClassListReq} ProtoOAAssetClassListReq
   */
  ProtoOAAssetClassListReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAssetClassListReq) return object;
    var message = new $root.ProtoOAAssetClassListReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAssetClassListReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAssetClassListReq
   * @static
   * @param {ProtoOAAssetClassListReq} message ProtoOAAssetClassListReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAssetClassListReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ASSET_CLASS_LIST_REQ" : 2153;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAAssetClassListReq to JSON.
   * @function toJSON
   * @memberof ProtoOAAssetClassListReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAssetClassListReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAssetClassListReq;
})();

$root.ProtoOAAssetClassListRes = (function() {
  /**
   * Properties of a ProtoOAAssetClassListRes.
   * @exports IProtoOAAssetClassListRes
   * @interface IProtoOAAssetClassListRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAssetClassListRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAssetClassListRes ctidTraderAccountId
   * @property {Array.<IProtoOAAssetClass>|null} [assetClass] ProtoOAAssetClassListRes assetClass
   */

  /**
   * Constructs a new ProtoOAAssetClassListRes.
   * @exports ProtoOAAssetClassListRes
   * @classdesc Response to the ProtoOAAssetListReq request.
   * @implements IProtoOAAssetClassListRes
   * @constructor
   * @param {IProtoOAAssetClassListRes=} [properties] Properties to set
   */
  function ProtoOAAssetClassListRes(properties) {
    this.assetClass = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAssetClassListRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAssetClassListRes
   * @instance
   */
  ProtoOAAssetClassListRes.prototype.payloadType = 2154;

  /**
   * ProtoOAAssetClassListRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAssetClassListRes
   * @instance
   */
  ProtoOAAssetClassListRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAssetClassListRes assetClass.
   * @member {Array.<IProtoOAAssetClass>} assetClass
   * @memberof ProtoOAAssetClassListRes
   * @instance
   */
  ProtoOAAssetClassListRes.prototype.assetClass = $util.emptyArray;

  /**
   * Creates a new ProtoOAAssetClassListRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {IProtoOAAssetClassListRes=} [properties] Properties to set
   * @returns {ProtoOAAssetClassListRes} ProtoOAAssetClassListRes instance
   */
  ProtoOAAssetClassListRes.create = function create(properties) {
    return new ProtoOAAssetClassListRes(properties);
  };

  /**
   * Encodes the specified ProtoOAAssetClassListRes message. Does not implicitly {@link ProtoOAAssetClassListRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {IProtoOAAssetClassListRes} message ProtoOAAssetClassListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetClassListRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.assetClass != null && message.assetClass.length)
      for (var i = 0; i < message.assetClass.length; ++i)
        $root.ProtoOAAssetClass.encode(
          message.assetClass[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAssetClassListRes message, length delimited. Does not implicitly {@link ProtoOAAssetClassListRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {IProtoOAAssetClassListRes} message ProtoOAAssetClassListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetClassListRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAssetClassListRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAssetClassListRes} ProtoOAAssetClassListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetClassListRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAssetClassListRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.assetClass && message.assetClass.length))
            message.assetClass = [];
          message.assetClass.push(
            $root.ProtoOAAssetClass.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAssetClassListRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAssetClassListRes} ProtoOAAssetClassListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetClassListRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAssetClassListRes message.
   * @function verify
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAssetClassListRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.assetClass != null && message.hasOwnProperty("assetClass")) {
      if (!Array.isArray(message.assetClass))
        return "assetClass: array expected";
      for (var i = 0; i < message.assetClass.length; ++i) {
        var error = $root.ProtoOAAssetClass.verify(message.assetClass[i]);
        if (error) return "assetClass." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOAAssetClassListRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAssetClassListRes} ProtoOAAssetClassListRes
   */
  ProtoOAAssetClassListRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAssetClassListRes) return object;
    var message = new $root.ProtoOAAssetClassListRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.assetClass) {
      if (!Array.isArray(object.assetClass))
        throw TypeError(".ProtoOAAssetClassListRes.assetClass: array expected");
      message.assetClass = [];
      for (var i = 0; i < object.assetClass.length; ++i) {
        if (typeof object.assetClass[i] !== "object")
          throw TypeError(
            ".ProtoOAAssetClassListRes.assetClass: object expected"
          );
        message.assetClass[i] = $root.ProtoOAAssetClass.fromObject(
          object.assetClass[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAssetClassListRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAssetClassListRes
   * @static
   * @param {ProtoOAAssetClassListRes} message ProtoOAAssetClassListRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAssetClassListRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.assetClass = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ASSET_CLASS_LIST_RES" : 2154;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.assetClass && message.assetClass.length) {
      object.assetClass = [];
      for (var j = 0; j < message.assetClass.length; ++j)
        object.assetClass[j] = $root.ProtoOAAssetClass.toObject(
          message.assetClass[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOAAssetClassListRes to JSON.
   * @function toJSON
   * @memberof ProtoOAAssetClassListRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAssetClassListRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAssetClassListRes;
})();

$root.ProtoOATraderReq = (function() {
  /**
   * Properties of a ProtoOATraderReq.
   * @exports IProtoOATraderReq
   * @interface IProtoOATraderReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOATraderReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOATraderReq ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOATraderReq.
   * @exports ProtoOATraderReq
   * @classdesc Request for getting data of Trader's Account.
   * @implements IProtoOATraderReq
   * @constructor
   * @param {IProtoOATraderReq=} [properties] Properties to set
   */
  function ProtoOATraderReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATraderReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOATraderReq
   * @instance
   */
  ProtoOATraderReq.prototype.payloadType = 2121;

  /**
   * ProtoOATraderReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOATraderReq
   * @instance
   */
  ProtoOATraderReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOATraderReq instance using the specified properties.
   * @function create
   * @memberof ProtoOATraderReq
   * @static
   * @param {IProtoOATraderReq=} [properties] Properties to set
   * @returns {ProtoOATraderReq} ProtoOATraderReq instance
   */
  ProtoOATraderReq.create = function create(properties) {
    return new ProtoOATraderReq(properties);
  };

  /**
   * Encodes the specified ProtoOATraderReq message. Does not implicitly {@link ProtoOATraderReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATraderReq
   * @static
   * @param {IProtoOATraderReq} message ProtoOATraderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATraderReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOATraderReq message, length delimited. Does not implicitly {@link ProtoOATraderReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATraderReq
   * @static
   * @param {IProtoOATraderReq} message ProtoOATraderReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATraderReq.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATraderReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATraderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATraderReq} ProtoOATraderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATraderReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATraderReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATraderReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATraderReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATraderReq} ProtoOATraderReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATraderReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATraderReq message.
   * @function verify
   * @memberof ProtoOATraderReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATraderReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOATraderReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATraderReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATraderReq} ProtoOATraderReq
   */
  ProtoOATraderReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATraderReq) return object;
    var message = new $root.ProtoOATraderReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATraderReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATraderReq
   * @static
   * @param {ProtoOATraderReq} message ProtoOATraderReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATraderReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_TRADER_REQ" : 2121;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOATraderReq to JSON.
   * @function toJSON
   * @memberof ProtoOATraderReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATraderReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATraderReq;
})();

$root.ProtoOATraderRes = (function() {
  /**
   * Properties of a ProtoOATraderRes.
   * @exports IProtoOATraderRes
   * @interface IProtoOATraderRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOATraderRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOATraderRes ctidTraderAccountId
   * @property {IProtoOATrader} trader ProtoOATraderRes trader
   */

  /**
   * Constructs a new ProtoOATraderRes.
   * @exports ProtoOATraderRes
   * @classdesc Response to the ProtoOATraderReq request.
   * @implements IProtoOATraderRes
   * @constructor
   * @param {IProtoOATraderRes=} [properties] Properties to set
   */
  function ProtoOATraderRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATraderRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOATraderRes
   * @instance
   */
  ProtoOATraderRes.prototype.payloadType = 2122;

  /**
   * ProtoOATraderRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOATraderRes
   * @instance
   */
  ProtoOATraderRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATraderRes trader.
   * @member {IProtoOATrader} trader
   * @memberof ProtoOATraderRes
   * @instance
   */
  ProtoOATraderRes.prototype.trader = null;

  /**
   * Creates a new ProtoOATraderRes instance using the specified properties.
   * @function create
   * @memberof ProtoOATraderRes
   * @static
   * @param {IProtoOATraderRes=} [properties] Properties to set
   * @returns {ProtoOATraderRes} ProtoOATraderRes instance
   */
  ProtoOATraderRes.create = function create(properties) {
    return new ProtoOATraderRes(properties);
  };

  /**
   * Encodes the specified ProtoOATraderRes message. Does not implicitly {@link ProtoOATraderRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATraderRes
   * @static
   * @param {IProtoOATraderRes} message ProtoOATraderRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATraderRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    $root.ProtoOATrader.encode(
      message.trader,
      writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
    ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOATraderRes message, length delimited. Does not implicitly {@link ProtoOATraderRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATraderRes
   * @static
   * @param {IProtoOATraderRes} message ProtoOATraderRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATraderRes.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATraderRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATraderRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATraderRes} ProtoOATraderRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATraderRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATraderRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.trader = $root.ProtoOATrader.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("trader"))
      throw $util.ProtocolError("missing required 'trader'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATraderRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATraderRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATraderRes} ProtoOATraderRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATraderRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATraderRes message.
   * @function verify
   * @memberof ProtoOATraderRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATraderRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    {
      var error = $root.ProtoOATrader.verify(message.trader);
      if (error) return "trader." + error;
    }
    return null;
  };

  /**
   * Creates a ProtoOATraderRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATraderRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATraderRes} ProtoOATraderRes
   */
  ProtoOATraderRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATraderRes) return object;
    var message = new $root.ProtoOATraderRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.trader != null) {
      if (typeof object.trader !== "object")
        throw TypeError(".ProtoOATraderRes.trader: object expected");
      message.trader = $root.ProtoOATrader.fromObject(object.trader);
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATraderRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATraderRes
   * @static
   * @param {ProtoOATraderRes} message ProtoOATraderRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATraderRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_TRADER_RES" : 2122;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.trader = null;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.trader != null && message.hasOwnProperty("trader"))
      object.trader = $root.ProtoOATrader.toObject(message.trader, options);
    return object;
  };

  /**
   * Converts this ProtoOATraderRes to JSON.
   * @function toJSON
   * @memberof ProtoOATraderRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATraderRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATraderRes;
})();

$root.ProtoOATraderUpdatedEvent = (function() {
  /**
   * Properties of a ProtoOATraderUpdatedEvent.
   * @exports IProtoOATraderUpdatedEvent
   * @interface IProtoOATraderUpdatedEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOATraderUpdatedEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOATraderUpdatedEvent ctidTraderAccountId
   * @property {IProtoOATrader} trader ProtoOATraderUpdatedEvent trader
   */

  /**
   * Constructs a new ProtoOATraderUpdatedEvent.
   * @exports ProtoOATraderUpdatedEvent
   * @classdesc Event that is sent when a Trader is updated on Server side.
   * @implements IProtoOATraderUpdatedEvent
   * @constructor
   * @param {IProtoOATraderUpdatedEvent=} [properties] Properties to set
   */
  function ProtoOATraderUpdatedEvent(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATraderUpdatedEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOATraderUpdatedEvent
   * @instance
   */
  ProtoOATraderUpdatedEvent.prototype.payloadType = 2123;

  /**
   * ProtoOATraderUpdatedEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOATraderUpdatedEvent
   * @instance
   */
  ProtoOATraderUpdatedEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATraderUpdatedEvent trader.
   * @member {IProtoOATrader} trader
   * @memberof ProtoOATraderUpdatedEvent
   * @instance
   */
  ProtoOATraderUpdatedEvent.prototype.trader = null;

  /**
   * Creates a new ProtoOATraderUpdatedEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {IProtoOATraderUpdatedEvent=} [properties] Properties to set
   * @returns {ProtoOATraderUpdatedEvent} ProtoOATraderUpdatedEvent instance
   */
  ProtoOATraderUpdatedEvent.create = function create(properties) {
    return new ProtoOATraderUpdatedEvent(properties);
  };

  /**
   * Encodes the specified ProtoOATraderUpdatedEvent message. Does not implicitly {@link ProtoOATraderUpdatedEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {IProtoOATraderUpdatedEvent} message ProtoOATraderUpdatedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATraderUpdatedEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    $root.ProtoOATrader.encode(
      message.trader,
      writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
    ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOATraderUpdatedEvent message, length delimited. Does not implicitly {@link ProtoOATraderUpdatedEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {IProtoOATraderUpdatedEvent} message ProtoOATraderUpdatedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATraderUpdatedEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATraderUpdatedEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATraderUpdatedEvent} ProtoOATraderUpdatedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATraderUpdatedEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATraderUpdatedEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.trader = $root.ProtoOATrader.decode(reader, reader.uint32());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("trader"))
      throw $util.ProtocolError("missing required 'trader'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATraderUpdatedEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATraderUpdatedEvent} ProtoOATraderUpdatedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATraderUpdatedEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATraderUpdatedEvent message.
   * @function verify
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATraderUpdatedEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    {
      var error = $root.ProtoOATrader.verify(message.trader);
      if (error) return "trader." + error;
    }
    return null;
  };

  /**
   * Creates a ProtoOATraderUpdatedEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATraderUpdatedEvent} ProtoOATraderUpdatedEvent
   */
  ProtoOATraderUpdatedEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATraderUpdatedEvent) return object;
    var message = new $root.ProtoOATraderUpdatedEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.trader != null) {
      if (typeof object.trader !== "object")
        throw TypeError(".ProtoOATraderUpdatedEvent.trader: object expected");
      message.trader = $root.ProtoOATrader.fromObject(object.trader);
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATraderUpdatedEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATraderUpdatedEvent
   * @static
   * @param {ProtoOATraderUpdatedEvent} message ProtoOATraderUpdatedEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATraderUpdatedEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_TRADER_UPDATE_EVENT" : 2123;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.trader = null;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.trader != null && message.hasOwnProperty("trader"))
      object.trader = $root.ProtoOATrader.toObject(message.trader, options);
    return object;
  };

  /**
   * Converts this ProtoOATraderUpdatedEvent to JSON.
   * @function toJSON
   * @memberof ProtoOATraderUpdatedEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATraderUpdatedEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATraderUpdatedEvent;
})();

$root.ProtoOAReconcileReq = (function() {
  /**
   * Properties of a ProtoOAReconcileReq.
   * @exports IProtoOAReconcileReq
   * @interface IProtoOAReconcileReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAReconcileReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAReconcileReq ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAReconcileReq.
   * @exports ProtoOAReconcileReq
   * @classdesc Request for getting Trader's current open positions and pending orders data.
   * @implements IProtoOAReconcileReq
   * @constructor
   * @param {IProtoOAReconcileReq=} [properties] Properties to set
   */
  function ProtoOAReconcileReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAReconcileReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAReconcileReq
   * @instance
   */
  ProtoOAReconcileReq.prototype.payloadType = 2124;

  /**
   * ProtoOAReconcileReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAReconcileReq
   * @instance
   */
  ProtoOAReconcileReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAReconcileReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {IProtoOAReconcileReq=} [properties] Properties to set
   * @returns {ProtoOAReconcileReq} ProtoOAReconcileReq instance
   */
  ProtoOAReconcileReq.create = function create(properties) {
    return new ProtoOAReconcileReq(properties);
  };

  /**
   * Encodes the specified ProtoOAReconcileReq message. Does not implicitly {@link ProtoOAReconcileReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {IProtoOAReconcileReq} message ProtoOAReconcileReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAReconcileReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAReconcileReq message, length delimited. Does not implicitly {@link ProtoOAReconcileReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {IProtoOAReconcileReq} message ProtoOAReconcileReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAReconcileReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAReconcileReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAReconcileReq} ProtoOAReconcileReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAReconcileReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAReconcileReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAReconcileReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAReconcileReq} ProtoOAReconcileReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAReconcileReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAReconcileReq message.
   * @function verify
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAReconcileReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAReconcileReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAReconcileReq} ProtoOAReconcileReq
   */
  ProtoOAReconcileReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAReconcileReq) return object;
    var message = new $root.ProtoOAReconcileReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAReconcileReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAReconcileReq
   * @static
   * @param {ProtoOAReconcileReq} message ProtoOAReconcileReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAReconcileReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_RECONCILE_REQ" : 2124;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAReconcileReq to JSON.
   * @function toJSON
   * @memberof ProtoOAReconcileReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAReconcileReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAReconcileReq;
})();

$root.ProtoOAReconcileRes = (function() {
  /**
   * Properties of a ProtoOAReconcileRes.
   * @exports IProtoOAReconcileRes
   * @interface IProtoOAReconcileRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAReconcileRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAReconcileRes ctidTraderAccountId
   * @property {Array.<IProtoOAPosition>|null} [position] ProtoOAReconcileRes position
   * @property {Array.<IProtoOAOrder>|null} [order] ProtoOAReconcileRes order
   */

  /**
   * Constructs a new ProtoOAReconcileRes.
   * @exports ProtoOAReconcileRes
   * @classdesc The response to the ProtoOAReconcileReq request.
   * @implements IProtoOAReconcileRes
   * @constructor
   * @param {IProtoOAReconcileRes=} [properties] Properties to set
   */
  function ProtoOAReconcileRes(properties) {
    this.position = [];
    this.order = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAReconcileRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAReconcileRes
   * @instance
   */
  ProtoOAReconcileRes.prototype.payloadType = 2125;

  /**
   * ProtoOAReconcileRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAReconcileRes
   * @instance
   */
  ProtoOAReconcileRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAReconcileRes position.
   * @member {Array.<IProtoOAPosition>} position
   * @memberof ProtoOAReconcileRes
   * @instance
   */
  ProtoOAReconcileRes.prototype.position = $util.emptyArray;

  /**
   * ProtoOAReconcileRes order.
   * @member {Array.<IProtoOAOrder>} order
   * @memberof ProtoOAReconcileRes
   * @instance
   */
  ProtoOAReconcileRes.prototype.order = $util.emptyArray;

  /**
   * Creates a new ProtoOAReconcileRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {IProtoOAReconcileRes=} [properties] Properties to set
   * @returns {ProtoOAReconcileRes} ProtoOAReconcileRes instance
   */
  ProtoOAReconcileRes.create = function create(properties) {
    return new ProtoOAReconcileRes(properties);
  };

  /**
   * Encodes the specified ProtoOAReconcileRes message. Does not implicitly {@link ProtoOAReconcileRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {IProtoOAReconcileRes} message ProtoOAReconcileRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAReconcileRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.position != null && message.position.length)
      for (var i = 0; i < message.position.length; ++i)
        $root.ProtoOAPosition.encode(
          message.position[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    if (message.order != null && message.order.length)
      for (var i = 0; i < message.order.length; ++i)
        $root.ProtoOAOrder.encode(
          message.order[i],
          writer.uint32(/* id 4, wireType 2 =*/ 34).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOAReconcileRes message, length delimited. Does not implicitly {@link ProtoOAReconcileRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {IProtoOAReconcileRes} message ProtoOAReconcileRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAReconcileRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAReconcileRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAReconcileRes} ProtoOAReconcileRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAReconcileRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAReconcileRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.position && message.position.length))
            message.position = [];
          message.position.push(
            $root.ProtoOAPosition.decode(reader, reader.uint32())
          );
          break;
        case 4:
          if (!(message.order && message.order.length)) message.order = [];
          message.order.push(
            $root.ProtoOAOrder.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAReconcileRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAReconcileRes} ProtoOAReconcileRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAReconcileRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAReconcileRes message.
   * @function verify
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAReconcileRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.position != null && message.hasOwnProperty("position")) {
      if (!Array.isArray(message.position)) return "position: array expected";
      for (var i = 0; i < message.position.length; ++i) {
        var error = $root.ProtoOAPosition.verify(message.position[i]);
        if (error) return "position." + error;
      }
    }
    if (message.order != null && message.hasOwnProperty("order")) {
      if (!Array.isArray(message.order)) return "order: array expected";
      for (var i = 0; i < message.order.length; ++i) {
        var error = $root.ProtoOAOrder.verify(message.order[i]);
        if (error) return "order." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOAReconcileRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAReconcileRes} ProtoOAReconcileRes
   */
  ProtoOAReconcileRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAReconcileRes) return object;
    var message = new $root.ProtoOAReconcileRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.position) {
      if (!Array.isArray(object.position))
        throw TypeError(".ProtoOAReconcileRes.position: array expected");
      message.position = [];
      for (var i = 0; i < object.position.length; ++i) {
        if (typeof object.position[i] !== "object")
          throw TypeError(".ProtoOAReconcileRes.position: object expected");
        message.position[i] = $root.ProtoOAPosition.fromObject(
          object.position[i]
        );
      }
    }
    if (object.order) {
      if (!Array.isArray(object.order))
        throw TypeError(".ProtoOAReconcileRes.order: array expected");
      message.order = [];
      for (var i = 0; i < object.order.length; ++i) {
        if (typeof object.order[i] !== "object")
          throw TypeError(".ProtoOAReconcileRes.order: object expected");
        message.order[i] = $root.ProtoOAOrder.fromObject(object.order[i]);
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAReconcileRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAReconcileRes
   * @static
   * @param {ProtoOAReconcileRes} message ProtoOAReconcileRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAReconcileRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) {
      object.position = [];
      object.order = [];
    }
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_RECONCILE_RES" : 2125;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.position && message.position.length) {
      object.position = [];
      for (var j = 0; j < message.position.length; ++j)
        object.position[j] = $root.ProtoOAPosition.toObject(
          message.position[j],
          options
        );
    }
    if (message.order && message.order.length) {
      object.order = [];
      for (var j = 0; j < message.order.length; ++j)
        object.order[j] = $root.ProtoOAOrder.toObject(
          message.order[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOAReconcileRes to JSON.
   * @function toJSON
   * @memberof ProtoOAReconcileRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAReconcileRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAReconcileRes;
})();

$root.ProtoOAOrderErrorEvent = (function() {
  /**
   * Properties of a ProtoOAOrderErrorEvent.
   * @exports IProtoOAOrderErrorEvent
   * @interface IProtoOAOrderErrorEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAOrderErrorEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAOrderErrorEvent ctidTraderAccountId
   * @property {string} errorCode ProtoOAOrderErrorEvent errorCode
   * @property {number|Long|null} [orderId] ProtoOAOrderErrorEvent orderId
   * @property {number|Long|null} [positionId] ProtoOAOrderErrorEvent positionId
   * @property {string|null} [description] ProtoOAOrderErrorEvent description
   */

  /**
   * Constructs a new ProtoOAOrderErrorEvent.
   * @exports ProtoOAOrderErrorEvent
   * @classdesc Event that is sent when errors occur during the order requests.
   * @implements IProtoOAOrderErrorEvent
   * @constructor
   * @param {IProtoOAOrderErrorEvent=} [properties] Properties to set
   */
  function ProtoOAOrderErrorEvent(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAOrderErrorEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAOrderErrorEvent
   * @instance
   */
  ProtoOAOrderErrorEvent.prototype.payloadType = 2132;

  /**
   * ProtoOAOrderErrorEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAOrderErrorEvent
   * @instance
   */
  ProtoOAOrderErrorEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrderErrorEvent errorCode.
   * @member {string} errorCode
   * @memberof ProtoOAOrderErrorEvent
   * @instance
   */
  ProtoOAOrderErrorEvent.prototype.errorCode = "";

  /**
   * ProtoOAOrderErrorEvent orderId.
   * @member {number|Long} orderId
   * @memberof ProtoOAOrderErrorEvent
   * @instance
   */
  ProtoOAOrderErrorEvent.prototype.orderId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrderErrorEvent positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOAOrderErrorEvent
   * @instance
   */
  ProtoOAOrderErrorEvent.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrderErrorEvent description.
   * @member {string} description
   * @memberof ProtoOAOrderErrorEvent
   * @instance
   */
  ProtoOAOrderErrorEvent.prototype.description = "";

  /**
   * Creates a new ProtoOAOrderErrorEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {IProtoOAOrderErrorEvent=} [properties] Properties to set
   * @returns {ProtoOAOrderErrorEvent} ProtoOAOrderErrorEvent instance
   */
  ProtoOAOrderErrorEvent.create = function create(properties) {
    return new ProtoOAOrderErrorEvent(properties);
  };

  /**
   * Encodes the specified ProtoOAOrderErrorEvent message. Does not implicitly {@link ProtoOAOrderErrorEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {IProtoOAOrderErrorEvent} message ProtoOAOrderErrorEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAOrderErrorEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.errorCode);
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.orderId);
    writer
      .uint32(/* id 5, wireType 0 =*/ 40)
      .int64(message.ctidTraderAccountId);
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.positionId);
    if (message.description != null && message.hasOwnProperty("description"))
      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.description);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAOrderErrorEvent message, length delimited. Does not implicitly {@link ProtoOAOrderErrorEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {IProtoOAOrderErrorEvent} message ProtoOAOrderErrorEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAOrderErrorEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAOrderErrorEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAOrderErrorEvent} ProtoOAOrderErrorEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAOrderErrorEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAOrderErrorEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 5:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 2:
          message.errorCode = reader.string();
          break;
        case 3:
          message.orderId = reader.int64();
          break;
        case 6:
          message.positionId = reader.int64();
          break;
        case 7:
          message.description = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("errorCode"))
      throw $util.ProtocolError("missing required 'errorCode'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAOrderErrorEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAOrderErrorEvent} ProtoOAOrderErrorEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAOrderErrorEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAOrderErrorEvent message.
   * @function verify
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAOrderErrorEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (!$util.isString(message.errorCode)) return "errorCode: string expected";
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      if (
        !$util.isInteger(message.orderId) &&
        !(
          message.orderId &&
          $util.isInteger(message.orderId.low) &&
          $util.isInteger(message.orderId.high)
        )
      )
        return "orderId: integer|Long expected";
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (
        !$util.isInteger(message.positionId) &&
        !(
          message.positionId &&
          $util.isInteger(message.positionId.low) &&
          $util.isInteger(message.positionId.high)
        )
      )
        return "positionId: integer|Long expected";
    if (message.description != null && message.hasOwnProperty("description"))
      if (!$util.isString(message.description))
        return "description: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAOrderErrorEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAOrderErrorEvent} ProtoOAOrderErrorEvent
   */
  ProtoOAOrderErrorEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAOrderErrorEvent) return object;
    var message = new $root.ProtoOAOrderErrorEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.errorCode != null) message.errorCode = String(object.errorCode);
    if (object.orderId != null)
      if ($util.Long)
        (message.orderId = $util.Long.fromValue(
          object.orderId
        )).unsigned = false;
      else if (typeof object.orderId === "string")
        message.orderId = parseInt(object.orderId, 10);
      else if (typeof object.orderId === "number")
        message.orderId = object.orderId;
      else if (typeof object.orderId === "object")
        message.orderId = new $util.LongBits(
          object.orderId.low >>> 0,
          object.orderId.high >>> 0
        ).toNumber();
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.description != null)
      message.description = String(object.description);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAOrderErrorEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAOrderErrorEvent
   * @static
   * @param {ProtoOAOrderErrorEvent} message ProtoOAOrderErrorEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAOrderErrorEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ORDER_ERROR_EVENT" : 2132;
      object.errorCode = "";
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.orderId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.orderId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      object.description = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.errorCode != null && message.hasOwnProperty("errorCode"))
      object.errorCode = message.errorCode;
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      if (typeof message.orderId === "number")
        object.orderId =
          options.longs === String ? String(message.orderId) : message.orderId;
      else
        object.orderId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.orderId)
            : options.longs === Number
            ? new $util.LongBits(
                message.orderId.low >>> 0,
                message.orderId.high >>> 0
              ).toNumber()
            : message.orderId;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (message.description != null && message.hasOwnProperty("description"))
      object.description = message.description;
    return object;
  };

  /**
   * Converts this ProtoOAOrderErrorEvent to JSON.
   * @function toJSON
   * @memberof ProtoOAOrderErrorEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAOrderErrorEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAOrderErrorEvent;
})();

$root.ProtoOADealListReq = (function() {
  /**
   * Properties of a ProtoOADealListReq.
   * @exports IProtoOADealListReq
   * @interface IProtoOADealListReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOADealListReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOADealListReq ctidTraderAccountId
   * @property {number|Long} fromTimestamp ProtoOADealListReq fromTimestamp
   * @property {number|Long} toTimestamp ProtoOADealListReq toTimestamp
   * @property {number|null} [maxRows] ProtoOADealListReq maxRows
   */

  /**
   * Constructs a new ProtoOADealListReq.
   * @exports ProtoOADealListReq
   * @classdesc Request for getting Trader's deals historical data (execution details).
   * @implements IProtoOADealListReq
   * @constructor
   * @param {IProtoOADealListReq=} [properties] Properties to set
   */
  function ProtoOADealListReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOADealListReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOADealListReq
   * @instance
   */
  ProtoOADealListReq.prototype.payloadType = 2133;

  /**
   * ProtoOADealListReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOADealListReq
   * @instance
   */
  ProtoOADealListReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADealListReq fromTimestamp.
   * @member {number|Long} fromTimestamp
   * @memberof ProtoOADealListReq
   * @instance
   */
  ProtoOADealListReq.prototype.fromTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADealListReq toTimestamp.
   * @member {number|Long} toTimestamp
   * @memberof ProtoOADealListReq
   * @instance
   */
  ProtoOADealListReq.prototype.toTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADealListReq maxRows.
   * @member {number} maxRows
   * @memberof ProtoOADealListReq
   * @instance
   */
  ProtoOADealListReq.prototype.maxRows = 0;

  /**
   * Creates a new ProtoOADealListReq instance using the specified properties.
   * @function create
   * @memberof ProtoOADealListReq
   * @static
   * @param {IProtoOADealListReq=} [properties] Properties to set
   * @returns {ProtoOADealListReq} ProtoOADealListReq instance
   */
  ProtoOADealListReq.create = function create(properties) {
    return new ProtoOADealListReq(properties);
  };

  /**
   * Encodes the specified ProtoOADealListReq message. Does not implicitly {@link ProtoOADealListReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOADealListReq
   * @static
   * @param {IProtoOADealListReq} message ProtoOADealListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADealListReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.fromTimestamp);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.toTimestamp);
    if (message.maxRows != null && message.hasOwnProperty("maxRows"))
      writer.uint32(/* id 5, wireType 0 =*/ 40).int32(message.maxRows);
    return writer;
  };

  /**
   * Encodes the specified ProtoOADealListReq message, length delimited. Does not implicitly {@link ProtoOADealListReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOADealListReq
   * @static
   * @param {IProtoOADealListReq} message ProtoOADealListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADealListReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOADealListReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOADealListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOADealListReq} ProtoOADealListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADealListReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOADealListReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.fromTimestamp = reader.int64();
          break;
        case 4:
          message.toTimestamp = reader.int64();
          break;
        case 5:
          message.maxRows = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("fromTimestamp"))
      throw $util.ProtocolError("missing required 'fromTimestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("toTimestamp"))
      throw $util.ProtocolError("missing required 'toTimestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOADealListReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOADealListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOADealListReq} ProtoOADealListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADealListReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOADealListReq message.
   * @function verify
   * @memberof ProtoOADealListReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOADealListReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.fromTimestamp) &&
      !(
        message.fromTimestamp &&
        $util.isInteger(message.fromTimestamp.low) &&
        $util.isInteger(message.fromTimestamp.high)
      )
    )
      return "fromTimestamp: integer|Long expected";
    if (
      !$util.isInteger(message.toTimestamp) &&
      !(
        message.toTimestamp &&
        $util.isInteger(message.toTimestamp.low) &&
        $util.isInteger(message.toTimestamp.high)
      )
    )
      return "toTimestamp: integer|Long expected";
    if (message.maxRows != null && message.hasOwnProperty("maxRows"))
      if (!$util.isInteger(message.maxRows)) return "maxRows: integer expected";
    return null;
  };

  /**
   * Creates a ProtoOADealListReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOADealListReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOADealListReq} ProtoOADealListReq
   */
  ProtoOADealListReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOADealListReq) return object;
    var message = new $root.ProtoOADealListReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.fromTimestamp != null)
      if ($util.Long)
        (message.fromTimestamp = $util.Long.fromValue(
          object.fromTimestamp
        )).unsigned = false;
      else if (typeof object.fromTimestamp === "string")
        message.fromTimestamp = parseInt(object.fromTimestamp, 10);
      else if (typeof object.fromTimestamp === "number")
        message.fromTimestamp = object.fromTimestamp;
      else if (typeof object.fromTimestamp === "object")
        message.fromTimestamp = new $util.LongBits(
          object.fromTimestamp.low >>> 0,
          object.fromTimestamp.high >>> 0
        ).toNumber();
    if (object.toTimestamp != null)
      if ($util.Long)
        (message.toTimestamp = $util.Long.fromValue(
          object.toTimestamp
        )).unsigned = false;
      else if (typeof object.toTimestamp === "string")
        message.toTimestamp = parseInt(object.toTimestamp, 10);
      else if (typeof object.toTimestamp === "number")
        message.toTimestamp = object.toTimestamp;
      else if (typeof object.toTimestamp === "object")
        message.toTimestamp = new $util.LongBits(
          object.toTimestamp.low >>> 0,
          object.toTimestamp.high >>> 0
        ).toNumber();
    if (object.maxRows != null) message.maxRows = object.maxRows | 0;
    return message;
  };

  /**
   * Creates a plain object from a ProtoOADealListReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOADealListReq
   * @static
   * @param {ProtoOADealListReq} message ProtoOADealListReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOADealListReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_DEAL_LIST_REQ" : 2133;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.fromTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.fromTimestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.toTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.toTimestamp = options.longs === String ? "0" : 0;
      object.maxRows = 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (
      message.fromTimestamp != null &&
      message.hasOwnProperty("fromTimestamp")
    )
      if (typeof message.fromTimestamp === "number")
        object.fromTimestamp =
          options.longs === String
            ? String(message.fromTimestamp)
            : message.fromTimestamp;
      else
        object.fromTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.fromTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.fromTimestamp.low >>> 0,
                message.fromTimestamp.high >>> 0
              ).toNumber()
            : message.fromTimestamp;
    if (message.toTimestamp != null && message.hasOwnProperty("toTimestamp"))
      if (typeof message.toTimestamp === "number")
        object.toTimestamp =
          options.longs === String
            ? String(message.toTimestamp)
            : message.toTimestamp;
      else
        object.toTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.toTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.toTimestamp.low >>> 0,
                message.toTimestamp.high >>> 0
              ).toNumber()
            : message.toTimestamp;
    if (message.maxRows != null && message.hasOwnProperty("maxRows"))
      object.maxRows = message.maxRows;
    return object;
  };

  /**
   * Converts this ProtoOADealListReq to JSON.
   * @function toJSON
   * @memberof ProtoOADealListReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOADealListReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOADealListReq;
})();

$root.ProtoOADealListRes = (function() {
  /**
   * Properties of a ProtoOADealListRes.
   * @exports IProtoOADealListRes
   * @interface IProtoOADealListRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOADealListRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOADealListRes ctidTraderAccountId
   * @property {Array.<IProtoOADeal>|null} [deal] ProtoOADealListRes deal
   * @property {boolean} hasMore ProtoOADealListRes hasMore
   */

  /**
   * Constructs a new ProtoOADealListRes.
   * @exports ProtoOADealListRes
   * @classdesc The response to the ProtoOADealListRes request.
   * @implements IProtoOADealListRes
   * @constructor
   * @param {IProtoOADealListRes=} [properties] Properties to set
   */
  function ProtoOADealListRes(properties) {
    this.deal = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOADealListRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOADealListRes
   * @instance
   */
  ProtoOADealListRes.prototype.payloadType = 2134;

  /**
   * ProtoOADealListRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOADealListRes
   * @instance
   */
  ProtoOADealListRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADealListRes deal.
   * @member {Array.<IProtoOADeal>} deal
   * @memberof ProtoOADealListRes
   * @instance
   */
  ProtoOADealListRes.prototype.deal = $util.emptyArray;

  /**
   * ProtoOADealListRes hasMore.
   * @member {boolean} hasMore
   * @memberof ProtoOADealListRes
   * @instance
   */
  ProtoOADealListRes.prototype.hasMore = false;

  /**
   * Creates a new ProtoOADealListRes instance using the specified properties.
   * @function create
   * @memberof ProtoOADealListRes
   * @static
   * @param {IProtoOADealListRes=} [properties] Properties to set
   * @returns {ProtoOADealListRes} ProtoOADealListRes instance
   */
  ProtoOADealListRes.create = function create(properties) {
    return new ProtoOADealListRes(properties);
  };

  /**
   * Encodes the specified ProtoOADealListRes message. Does not implicitly {@link ProtoOADealListRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOADealListRes
   * @static
   * @param {IProtoOADealListRes} message ProtoOADealListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADealListRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.deal != null && message.deal.length)
      for (var i = 0; i < message.deal.length; ++i)
        $root.ProtoOADeal.encode(
          message.deal[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    writer.uint32(/* id 4, wireType 0 =*/ 32).bool(message.hasMore);
    return writer;
  };

  /**
   * Encodes the specified ProtoOADealListRes message, length delimited. Does not implicitly {@link ProtoOADealListRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOADealListRes
   * @static
   * @param {IProtoOADealListRes} message ProtoOADealListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADealListRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOADealListRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOADealListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOADealListRes} ProtoOADealListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADealListRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOADealListRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.deal && message.deal.length)) message.deal = [];
          message.deal.push($root.ProtoOADeal.decode(reader, reader.uint32()));
          break;
        case 4:
          message.hasMore = reader.bool();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("hasMore"))
      throw $util.ProtocolError("missing required 'hasMore'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOADealListRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOADealListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOADealListRes} ProtoOADealListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADealListRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOADealListRes message.
   * @function verify
   * @memberof ProtoOADealListRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOADealListRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.deal != null && message.hasOwnProperty("deal")) {
      if (!Array.isArray(message.deal)) return "deal: array expected";
      for (var i = 0; i < message.deal.length; ++i) {
        var error = $root.ProtoOADeal.verify(message.deal[i]);
        if (error) return "deal." + error;
      }
    }
    if (typeof message.hasMore !== "boolean")
      return "hasMore: boolean expected";
    return null;
  };

  /**
   * Creates a ProtoOADealListRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOADealListRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOADealListRes} ProtoOADealListRes
   */
  ProtoOADealListRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOADealListRes) return object;
    var message = new $root.ProtoOADealListRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.deal) {
      if (!Array.isArray(object.deal))
        throw TypeError(".ProtoOADealListRes.deal: array expected");
      message.deal = [];
      for (var i = 0; i < object.deal.length; ++i) {
        if (typeof object.deal[i] !== "object")
          throw TypeError(".ProtoOADealListRes.deal: object expected");
        message.deal[i] = $root.ProtoOADeal.fromObject(object.deal[i]);
      }
    }
    if (object.hasMore != null) message.hasMore = Boolean(object.hasMore);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOADealListRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOADealListRes
   * @static
   * @param {ProtoOADealListRes} message ProtoOADealListRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOADealListRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.deal = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_DEAL_LIST_RES" : 2134;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.hasMore = false;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.deal && message.deal.length) {
      object.deal = [];
      for (var j = 0; j < message.deal.length; ++j)
        object.deal[j] = $root.ProtoOADeal.toObject(message.deal[j], options);
    }
    if (message.hasMore != null && message.hasOwnProperty("hasMore"))
      object.hasMore = message.hasMore;
    return object;
  };

  /**
   * Converts this ProtoOADealListRes to JSON.
   * @function toJSON
   * @memberof ProtoOADealListRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOADealListRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOADealListRes;
})();

$root.ProtoOAExpectedMarginReq = (function() {
  /**
   * Properties of a ProtoOAExpectedMarginReq.
   * @exports IProtoOAExpectedMarginReq
   * @interface IProtoOAExpectedMarginReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAExpectedMarginReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAExpectedMarginReq ctidTraderAccountId
   * @property {number|Long} symbolId ProtoOAExpectedMarginReq symbolId
   * @property {Array.<number|Long>|null} [volume] ProtoOAExpectedMarginReq volume
   */

  /**
   * Constructs a new ProtoOAExpectedMarginReq.
   * @exports ProtoOAExpectedMarginReq
   * @classdesc Request for getting the margin estimate. Can be used before sending a new order request.
   * @implements IProtoOAExpectedMarginReq
   * @constructor
   * @param {IProtoOAExpectedMarginReq=} [properties] Properties to set
   */
  function ProtoOAExpectedMarginReq(properties) {
    this.volume = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAExpectedMarginReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAExpectedMarginReq
   * @instance
   */
  ProtoOAExpectedMarginReq.prototype.payloadType = 2139;

  /**
   * ProtoOAExpectedMarginReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAExpectedMarginReq
   * @instance
   */
  ProtoOAExpectedMarginReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAExpectedMarginReq symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOAExpectedMarginReq
   * @instance
   */
  ProtoOAExpectedMarginReq.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAExpectedMarginReq volume.
   * @member {Array.<number|Long>} volume
   * @memberof ProtoOAExpectedMarginReq
   * @instance
   */
  ProtoOAExpectedMarginReq.prototype.volume = $util.emptyArray;

  /**
   * Creates a new ProtoOAExpectedMarginReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {IProtoOAExpectedMarginReq=} [properties] Properties to set
   * @returns {ProtoOAExpectedMarginReq} ProtoOAExpectedMarginReq instance
   */
  ProtoOAExpectedMarginReq.create = function create(properties) {
    return new ProtoOAExpectedMarginReq(properties);
  };

  /**
   * Encodes the specified ProtoOAExpectedMarginReq message. Does not implicitly {@link ProtoOAExpectedMarginReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {IProtoOAExpectedMarginReq} message ProtoOAExpectedMarginReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExpectedMarginReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId);
    if (message.volume != null && message.volume.length)
      for (var i = 0; i < message.volume.length; ++i)
        writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.volume[i]);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAExpectedMarginReq message, length delimited. Does not implicitly {@link ProtoOAExpectedMarginReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {IProtoOAExpectedMarginReq} message ProtoOAExpectedMarginReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExpectedMarginReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAExpectedMarginReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAExpectedMarginReq} ProtoOAExpectedMarginReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExpectedMarginReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAExpectedMarginReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.symbolId = reader.int64();
          break;
        case 4:
          if (!(message.volume && message.volume.length)) message.volume = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) message.volume.push(reader.int64());
          } else message.volume.push(reader.int64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAExpectedMarginReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAExpectedMarginReq} ProtoOAExpectedMarginReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExpectedMarginReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAExpectedMarginReq message.
   * @function verify
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAExpectedMarginReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    if (message.volume != null && message.hasOwnProperty("volume")) {
      if (!Array.isArray(message.volume)) return "volume: array expected";
      for (var i = 0; i < message.volume.length; ++i)
        if (
          !$util.isInteger(message.volume[i]) &&
          !(
            message.volume[i] &&
            $util.isInteger(message.volume[i].low) &&
            $util.isInteger(message.volume[i].high)
          )
        )
          return "volume: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOAExpectedMarginReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAExpectedMarginReq} ProtoOAExpectedMarginReq
   */
  ProtoOAExpectedMarginReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAExpectedMarginReq) return object;
    var message = new $root.ProtoOAExpectedMarginReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    if (object.volume) {
      if (!Array.isArray(object.volume))
        throw TypeError(".ProtoOAExpectedMarginReq.volume: array expected");
      message.volume = [];
      for (var i = 0; i < object.volume.length; ++i)
        if ($util.Long)
          (message.volume[i] = $util.Long.fromValue(
            object.volume[i]
          )).unsigned = false;
        else if (typeof object.volume[i] === "string")
          message.volume[i] = parseInt(object.volume[i], 10);
        else if (typeof object.volume[i] === "number")
          message.volume[i] = object.volume[i];
        else if (typeof object.volume[i] === "object")
          message.volume[i] = new $util.LongBits(
            object.volume[i].low >>> 0,
            object.volume[i].high >>> 0
          ).toNumber();
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAExpectedMarginReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAExpectedMarginReq
   * @static
   * @param {ProtoOAExpectedMarginReq} message ProtoOAExpectedMarginReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAExpectedMarginReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.volume = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_EXPECTED_MARGIN_REQ" : 2139;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (message.volume && message.volume.length) {
      object.volume = [];
      for (var j = 0; j < message.volume.length; ++j)
        if (typeof message.volume[j] === "number")
          object.volume[j] =
            options.longs === String
              ? String(message.volume[j])
              : message.volume[j];
        else
          object.volume[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.volume[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.volume[j].low >>> 0,
                  message.volume[j].high >>> 0
                ).toNumber()
              : message.volume[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOAExpectedMarginReq to JSON.
   * @function toJSON
   * @memberof ProtoOAExpectedMarginReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAExpectedMarginReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAExpectedMarginReq;
})();

$root.ProtoOAExpectedMarginRes = (function() {
  /**
   * Properties of a ProtoOAExpectedMarginRes.
   * @exports IProtoOAExpectedMarginRes
   * @interface IProtoOAExpectedMarginRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAExpectedMarginRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAExpectedMarginRes ctidTraderAccountId
   * @property {Array.<IProtoOAExpectedMargin>|null} [margin] ProtoOAExpectedMarginRes margin
   */

  /**
   * Constructs a new ProtoOAExpectedMarginRes.
   * @exports ProtoOAExpectedMarginRes
   * @classdesc The response to the ProtoOAExpectedMarginReq request.
   * @implements IProtoOAExpectedMarginRes
   * @constructor
   * @param {IProtoOAExpectedMarginRes=} [properties] Properties to set
   */
  function ProtoOAExpectedMarginRes(properties) {
    this.margin = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAExpectedMarginRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAExpectedMarginRes
   * @instance
   */
  ProtoOAExpectedMarginRes.prototype.payloadType = 2140;

  /**
   * ProtoOAExpectedMarginRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAExpectedMarginRes
   * @instance
   */
  ProtoOAExpectedMarginRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAExpectedMarginRes margin.
   * @member {Array.<IProtoOAExpectedMargin>} margin
   * @memberof ProtoOAExpectedMarginRes
   * @instance
   */
  ProtoOAExpectedMarginRes.prototype.margin = $util.emptyArray;

  /**
   * Creates a new ProtoOAExpectedMarginRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {IProtoOAExpectedMarginRes=} [properties] Properties to set
   * @returns {ProtoOAExpectedMarginRes} ProtoOAExpectedMarginRes instance
   */
  ProtoOAExpectedMarginRes.create = function create(properties) {
    return new ProtoOAExpectedMarginRes(properties);
  };

  /**
   * Encodes the specified ProtoOAExpectedMarginRes message. Does not implicitly {@link ProtoOAExpectedMarginRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {IProtoOAExpectedMarginRes} message ProtoOAExpectedMarginRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExpectedMarginRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.margin != null && message.margin.length)
      for (var i = 0; i < message.margin.length; ++i)
        $root.ProtoOAExpectedMargin.encode(
          message.margin[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOAExpectedMarginRes message, length delimited. Does not implicitly {@link ProtoOAExpectedMarginRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {IProtoOAExpectedMarginRes} message ProtoOAExpectedMarginRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExpectedMarginRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAExpectedMarginRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAExpectedMarginRes} ProtoOAExpectedMarginRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExpectedMarginRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAExpectedMarginRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.margin && message.margin.length)) message.margin = [];
          message.margin.push(
            $root.ProtoOAExpectedMargin.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAExpectedMarginRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAExpectedMarginRes} ProtoOAExpectedMarginRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExpectedMarginRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAExpectedMarginRes message.
   * @function verify
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAExpectedMarginRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.margin != null && message.hasOwnProperty("margin")) {
      if (!Array.isArray(message.margin)) return "margin: array expected";
      for (var i = 0; i < message.margin.length; ++i) {
        var error = $root.ProtoOAExpectedMargin.verify(message.margin[i]);
        if (error) return "margin." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOAExpectedMarginRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAExpectedMarginRes} ProtoOAExpectedMarginRes
   */
  ProtoOAExpectedMarginRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAExpectedMarginRes) return object;
    var message = new $root.ProtoOAExpectedMarginRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.margin) {
      if (!Array.isArray(object.margin))
        throw TypeError(".ProtoOAExpectedMarginRes.margin: array expected");
      message.margin = [];
      for (var i = 0; i < object.margin.length; ++i) {
        if (typeof object.margin[i] !== "object")
          throw TypeError(".ProtoOAExpectedMarginRes.margin: object expected");
        message.margin[i] = $root.ProtoOAExpectedMargin.fromObject(
          object.margin[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAExpectedMarginRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAExpectedMarginRes
   * @static
   * @param {ProtoOAExpectedMarginRes} message ProtoOAExpectedMarginRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAExpectedMarginRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.margin = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_EXPECTED_MARGIN_RES" : 2140;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.margin && message.margin.length) {
      object.margin = [];
      for (var j = 0; j < message.margin.length; ++j)
        object.margin[j] = $root.ProtoOAExpectedMargin.toObject(
          message.margin[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOAExpectedMarginRes to JSON.
   * @function toJSON
   * @memberof ProtoOAExpectedMarginRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAExpectedMarginRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAExpectedMarginRes;
})();

$root.ProtoOAMarginChangedEvent = (function() {
  /**
   * Properties of a ProtoOAMarginChangedEvent.
   * @exports IProtoOAMarginChangedEvent
   * @interface IProtoOAMarginChangedEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAMarginChangedEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAMarginChangedEvent ctidTraderAccountId
   * @property {number|Long} positionId ProtoOAMarginChangedEvent positionId
   * @property {number|Long} usedMargin ProtoOAMarginChangedEvent usedMargin
   */

  /**
   * Constructs a new ProtoOAMarginChangedEvent.
   * @exports ProtoOAMarginChangedEvent
   * @classdesc Event that is sent when the margin allocated to a specific position is changed.
   * @implements IProtoOAMarginChangedEvent
   * @constructor
   * @param {IProtoOAMarginChangedEvent=} [properties] Properties to set
   */
  function ProtoOAMarginChangedEvent(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAMarginChangedEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAMarginChangedEvent
   * @instance
   */
  ProtoOAMarginChangedEvent.prototype.payloadType = 2141;

  /**
   * ProtoOAMarginChangedEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAMarginChangedEvent
   * @instance
   */
  ProtoOAMarginChangedEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAMarginChangedEvent positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOAMarginChangedEvent
   * @instance
   */
  ProtoOAMarginChangedEvent.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOAMarginChangedEvent usedMargin.
   * @member {number|Long} usedMargin
   * @memberof ProtoOAMarginChangedEvent
   * @instance
   */
  ProtoOAMarginChangedEvent.prototype.usedMargin = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * Creates a new ProtoOAMarginChangedEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {IProtoOAMarginChangedEvent=} [properties] Properties to set
   * @returns {ProtoOAMarginChangedEvent} ProtoOAMarginChangedEvent instance
   */
  ProtoOAMarginChangedEvent.create = function create(properties) {
    return new ProtoOAMarginChangedEvent(properties);
  };

  /**
   * Encodes the specified ProtoOAMarginChangedEvent message. Does not implicitly {@link ProtoOAMarginChangedEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {IProtoOAMarginChangedEvent} message ProtoOAMarginChangedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAMarginChangedEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).uint64(message.positionId);
    writer.uint32(/* id 4, wireType 0 =*/ 32).uint64(message.usedMargin);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAMarginChangedEvent message, length delimited. Does not implicitly {@link ProtoOAMarginChangedEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {IProtoOAMarginChangedEvent} message ProtoOAMarginChangedEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAMarginChangedEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAMarginChangedEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAMarginChangedEvent} ProtoOAMarginChangedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAMarginChangedEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAMarginChangedEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.positionId = reader.uint64();
          break;
        case 4:
          message.usedMargin = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("positionId"))
      throw $util.ProtocolError("missing required 'positionId'", {
        instance: message
      });
    if (!message.hasOwnProperty("usedMargin"))
      throw $util.ProtocolError("missing required 'usedMargin'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAMarginChangedEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAMarginChangedEvent} ProtoOAMarginChangedEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAMarginChangedEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAMarginChangedEvent message.
   * @function verify
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAMarginChangedEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.positionId) &&
      !(
        message.positionId &&
        $util.isInteger(message.positionId.low) &&
        $util.isInteger(message.positionId.high)
      )
    )
      return "positionId: integer|Long expected";
    if (
      !$util.isInteger(message.usedMargin) &&
      !(
        message.usedMargin &&
        $util.isInteger(message.usedMargin.low) &&
        $util.isInteger(message.usedMargin.high)
      )
    )
      return "usedMargin: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAMarginChangedEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAMarginChangedEvent} ProtoOAMarginChangedEvent
   */
  ProtoOAMarginChangedEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAMarginChangedEvent) return object;
    var message = new $root.ProtoOAMarginChangedEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = true;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber(true);
    if (object.usedMargin != null)
      if ($util.Long)
        (message.usedMargin = $util.Long.fromValue(
          object.usedMargin
        )).unsigned = true;
      else if (typeof object.usedMargin === "string")
        message.usedMargin = parseInt(object.usedMargin, 10);
      else if (typeof object.usedMargin === "number")
        message.usedMargin = object.usedMargin;
      else if (typeof object.usedMargin === "object")
        message.usedMargin = new $util.LongBits(
          object.usedMargin.low >>> 0,
          object.usedMargin.high >>> 0
        ).toNumber(true);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAMarginChangedEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAMarginChangedEvent
   * @static
   * @param {ProtoOAMarginChangedEvent} message ProtoOAMarginChangedEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAMarginChangedEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_MARGIN_CHANGED_EVENT" : 2141;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.usedMargin =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.usedMargin = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber(true)
            : message.positionId;
    if (message.usedMargin != null && message.hasOwnProperty("usedMargin"))
      if (typeof message.usedMargin === "number")
        object.usedMargin =
          options.longs === String
            ? String(message.usedMargin)
            : message.usedMargin;
      else
        object.usedMargin =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.usedMargin)
            : options.longs === Number
            ? new $util.LongBits(
                message.usedMargin.low >>> 0,
                message.usedMargin.high >>> 0
              ).toNumber(true)
            : message.usedMargin;
    return object;
  };

  /**
   * Converts this ProtoOAMarginChangedEvent to JSON.
   * @function toJSON
   * @memberof ProtoOAMarginChangedEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAMarginChangedEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAMarginChangedEvent;
})();

$root.ProtoOACashFlowHistoryListReq = (function() {
  /**
   * Properties of a ProtoOACashFlowHistoryListReq.
   * @exports IProtoOACashFlowHistoryListReq
   * @interface IProtoOACashFlowHistoryListReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOACashFlowHistoryListReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOACashFlowHistoryListReq ctidTraderAccountId
   * @property {number|Long} fromTimestamp ProtoOACashFlowHistoryListReq fromTimestamp
   * @property {number|Long} toTimestamp ProtoOACashFlowHistoryListReq toTimestamp
   */

  /**
   * Constructs a new ProtoOACashFlowHistoryListReq.
   * @exports ProtoOACashFlowHistoryListReq
   * @classdesc Request for getting Trader's historical data of deposits and withdrawals.
   * @implements IProtoOACashFlowHistoryListReq
   * @constructor
   * @param {IProtoOACashFlowHistoryListReq=} [properties] Properties to set
   */
  function ProtoOACashFlowHistoryListReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOACashFlowHistoryListReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOACashFlowHistoryListReq
   * @instance
   */
  ProtoOACashFlowHistoryListReq.prototype.payloadType = 2143;

  /**
   * ProtoOACashFlowHistoryListReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOACashFlowHistoryListReq
   * @instance
   */
  ProtoOACashFlowHistoryListReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOACashFlowHistoryListReq fromTimestamp.
   * @member {number|Long} fromTimestamp
   * @memberof ProtoOACashFlowHistoryListReq
   * @instance
   */
  ProtoOACashFlowHistoryListReq.prototype.fromTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOACashFlowHistoryListReq toTimestamp.
   * @member {number|Long} toTimestamp
   * @memberof ProtoOACashFlowHistoryListReq
   * @instance
   */
  ProtoOACashFlowHistoryListReq.prototype.toTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOACashFlowHistoryListReq instance using the specified properties.
   * @function create
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {IProtoOACashFlowHistoryListReq=} [properties] Properties to set
   * @returns {ProtoOACashFlowHistoryListReq} ProtoOACashFlowHistoryListReq instance
   */
  ProtoOACashFlowHistoryListReq.create = function create(properties) {
    return new ProtoOACashFlowHistoryListReq(properties);
  };

  /**
   * Encodes the specified ProtoOACashFlowHistoryListReq message. Does not implicitly {@link ProtoOACashFlowHistoryListReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {IProtoOACashFlowHistoryListReq} message ProtoOACashFlowHistoryListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACashFlowHistoryListReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.fromTimestamp);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.toTimestamp);
    return writer;
  };

  /**
   * Encodes the specified ProtoOACashFlowHistoryListReq message, length delimited. Does not implicitly {@link ProtoOACashFlowHistoryListReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {IProtoOACashFlowHistoryListReq} message ProtoOACashFlowHistoryListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACashFlowHistoryListReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOACashFlowHistoryListReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOACashFlowHistoryListReq} ProtoOACashFlowHistoryListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACashFlowHistoryListReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOACashFlowHistoryListReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.fromTimestamp = reader.int64();
          break;
        case 4:
          message.toTimestamp = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("fromTimestamp"))
      throw $util.ProtocolError("missing required 'fromTimestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("toTimestamp"))
      throw $util.ProtocolError("missing required 'toTimestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOACashFlowHistoryListReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOACashFlowHistoryListReq} ProtoOACashFlowHistoryListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACashFlowHistoryListReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOACashFlowHistoryListReq message.
   * @function verify
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOACashFlowHistoryListReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.fromTimestamp) &&
      !(
        message.fromTimestamp &&
        $util.isInteger(message.fromTimestamp.low) &&
        $util.isInteger(message.fromTimestamp.high)
      )
    )
      return "fromTimestamp: integer|Long expected";
    if (
      !$util.isInteger(message.toTimestamp) &&
      !(
        message.toTimestamp &&
        $util.isInteger(message.toTimestamp.low) &&
        $util.isInteger(message.toTimestamp.high)
      )
    )
      return "toTimestamp: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOACashFlowHistoryListReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOACashFlowHistoryListReq} ProtoOACashFlowHistoryListReq
   */
  ProtoOACashFlowHistoryListReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOACashFlowHistoryListReq) return object;
    var message = new $root.ProtoOACashFlowHistoryListReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.fromTimestamp != null)
      if ($util.Long)
        (message.fromTimestamp = $util.Long.fromValue(
          object.fromTimestamp
        )).unsigned = false;
      else if (typeof object.fromTimestamp === "string")
        message.fromTimestamp = parseInt(object.fromTimestamp, 10);
      else if (typeof object.fromTimestamp === "number")
        message.fromTimestamp = object.fromTimestamp;
      else if (typeof object.fromTimestamp === "object")
        message.fromTimestamp = new $util.LongBits(
          object.fromTimestamp.low >>> 0,
          object.fromTimestamp.high >>> 0
        ).toNumber();
    if (object.toTimestamp != null)
      if ($util.Long)
        (message.toTimestamp = $util.Long.fromValue(
          object.toTimestamp
        )).unsigned = false;
      else if (typeof object.toTimestamp === "string")
        message.toTimestamp = parseInt(object.toTimestamp, 10);
      else if (typeof object.toTimestamp === "number")
        message.toTimestamp = object.toTimestamp;
      else if (typeof object.toTimestamp === "object")
        message.toTimestamp = new $util.LongBits(
          object.toTimestamp.low >>> 0,
          object.toTimestamp.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOACashFlowHistoryListReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOACashFlowHistoryListReq
   * @static
   * @param {ProtoOACashFlowHistoryListReq} message ProtoOACashFlowHistoryListReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOACashFlowHistoryListReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ" : 2143;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.fromTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.fromTimestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.toTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.toTimestamp = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (
      message.fromTimestamp != null &&
      message.hasOwnProperty("fromTimestamp")
    )
      if (typeof message.fromTimestamp === "number")
        object.fromTimestamp =
          options.longs === String
            ? String(message.fromTimestamp)
            : message.fromTimestamp;
      else
        object.fromTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.fromTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.fromTimestamp.low >>> 0,
                message.fromTimestamp.high >>> 0
              ).toNumber()
            : message.fromTimestamp;
    if (message.toTimestamp != null && message.hasOwnProperty("toTimestamp"))
      if (typeof message.toTimestamp === "number")
        object.toTimestamp =
          options.longs === String
            ? String(message.toTimestamp)
            : message.toTimestamp;
      else
        object.toTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.toTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.toTimestamp.low >>> 0,
                message.toTimestamp.high >>> 0
              ).toNumber()
            : message.toTimestamp;
    return object;
  };

  /**
   * Converts this ProtoOACashFlowHistoryListReq to JSON.
   * @function toJSON
   * @memberof ProtoOACashFlowHistoryListReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOACashFlowHistoryListReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOACashFlowHistoryListReq;
})();

$root.ProtoOACashFlowHistoryListRes = (function() {
  /**
   * Properties of a ProtoOACashFlowHistoryListRes.
   * @exports IProtoOACashFlowHistoryListRes
   * @interface IProtoOACashFlowHistoryListRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOACashFlowHistoryListRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOACashFlowHistoryListRes ctidTraderAccountId
   * @property {Array.<IProtoOADepositWithdraw>|null} [depositWithdraw] ProtoOACashFlowHistoryListRes depositWithdraw
   */

  /**
   * Constructs a new ProtoOACashFlowHistoryListRes.
   * @exports ProtoOACashFlowHistoryListRes
   * @classdesc Response to the ProtoOACashFlowHistoryListReq request.
   * @implements IProtoOACashFlowHistoryListRes
   * @constructor
   * @param {IProtoOACashFlowHistoryListRes=} [properties] Properties to set
   */
  function ProtoOACashFlowHistoryListRes(properties) {
    this.depositWithdraw = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOACashFlowHistoryListRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOACashFlowHistoryListRes
   * @instance
   */
  ProtoOACashFlowHistoryListRes.prototype.payloadType = 2144;

  /**
   * ProtoOACashFlowHistoryListRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOACashFlowHistoryListRes
   * @instance
   */
  ProtoOACashFlowHistoryListRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOACashFlowHistoryListRes depositWithdraw.
   * @member {Array.<IProtoOADepositWithdraw>} depositWithdraw
   * @memberof ProtoOACashFlowHistoryListRes
   * @instance
   */
  ProtoOACashFlowHistoryListRes.prototype.depositWithdraw = $util.emptyArray;

  /**
   * Creates a new ProtoOACashFlowHistoryListRes instance using the specified properties.
   * @function create
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {IProtoOACashFlowHistoryListRes=} [properties] Properties to set
   * @returns {ProtoOACashFlowHistoryListRes} ProtoOACashFlowHistoryListRes instance
   */
  ProtoOACashFlowHistoryListRes.create = function create(properties) {
    return new ProtoOACashFlowHistoryListRes(properties);
  };

  /**
   * Encodes the specified ProtoOACashFlowHistoryListRes message. Does not implicitly {@link ProtoOACashFlowHistoryListRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {IProtoOACashFlowHistoryListRes} message ProtoOACashFlowHistoryListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACashFlowHistoryListRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.depositWithdraw != null && message.depositWithdraw.length)
      for (var i = 0; i < message.depositWithdraw.length; ++i)
        $root.ProtoOADepositWithdraw.encode(
          message.depositWithdraw[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOACashFlowHistoryListRes message, length delimited. Does not implicitly {@link ProtoOACashFlowHistoryListRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {IProtoOACashFlowHistoryListRes} message ProtoOACashFlowHistoryListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACashFlowHistoryListRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOACashFlowHistoryListRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOACashFlowHistoryListRes} ProtoOACashFlowHistoryListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACashFlowHistoryListRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOACashFlowHistoryListRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.depositWithdraw && message.depositWithdraw.length))
            message.depositWithdraw = [];
          message.depositWithdraw.push(
            $root.ProtoOADepositWithdraw.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOACashFlowHistoryListRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOACashFlowHistoryListRes} ProtoOACashFlowHistoryListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACashFlowHistoryListRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOACashFlowHistoryListRes message.
   * @function verify
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOACashFlowHistoryListRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      message.depositWithdraw != null &&
      message.hasOwnProperty("depositWithdraw")
    ) {
      if (!Array.isArray(message.depositWithdraw))
        return "depositWithdraw: array expected";
      for (var i = 0; i < message.depositWithdraw.length; ++i) {
        var error = $root.ProtoOADepositWithdraw.verify(
          message.depositWithdraw[i]
        );
        if (error) return "depositWithdraw." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOACashFlowHistoryListRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOACashFlowHistoryListRes} ProtoOACashFlowHistoryListRes
   */
  ProtoOACashFlowHistoryListRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOACashFlowHistoryListRes) return object;
    var message = new $root.ProtoOACashFlowHistoryListRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.depositWithdraw) {
      if (!Array.isArray(object.depositWithdraw))
        throw TypeError(
          ".ProtoOACashFlowHistoryListRes.depositWithdraw: array expected"
        );
      message.depositWithdraw = [];
      for (var i = 0; i < object.depositWithdraw.length; ++i) {
        if (typeof object.depositWithdraw[i] !== "object")
          throw TypeError(
            ".ProtoOACashFlowHistoryListRes.depositWithdraw: object expected"
          );
        message.depositWithdraw[i] = $root.ProtoOADepositWithdraw.fromObject(
          object.depositWithdraw[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOACashFlowHistoryListRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOACashFlowHistoryListRes
   * @static
   * @param {ProtoOACashFlowHistoryListRes} message ProtoOACashFlowHistoryListRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOACashFlowHistoryListRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.depositWithdraw = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES" : 2144;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.depositWithdraw && message.depositWithdraw.length) {
      object.depositWithdraw = [];
      for (var j = 0; j < message.depositWithdraw.length; ++j)
        object.depositWithdraw[j] = $root.ProtoOADepositWithdraw.toObject(
          message.depositWithdraw[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOACashFlowHistoryListRes to JSON.
   * @function toJSON
   * @memberof ProtoOACashFlowHistoryListRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOACashFlowHistoryListRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOACashFlowHistoryListRes;
})();

$root.ProtoOAGetAccountListByAccessTokenReq = (function() {
  /**
   * Properties of a ProtoOAGetAccountListByAccessTokenReq.
   * @exports IProtoOAGetAccountListByAccessTokenReq
   * @interface IProtoOAGetAccountListByAccessTokenReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetAccountListByAccessTokenReq payloadType
   * @property {string} accessToken ProtoOAGetAccountListByAccessTokenReq accessToken
   */

  /**
   * Constructs a new ProtoOAGetAccountListByAccessTokenReq.
   * @exports ProtoOAGetAccountListByAccessTokenReq
   * @classdesc Request for getting the list of granted trader's account for the access token.
   * @implements IProtoOAGetAccountListByAccessTokenReq
   * @constructor
   * @param {IProtoOAGetAccountListByAccessTokenReq=} [properties] Properties to set
   */
  function ProtoOAGetAccountListByAccessTokenReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetAccountListByAccessTokenReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @instance
   */
  ProtoOAGetAccountListByAccessTokenReq.prototype.payloadType = 2149;

  /**
   * ProtoOAGetAccountListByAccessTokenReq accessToken.
   * @member {string} accessToken
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @instance
   */
  ProtoOAGetAccountListByAccessTokenReq.prototype.accessToken = "";

  /**
   * Creates a new ProtoOAGetAccountListByAccessTokenReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {IProtoOAGetAccountListByAccessTokenReq=} [properties] Properties to set
   * @returns {ProtoOAGetAccountListByAccessTokenReq} ProtoOAGetAccountListByAccessTokenReq instance
   */
  ProtoOAGetAccountListByAccessTokenReq.create = function create(properties) {
    return new ProtoOAGetAccountListByAccessTokenReq(properties);
  };

  /**
   * Encodes the specified ProtoOAGetAccountListByAccessTokenReq message. Does not implicitly {@link ProtoOAGetAccountListByAccessTokenReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {IProtoOAGetAccountListByAccessTokenReq} message ProtoOAGetAccountListByAccessTokenReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetAccountListByAccessTokenReq.encode = function encode(
    message,
    writer
  ) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.accessToken);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetAccountListByAccessTokenReq message, length delimited. Does not implicitly {@link ProtoOAGetAccountListByAccessTokenReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {IProtoOAGetAccountListByAccessTokenReq} message ProtoOAGetAccountListByAccessTokenReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetAccountListByAccessTokenReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetAccountListByAccessTokenReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetAccountListByAccessTokenReq} ProtoOAGetAccountListByAccessTokenReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetAccountListByAccessTokenReq.decode = function decode(
    reader,
    length
  ) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetAccountListByAccessTokenReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.accessToken = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("accessToken"))
      throw $util.ProtocolError("missing required 'accessToken'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetAccountListByAccessTokenReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetAccountListByAccessTokenReq} ProtoOAGetAccountListByAccessTokenReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetAccountListByAccessTokenReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetAccountListByAccessTokenReq message.
   * @function verify
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetAccountListByAccessTokenReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (!$util.isString(message.accessToken))
      return "accessToken: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAGetAccountListByAccessTokenReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetAccountListByAccessTokenReq} ProtoOAGetAccountListByAccessTokenReq
   */
  ProtoOAGetAccountListByAccessTokenReq.fromObject = function fromObject(
    object
  ) {
    if (object instanceof $root.ProtoOAGetAccountListByAccessTokenReq)
      return object;
    var message = new $root.ProtoOAGetAccountListByAccessTokenReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.accessToken != null)
      message.accessToken = String(object.accessToken);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetAccountListByAccessTokenReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @static
   * @param {ProtoOAGetAccountListByAccessTokenReq} message ProtoOAGetAccountListByAccessTokenReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetAccountListByAccessTokenReq.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ"
          : 2149;
      object.accessToken = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.accessToken != null && message.hasOwnProperty("accessToken"))
      object.accessToken = message.accessToken;
    return object;
  };

  /**
   * Converts this ProtoOAGetAccountListByAccessTokenReq to JSON.
   * @function toJSON
   * @memberof ProtoOAGetAccountListByAccessTokenReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetAccountListByAccessTokenReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetAccountListByAccessTokenReq;
})();

$root.ProtoOAGetAccountListByAccessTokenRes = (function() {
  /**
   * Properties of a ProtoOAGetAccountListByAccessTokenRes.
   * @exports IProtoOAGetAccountListByAccessTokenRes
   * @interface IProtoOAGetAccountListByAccessTokenRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetAccountListByAccessTokenRes payloadType
   * @property {string} accessToken ProtoOAGetAccountListByAccessTokenRes accessToken
   * @property {ProtoOAClientPermissionScope|null} [permissionScope] ProtoOAGetAccountListByAccessTokenRes permissionScope
   * @property {Array.<IProtoOACtidTraderAccount>|null} [ctidTraderAccount] ProtoOAGetAccountListByAccessTokenRes ctidTraderAccount
   */

  /**
   * Constructs a new ProtoOAGetAccountListByAccessTokenRes.
   * @exports ProtoOAGetAccountListByAccessTokenRes
   * @classdesc Response to the ProtoOAGetAccountListByAccessTokenReq request.
   * @implements IProtoOAGetAccountListByAccessTokenRes
   * @constructor
   * @param {IProtoOAGetAccountListByAccessTokenRes=} [properties] Properties to set
   */
  function ProtoOAGetAccountListByAccessTokenRes(properties) {
    this.ctidTraderAccount = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetAccountListByAccessTokenRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @instance
   */
  ProtoOAGetAccountListByAccessTokenRes.prototype.payloadType = 2150;

  /**
   * ProtoOAGetAccountListByAccessTokenRes accessToken.
   * @member {string} accessToken
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @instance
   */
  ProtoOAGetAccountListByAccessTokenRes.prototype.accessToken = "";

  /**
   * ProtoOAGetAccountListByAccessTokenRes permissionScope.
   * @member {ProtoOAClientPermissionScope} permissionScope
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @instance
   */
  ProtoOAGetAccountListByAccessTokenRes.prototype.permissionScope = 0;

  /**
   * ProtoOAGetAccountListByAccessTokenRes ctidTraderAccount.
   * @member {Array.<IProtoOACtidTraderAccount>} ctidTraderAccount
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @instance
   */
  ProtoOAGetAccountListByAccessTokenRes.prototype.ctidTraderAccount =
    $util.emptyArray;

  /**
   * Creates a new ProtoOAGetAccountListByAccessTokenRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {IProtoOAGetAccountListByAccessTokenRes=} [properties] Properties to set
   * @returns {ProtoOAGetAccountListByAccessTokenRes} ProtoOAGetAccountListByAccessTokenRes instance
   */
  ProtoOAGetAccountListByAccessTokenRes.create = function create(properties) {
    return new ProtoOAGetAccountListByAccessTokenRes(properties);
  };

  /**
   * Encodes the specified ProtoOAGetAccountListByAccessTokenRes message. Does not implicitly {@link ProtoOAGetAccountListByAccessTokenRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {IProtoOAGetAccountListByAccessTokenRes} message ProtoOAGetAccountListByAccessTokenRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetAccountListByAccessTokenRes.encode = function encode(
    message,
    writer
  ) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.accessToken);
    if (
      message.permissionScope != null &&
      message.hasOwnProperty("permissionScope")
    )
      writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.permissionScope);
    if (message.ctidTraderAccount != null && message.ctidTraderAccount.length)
      for (var i = 0; i < message.ctidTraderAccount.length; ++i)
        $root.ProtoOACtidTraderAccount.encode(
          message.ctidTraderAccount[i],
          writer.uint32(/* id 4, wireType 2 =*/ 34).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetAccountListByAccessTokenRes message, length delimited. Does not implicitly {@link ProtoOAGetAccountListByAccessTokenRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {IProtoOAGetAccountListByAccessTokenRes} message ProtoOAGetAccountListByAccessTokenRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetAccountListByAccessTokenRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetAccountListByAccessTokenRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetAccountListByAccessTokenRes} ProtoOAGetAccountListByAccessTokenRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetAccountListByAccessTokenRes.decode = function decode(
    reader,
    length
  ) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetAccountListByAccessTokenRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.accessToken = reader.string();
          break;
        case 3:
          message.permissionScope = reader.int32();
          break;
        case 4:
          if (!(message.ctidTraderAccount && message.ctidTraderAccount.length))
            message.ctidTraderAccount = [];
          message.ctidTraderAccount.push(
            $root.ProtoOACtidTraderAccount.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("accessToken"))
      throw $util.ProtocolError("missing required 'accessToken'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetAccountListByAccessTokenRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetAccountListByAccessTokenRes} ProtoOAGetAccountListByAccessTokenRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetAccountListByAccessTokenRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetAccountListByAccessTokenRes message.
   * @function verify
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetAccountListByAccessTokenRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (!$util.isString(message.accessToken))
      return "accessToken: string expected";
    if (
      message.permissionScope != null &&
      message.hasOwnProperty("permissionScope")
    )
      switch (message.permissionScope) {
        default:
          return "permissionScope: enum value expected";
        case 0:
        case 1:
          break;
      }
    if (
      message.ctidTraderAccount != null &&
      message.hasOwnProperty("ctidTraderAccount")
    ) {
      if (!Array.isArray(message.ctidTraderAccount))
        return "ctidTraderAccount: array expected";
      for (var i = 0; i < message.ctidTraderAccount.length; ++i) {
        var error = $root.ProtoOACtidTraderAccount.verify(
          message.ctidTraderAccount[i]
        );
        if (error) return "ctidTraderAccount." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOAGetAccountListByAccessTokenRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetAccountListByAccessTokenRes} ProtoOAGetAccountListByAccessTokenRes
   */
  ProtoOAGetAccountListByAccessTokenRes.fromObject = function fromObject(
    object
  ) {
    if (object instanceof $root.ProtoOAGetAccountListByAccessTokenRes)
      return object;
    var message = new $root.ProtoOAGetAccountListByAccessTokenRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.accessToken != null)
      message.accessToken = String(object.accessToken);
    switch (object.permissionScope) {
      case "SCOPE_VIEW":
      case 0:
        message.permissionScope = 0;
        break;
      case "SCOPE_TRADE":
      case 1:
        message.permissionScope = 1;
        break;
    }
    if (object.ctidTraderAccount) {
      if (!Array.isArray(object.ctidTraderAccount))
        throw TypeError(
          ".ProtoOAGetAccountListByAccessTokenRes.ctidTraderAccount: array expected"
        );
      message.ctidTraderAccount = [];
      for (var i = 0; i < object.ctidTraderAccount.length; ++i) {
        if (typeof object.ctidTraderAccount[i] !== "object")
          throw TypeError(
            ".ProtoOAGetAccountListByAccessTokenRes.ctidTraderAccount: object expected"
          );
        message.ctidTraderAccount[
          i
        ] = $root.ProtoOACtidTraderAccount.fromObject(
          object.ctidTraderAccount[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetAccountListByAccessTokenRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @static
   * @param {ProtoOAGetAccountListByAccessTokenRes} message ProtoOAGetAccountListByAccessTokenRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetAccountListByAccessTokenRes.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.ctidTraderAccount = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES"
          : 2150;
      object.accessToken = "";
      object.permissionScope = options.enums === String ? "SCOPE_VIEW" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.accessToken != null && message.hasOwnProperty("accessToken"))
      object.accessToken = message.accessToken;
    if (
      message.permissionScope != null &&
      message.hasOwnProperty("permissionScope")
    )
      object.permissionScope =
        options.enums === String
          ? $root.ProtoOAClientPermissionScope[message.permissionScope]
          : message.permissionScope;
    if (message.ctidTraderAccount && message.ctidTraderAccount.length) {
      object.ctidTraderAccount = [];
      for (var j = 0; j < message.ctidTraderAccount.length; ++j)
        object.ctidTraderAccount[j] = $root.ProtoOACtidTraderAccount.toObject(
          message.ctidTraderAccount[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOAGetAccountListByAccessTokenRes to JSON.
   * @function toJSON
   * @memberof ProtoOAGetAccountListByAccessTokenRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetAccountListByAccessTokenRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetAccountListByAccessTokenRes;
})();

$root.ProtoOASubscribeSpotsReq = (function() {
  /**
   * Properties of a ProtoOASubscribeSpotsReq.
   * @exports IProtoOASubscribeSpotsReq
   * @interface IProtoOASubscribeSpotsReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASubscribeSpotsReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASubscribeSpotsReq ctidTraderAccountId
   * @property {Array.<number|Long>|null} [symbolId] ProtoOASubscribeSpotsReq symbolId
   */

  /**
   * Constructs a new ProtoOASubscribeSpotsReq.
   * @exports ProtoOASubscribeSpotsReq
   * @classdesc Request for subscribing on spot events of the specified symbol.
   * @implements IProtoOASubscribeSpotsReq
   * @constructor
   * @param {IProtoOASubscribeSpotsReq=} [properties] Properties to set
   */
  function ProtoOASubscribeSpotsReq(properties) {
    this.symbolId = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASubscribeSpotsReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASubscribeSpotsReq
   * @instance
   */
  ProtoOASubscribeSpotsReq.prototype.payloadType = 2127;

  /**
   * ProtoOASubscribeSpotsReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASubscribeSpotsReq
   * @instance
   */
  ProtoOASubscribeSpotsReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASubscribeSpotsReq symbolId.
   * @member {Array.<number|Long>} symbolId
   * @memberof ProtoOASubscribeSpotsReq
   * @instance
   */
  ProtoOASubscribeSpotsReq.prototype.symbolId = $util.emptyArray;

  /**
   * Creates a new ProtoOASubscribeSpotsReq instance using the specified properties.
   * @function create
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {IProtoOASubscribeSpotsReq=} [properties] Properties to set
   * @returns {ProtoOASubscribeSpotsReq} ProtoOASubscribeSpotsReq instance
   */
  ProtoOASubscribeSpotsReq.create = function create(properties) {
    return new ProtoOASubscribeSpotsReq(properties);
  };

  /**
   * Encodes the specified ProtoOASubscribeSpotsReq message. Does not implicitly {@link ProtoOASubscribeSpotsReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {IProtoOASubscribeSpotsReq} message ProtoOASubscribeSpotsReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeSpotsReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbolId != null && message.symbolId.length)
      for (var i = 0; i < message.symbolId.length; ++i)
        writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId[i]);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASubscribeSpotsReq message, length delimited. Does not implicitly {@link ProtoOASubscribeSpotsReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {IProtoOASubscribeSpotsReq} message ProtoOASubscribeSpotsReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeSpotsReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASubscribeSpotsReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASubscribeSpotsReq} ProtoOASubscribeSpotsReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeSpotsReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASubscribeSpotsReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbolId && message.symbolId.length))
            message.symbolId = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) message.symbolId.push(reader.int64());
          } else message.symbolId.push(reader.int64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASubscribeSpotsReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASubscribeSpotsReq} ProtoOASubscribeSpotsReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeSpotsReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASubscribeSpotsReq message.
   * @function verify
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASubscribeSpotsReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbolId != null && message.hasOwnProperty("symbolId")) {
      if (!Array.isArray(message.symbolId)) return "symbolId: array expected";
      for (var i = 0; i < message.symbolId.length; ++i)
        if (
          !$util.isInteger(message.symbolId[i]) &&
          !(
            message.symbolId[i] &&
            $util.isInteger(message.symbolId[i].low) &&
            $util.isInteger(message.symbolId[i].high)
          )
        )
          return "symbolId: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOASubscribeSpotsReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASubscribeSpotsReq} ProtoOASubscribeSpotsReq
   */
  ProtoOASubscribeSpotsReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASubscribeSpotsReq) return object;
    var message = new $root.ProtoOASubscribeSpotsReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId) {
      if (!Array.isArray(object.symbolId))
        throw TypeError(".ProtoOASubscribeSpotsReq.symbolId: array expected");
      message.symbolId = [];
      for (var i = 0; i < object.symbolId.length; ++i)
        if ($util.Long)
          (message.symbolId[i] = $util.Long.fromValue(
            object.symbolId[i]
          )).unsigned = false;
        else if (typeof object.symbolId[i] === "string")
          message.symbolId[i] = parseInt(object.symbolId[i], 10);
        else if (typeof object.symbolId[i] === "number")
          message.symbolId[i] = object.symbolId[i];
        else if (typeof object.symbolId[i] === "object")
          message.symbolId[i] = new $util.LongBits(
            object.symbolId[i].low >>> 0,
            object.symbolId[i].high >>> 0
          ).toNumber();
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASubscribeSpotsReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASubscribeSpotsReq
   * @static
   * @param {ProtoOASubscribeSpotsReq} message ProtoOASubscribeSpotsReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASubscribeSpotsReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbolId = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SUBSCRIBE_SPOTS_REQ" : 2127;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId && message.symbolId.length) {
      object.symbolId = [];
      for (var j = 0; j < message.symbolId.length; ++j)
        if (typeof message.symbolId[j] === "number")
          object.symbolId[j] =
            options.longs === String
              ? String(message.symbolId[j])
              : message.symbolId[j];
        else
          object.symbolId[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.symbolId[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.symbolId[j].low >>> 0,
                  message.symbolId[j].high >>> 0
                ).toNumber()
              : message.symbolId[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOASubscribeSpotsReq to JSON.
   * @function toJSON
   * @memberof ProtoOASubscribeSpotsReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASubscribeSpotsReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASubscribeSpotsReq;
})();

$root.ProtoOASubscribeSpotsRes = (function() {
  /**
   * Properties of a ProtoOASubscribeSpotsRes.
   * @exports IProtoOASubscribeSpotsRes
   * @interface IProtoOASubscribeSpotsRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASubscribeSpotsRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASubscribeSpotsRes ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOASubscribeSpotsRes.
   * @exports ProtoOASubscribeSpotsRes
   * @classdesc Response to the ProtoOASubscribeSpotsReq request.
   * @implements IProtoOASubscribeSpotsRes
   * @constructor
   * @param {IProtoOASubscribeSpotsRes=} [properties] Properties to set
   */
  function ProtoOASubscribeSpotsRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASubscribeSpotsRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASubscribeSpotsRes
   * @instance
   */
  ProtoOASubscribeSpotsRes.prototype.payloadType = 2128;

  /**
   * ProtoOASubscribeSpotsRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASubscribeSpotsRes
   * @instance
   */
  ProtoOASubscribeSpotsRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOASubscribeSpotsRes instance using the specified properties.
   * @function create
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {IProtoOASubscribeSpotsRes=} [properties] Properties to set
   * @returns {ProtoOASubscribeSpotsRes} ProtoOASubscribeSpotsRes instance
   */
  ProtoOASubscribeSpotsRes.create = function create(properties) {
    return new ProtoOASubscribeSpotsRes(properties);
  };

  /**
   * Encodes the specified ProtoOASubscribeSpotsRes message. Does not implicitly {@link ProtoOASubscribeSpotsRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {IProtoOASubscribeSpotsRes} message ProtoOASubscribeSpotsRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeSpotsRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASubscribeSpotsRes message, length delimited. Does not implicitly {@link ProtoOASubscribeSpotsRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {IProtoOASubscribeSpotsRes} message ProtoOASubscribeSpotsRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeSpotsRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASubscribeSpotsRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASubscribeSpotsRes} ProtoOASubscribeSpotsRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeSpotsRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASubscribeSpotsRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASubscribeSpotsRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASubscribeSpotsRes} ProtoOASubscribeSpotsRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeSpotsRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASubscribeSpotsRes message.
   * @function verify
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASubscribeSpotsRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOASubscribeSpotsRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASubscribeSpotsRes} ProtoOASubscribeSpotsRes
   */
  ProtoOASubscribeSpotsRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASubscribeSpotsRes) return object;
    var message = new $root.ProtoOASubscribeSpotsRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASubscribeSpotsRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASubscribeSpotsRes
   * @static
   * @param {ProtoOASubscribeSpotsRes} message ProtoOASubscribeSpotsRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASubscribeSpotsRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SUBSCRIBE_SPOTS_RES" : 2128;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOASubscribeSpotsRes to JSON.
   * @function toJSON
   * @memberof ProtoOASubscribeSpotsRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASubscribeSpotsRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASubscribeSpotsRes;
})();

$root.ProtoOAUnsubscribeSpotsReq = (function() {
  /**
   * Properties of a ProtoOAUnsubscribeSpotsReq.
   * @exports IProtoOAUnsubscribeSpotsReq
   * @interface IProtoOAUnsubscribeSpotsReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAUnsubscribeSpotsReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAUnsubscribeSpotsReq ctidTraderAccountId
   * @property {Array.<number|Long>|null} [symbolId] ProtoOAUnsubscribeSpotsReq symbolId
   */

  /**
   * Constructs a new ProtoOAUnsubscribeSpotsReq.
   * @exports ProtoOAUnsubscribeSpotsReq
   * @classdesc Request for unsubscribing from the spot events of the specified symbol.
   * @implements IProtoOAUnsubscribeSpotsReq
   * @constructor
   * @param {IProtoOAUnsubscribeSpotsReq=} [properties] Properties to set
   */
  function ProtoOAUnsubscribeSpotsReq(properties) {
    this.symbolId = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAUnsubscribeSpotsReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @instance
   */
  ProtoOAUnsubscribeSpotsReq.prototype.payloadType = 2129;

  /**
   * ProtoOAUnsubscribeSpotsReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @instance
   */
  ProtoOAUnsubscribeSpotsReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAUnsubscribeSpotsReq symbolId.
   * @member {Array.<number|Long>} symbolId
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @instance
   */
  ProtoOAUnsubscribeSpotsReq.prototype.symbolId = $util.emptyArray;

  /**
   * Creates a new ProtoOAUnsubscribeSpotsReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {IProtoOAUnsubscribeSpotsReq=} [properties] Properties to set
   * @returns {ProtoOAUnsubscribeSpotsReq} ProtoOAUnsubscribeSpotsReq instance
   */
  ProtoOAUnsubscribeSpotsReq.create = function create(properties) {
    return new ProtoOAUnsubscribeSpotsReq(properties);
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeSpotsReq message. Does not implicitly {@link ProtoOAUnsubscribeSpotsReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {IProtoOAUnsubscribeSpotsReq} message ProtoOAUnsubscribeSpotsReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeSpotsReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbolId != null && message.symbolId.length)
      for (var i = 0; i < message.symbolId.length; ++i)
        writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId[i]);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeSpotsReq message, length delimited. Does not implicitly {@link ProtoOAUnsubscribeSpotsReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {IProtoOAUnsubscribeSpotsReq} message ProtoOAUnsubscribeSpotsReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeSpotsReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAUnsubscribeSpotsReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAUnsubscribeSpotsReq} ProtoOAUnsubscribeSpotsReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeSpotsReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAUnsubscribeSpotsReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbolId && message.symbolId.length))
            message.symbolId = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) message.symbolId.push(reader.int64());
          } else message.symbolId.push(reader.int64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAUnsubscribeSpotsReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAUnsubscribeSpotsReq} ProtoOAUnsubscribeSpotsReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeSpotsReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAUnsubscribeSpotsReq message.
   * @function verify
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAUnsubscribeSpotsReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbolId != null && message.hasOwnProperty("symbolId")) {
      if (!Array.isArray(message.symbolId)) return "symbolId: array expected";
      for (var i = 0; i < message.symbolId.length; ++i)
        if (
          !$util.isInteger(message.symbolId[i]) &&
          !(
            message.symbolId[i] &&
            $util.isInteger(message.symbolId[i].low) &&
            $util.isInteger(message.symbolId[i].high)
          )
        )
          return "symbolId: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOAUnsubscribeSpotsReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAUnsubscribeSpotsReq} ProtoOAUnsubscribeSpotsReq
   */
  ProtoOAUnsubscribeSpotsReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAUnsubscribeSpotsReq) return object;
    var message = new $root.ProtoOAUnsubscribeSpotsReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId) {
      if (!Array.isArray(object.symbolId))
        throw TypeError(".ProtoOAUnsubscribeSpotsReq.symbolId: array expected");
      message.symbolId = [];
      for (var i = 0; i < object.symbolId.length; ++i)
        if ($util.Long)
          (message.symbolId[i] = $util.Long.fromValue(
            object.symbolId[i]
          )).unsigned = false;
        else if (typeof object.symbolId[i] === "string")
          message.symbolId[i] = parseInt(object.symbolId[i], 10);
        else if (typeof object.symbolId[i] === "number")
          message.symbolId[i] = object.symbolId[i];
        else if (typeof object.symbolId[i] === "object")
          message.symbolId[i] = new $util.LongBits(
            object.symbolId[i].low >>> 0,
            object.symbolId[i].high >>> 0
          ).toNumber();
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAUnsubscribeSpotsReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @static
   * @param {ProtoOAUnsubscribeSpotsReq} message ProtoOAUnsubscribeSpotsReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAUnsubscribeSpotsReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbolId = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ" : 2129;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId && message.symbolId.length) {
      object.symbolId = [];
      for (var j = 0; j < message.symbolId.length; ++j)
        if (typeof message.symbolId[j] === "number")
          object.symbolId[j] =
            options.longs === String
              ? String(message.symbolId[j])
              : message.symbolId[j];
        else
          object.symbolId[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.symbolId[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.symbolId[j].low >>> 0,
                  message.symbolId[j].high >>> 0
                ).toNumber()
              : message.symbolId[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOAUnsubscribeSpotsReq to JSON.
   * @function toJSON
   * @memberof ProtoOAUnsubscribeSpotsReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAUnsubscribeSpotsReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAUnsubscribeSpotsReq;
})();

$root.ProtoOAUnsubscribeSpotsRes = (function() {
  /**
   * Properties of a ProtoOAUnsubscribeSpotsRes.
   * @exports IProtoOAUnsubscribeSpotsRes
   * @interface IProtoOAUnsubscribeSpotsRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAUnsubscribeSpotsRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAUnsubscribeSpotsRes ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAUnsubscribeSpotsRes.
   * @exports ProtoOAUnsubscribeSpotsRes
   * @classdesc Response to the ProtoOASubscribeSpotsRes request.
   * @implements IProtoOAUnsubscribeSpotsRes
   * @constructor
   * @param {IProtoOAUnsubscribeSpotsRes=} [properties] Properties to set
   */
  function ProtoOAUnsubscribeSpotsRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAUnsubscribeSpotsRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @instance
   */
  ProtoOAUnsubscribeSpotsRes.prototype.payloadType = 2130;

  /**
   * ProtoOAUnsubscribeSpotsRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @instance
   */
  ProtoOAUnsubscribeSpotsRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAUnsubscribeSpotsRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {IProtoOAUnsubscribeSpotsRes=} [properties] Properties to set
   * @returns {ProtoOAUnsubscribeSpotsRes} ProtoOAUnsubscribeSpotsRes instance
   */
  ProtoOAUnsubscribeSpotsRes.create = function create(properties) {
    return new ProtoOAUnsubscribeSpotsRes(properties);
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeSpotsRes message. Does not implicitly {@link ProtoOAUnsubscribeSpotsRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {IProtoOAUnsubscribeSpotsRes} message ProtoOAUnsubscribeSpotsRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeSpotsRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeSpotsRes message, length delimited. Does not implicitly {@link ProtoOAUnsubscribeSpotsRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {IProtoOAUnsubscribeSpotsRes} message ProtoOAUnsubscribeSpotsRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeSpotsRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAUnsubscribeSpotsRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAUnsubscribeSpotsRes} ProtoOAUnsubscribeSpotsRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeSpotsRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAUnsubscribeSpotsRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAUnsubscribeSpotsRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAUnsubscribeSpotsRes} ProtoOAUnsubscribeSpotsRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeSpotsRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAUnsubscribeSpotsRes message.
   * @function verify
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAUnsubscribeSpotsRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAUnsubscribeSpotsRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAUnsubscribeSpotsRes} ProtoOAUnsubscribeSpotsRes
   */
  ProtoOAUnsubscribeSpotsRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAUnsubscribeSpotsRes) return object;
    var message = new $root.ProtoOAUnsubscribeSpotsRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAUnsubscribeSpotsRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @static
   * @param {ProtoOAUnsubscribeSpotsRes} message ProtoOAUnsubscribeSpotsRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAUnsubscribeSpotsRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_UNSUBSCRIBE_SPOTS_RES" : 2130;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAUnsubscribeSpotsRes to JSON.
   * @function toJSON
   * @memberof ProtoOAUnsubscribeSpotsRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAUnsubscribeSpotsRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAUnsubscribeSpotsRes;
})();

$root.ProtoOASpotEvent = (function() {
  /**
   * Properties of a ProtoOASpotEvent.
   * @exports IProtoOASpotEvent
   * @interface IProtoOASpotEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASpotEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASpotEvent ctidTraderAccountId
   * @property {number|Long} symbolId ProtoOASpotEvent symbolId
   * @property {number|Long|null} [bid] ProtoOASpotEvent bid
   * @property {number|Long|null} [ask] ProtoOASpotEvent ask
   * @property {Array.<IProtoOATrendbar>|null} [trendbar] ProtoOASpotEvent trendbar
   */

  /**
   * Constructs a new ProtoOASpotEvent.
   * @exports ProtoOASpotEvent
   * @classdesc Event that is sent when a new spot event is generated on the server side. Requires subscription on the spot events, see ProtoOASubscribeSpotsReq.
   * @implements IProtoOASpotEvent
   * @constructor
   * @param {IProtoOASpotEvent=} [properties] Properties to set
   */
  function ProtoOASpotEvent(properties) {
    this.trendbar = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASpotEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASpotEvent
   * @instance
   */
  ProtoOASpotEvent.prototype.payloadType = 2131;

  /**
   * ProtoOASpotEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASpotEvent
   * @instance
   */
  ProtoOASpotEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASpotEvent symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOASpotEvent
   * @instance
   */
  ProtoOASpotEvent.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASpotEvent bid.
   * @member {number|Long} bid
   * @memberof ProtoOASpotEvent
   * @instance
   */
  ProtoOASpotEvent.prototype.bid = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOASpotEvent ask.
   * @member {number|Long} ask
   * @memberof ProtoOASpotEvent
   * @instance
   */
  ProtoOASpotEvent.prototype.ask = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOASpotEvent trendbar.
   * @member {Array.<IProtoOATrendbar>} trendbar
   * @memberof ProtoOASpotEvent
   * @instance
   */
  ProtoOASpotEvent.prototype.trendbar = $util.emptyArray;

  /**
   * Creates a new ProtoOASpotEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOASpotEvent
   * @static
   * @param {IProtoOASpotEvent=} [properties] Properties to set
   * @returns {ProtoOASpotEvent} ProtoOASpotEvent instance
   */
  ProtoOASpotEvent.create = function create(properties) {
    return new ProtoOASpotEvent(properties);
  };

  /**
   * Encodes the specified ProtoOASpotEvent message. Does not implicitly {@link ProtoOASpotEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASpotEvent
   * @static
   * @param {IProtoOASpotEvent} message ProtoOASpotEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASpotEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId);
    if (message.bid != null && message.hasOwnProperty("bid"))
      writer.uint32(/* id 4, wireType 0 =*/ 32).uint64(message.bid);
    if (message.ask != null && message.hasOwnProperty("ask"))
      writer.uint32(/* id 5, wireType 0 =*/ 40).uint64(message.ask);
    if (message.trendbar != null && message.trendbar.length)
      for (var i = 0; i < message.trendbar.length; ++i)
        $root.ProtoOATrendbar.encode(
          message.trendbar[i],
          writer.uint32(/* id 6, wireType 2 =*/ 50).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOASpotEvent message, length delimited. Does not implicitly {@link ProtoOASpotEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASpotEvent
   * @static
   * @param {IProtoOASpotEvent} message ProtoOASpotEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASpotEvent.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASpotEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASpotEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASpotEvent} ProtoOASpotEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASpotEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASpotEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.symbolId = reader.int64();
          break;
        case 4:
          message.bid = reader.uint64();
          break;
        case 5:
          message.ask = reader.uint64();
          break;
        case 6:
          if (!(message.trendbar && message.trendbar.length))
            message.trendbar = [];
          message.trendbar.push(
            $root.ProtoOATrendbar.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASpotEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASpotEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASpotEvent} ProtoOASpotEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASpotEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASpotEvent message.
   * @function verify
   * @memberof ProtoOASpotEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASpotEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    if (message.bid != null && message.hasOwnProperty("bid"))
      if (
        !$util.isInteger(message.bid) &&
        !(
          message.bid &&
          $util.isInteger(message.bid.low) &&
          $util.isInteger(message.bid.high)
        )
      )
        return "bid: integer|Long expected";
    if (message.ask != null && message.hasOwnProperty("ask"))
      if (
        !$util.isInteger(message.ask) &&
        !(
          message.ask &&
          $util.isInteger(message.ask.low) &&
          $util.isInteger(message.ask.high)
        )
      )
        return "ask: integer|Long expected";
    if (message.trendbar != null && message.hasOwnProperty("trendbar")) {
      if (!Array.isArray(message.trendbar)) return "trendbar: array expected";
      for (var i = 0; i < message.trendbar.length; ++i) {
        var error = $root.ProtoOATrendbar.verify(message.trendbar[i]);
        if (error) return "trendbar." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOASpotEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASpotEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASpotEvent} ProtoOASpotEvent
   */
  ProtoOASpotEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASpotEvent) return object;
    var message = new $root.ProtoOASpotEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    if (object.bid != null)
      if ($util.Long)
        (message.bid = $util.Long.fromValue(object.bid)).unsigned = true;
      else if (typeof object.bid === "string")
        message.bid = parseInt(object.bid, 10);
      else if (typeof object.bid === "number") message.bid = object.bid;
      else if (typeof object.bid === "object")
        message.bid = new $util.LongBits(
          object.bid.low >>> 0,
          object.bid.high >>> 0
        ).toNumber(true);
    if (object.ask != null)
      if ($util.Long)
        (message.ask = $util.Long.fromValue(object.ask)).unsigned = true;
      else if (typeof object.ask === "string")
        message.ask = parseInt(object.ask, 10);
      else if (typeof object.ask === "number") message.ask = object.ask;
      else if (typeof object.ask === "object")
        message.ask = new $util.LongBits(
          object.ask.low >>> 0,
          object.ask.high >>> 0
        ).toNumber(true);
    if (object.trendbar) {
      if (!Array.isArray(object.trendbar))
        throw TypeError(".ProtoOASpotEvent.trendbar: array expected");
      message.trendbar = [];
      for (var i = 0; i < object.trendbar.length; ++i) {
        if (typeof object.trendbar[i] !== "object")
          throw TypeError(".ProtoOASpotEvent.trendbar: object expected");
        message.trendbar[i] = $root.ProtoOATrendbar.fromObject(
          object.trendbar[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASpotEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASpotEvent
   * @static
   * @param {ProtoOASpotEvent} message ProtoOASpotEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASpotEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.trendbar = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SPOT_EVENT" : 2131;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.bid =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.bid = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.ask =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ask = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (message.bid != null && message.hasOwnProperty("bid"))
      if (typeof message.bid === "number")
        object.bid =
          options.longs === String ? String(message.bid) : message.bid;
      else
        object.bid =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.bid)
            : options.longs === Number
            ? new $util.LongBits(
                message.bid.low >>> 0,
                message.bid.high >>> 0
              ).toNumber(true)
            : message.bid;
    if (message.ask != null && message.hasOwnProperty("ask"))
      if (typeof message.ask === "number")
        object.ask =
          options.longs === String ? String(message.ask) : message.ask;
      else
        object.ask =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ask)
            : options.longs === Number
            ? new $util.LongBits(
                message.ask.low >>> 0,
                message.ask.high >>> 0
              ).toNumber(true)
            : message.ask;
    if (message.trendbar && message.trendbar.length) {
      object.trendbar = [];
      for (var j = 0; j < message.trendbar.length; ++j)
        object.trendbar[j] = $root.ProtoOATrendbar.toObject(
          message.trendbar[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOASpotEvent to JSON.
   * @function toJSON
   * @memberof ProtoOASpotEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASpotEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASpotEvent;
})();

$root.ProtoOASubscribeLiveTrendbarReq = (function() {
  /**
   * Properties of a ProtoOASubscribeLiveTrendbarReq.
   * @exports IProtoOASubscribeLiveTrendbarReq
   * @interface IProtoOASubscribeLiveTrendbarReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASubscribeLiveTrendbarReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASubscribeLiveTrendbarReq ctidTraderAccountId
   * @property {ProtoOATrendbarPeriod} period ProtoOASubscribeLiveTrendbarReq period
   * @property {number|Long} symbolId ProtoOASubscribeLiveTrendbarReq symbolId
   */

  /**
   * Constructs a new ProtoOASubscribeLiveTrendbarReq.
   * @exports ProtoOASubscribeLiveTrendbarReq
   * @classdesc Request for subscribing for live trend bars. Requires subscription on the spot events, see ProtoOASubscribeSpotsReq.
   * @implements IProtoOASubscribeLiveTrendbarReq
   * @constructor
   * @param {IProtoOASubscribeLiveTrendbarReq=} [properties] Properties to set
   */
  function ProtoOASubscribeLiveTrendbarReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASubscribeLiveTrendbarReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOASubscribeLiveTrendbarReq.prototype.payloadType = 2135;

  /**
   * ProtoOASubscribeLiveTrendbarReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOASubscribeLiveTrendbarReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASubscribeLiveTrendbarReq period.
   * @member {ProtoOATrendbarPeriod} period
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOASubscribeLiveTrendbarReq.prototype.period = 1;

  /**
   * ProtoOASubscribeLiveTrendbarReq symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOASubscribeLiveTrendbarReq.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOASubscribeLiveTrendbarReq instance using the specified properties.
   * @function create
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {IProtoOASubscribeLiveTrendbarReq=} [properties] Properties to set
   * @returns {ProtoOASubscribeLiveTrendbarReq} ProtoOASubscribeLiveTrendbarReq instance
   */
  ProtoOASubscribeLiveTrendbarReq.create = function create(properties) {
    return new ProtoOASubscribeLiveTrendbarReq(properties);
  };

  /**
   * Encodes the specified ProtoOASubscribeLiveTrendbarReq message. Does not implicitly {@link ProtoOASubscribeLiveTrendbarReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {IProtoOASubscribeLiveTrendbarReq} message ProtoOASubscribeLiveTrendbarReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeLiveTrendbarReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.period);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.symbolId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASubscribeLiveTrendbarReq message, length delimited. Does not implicitly {@link ProtoOASubscribeLiveTrendbarReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {IProtoOASubscribeLiveTrendbarReq} message ProtoOASubscribeLiveTrendbarReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeLiveTrendbarReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASubscribeLiveTrendbarReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASubscribeLiveTrendbarReq} ProtoOASubscribeLiveTrendbarReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeLiveTrendbarReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASubscribeLiveTrendbarReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.period = reader.int32();
          break;
        case 4:
          message.symbolId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("period"))
      throw $util.ProtocolError("missing required 'period'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASubscribeLiveTrendbarReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASubscribeLiveTrendbarReq} ProtoOASubscribeLiveTrendbarReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeLiveTrendbarReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASubscribeLiveTrendbarReq message.
   * @function verify
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASubscribeLiveTrendbarReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    switch (message.period) {
      default:
        return "period: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        break;
    }
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOASubscribeLiveTrendbarReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASubscribeLiveTrendbarReq} ProtoOASubscribeLiveTrendbarReq
   */
  ProtoOASubscribeLiveTrendbarReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASubscribeLiveTrendbarReq) return object;
    var message = new $root.ProtoOASubscribeLiveTrendbarReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    switch (object.period) {
      case "M1":
      case 1:
        message.period = 1;
        break;
      case "M2":
      case 2:
        message.period = 2;
        break;
      case "M3":
      case 3:
        message.period = 3;
        break;
      case "M4":
      case 4:
        message.period = 4;
        break;
      case "M5":
      case 5:
        message.period = 5;
        break;
      case "M10":
      case 6:
        message.period = 6;
        break;
      case "M15":
      case 7:
        message.period = 7;
        break;
      case "M30":
      case 8:
        message.period = 8;
        break;
      case "H1":
      case 9:
        message.period = 9;
        break;
      case "H4":
      case 10:
        message.period = 10;
        break;
      case "H12":
      case 11:
        message.period = 11;
        break;
      case "D1":
      case 12:
        message.period = 12;
        break;
      case "W1":
      case 13:
        message.period = 13;
        break;
      case "MN1":
      case 14:
        message.period = 14;
        break;
    }
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASubscribeLiveTrendbarReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @static
   * @param {ProtoOASubscribeLiveTrendbarReq} message ProtoOASubscribeLiveTrendbarReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASubscribeLiveTrendbarReq.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ"
          : 2135;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.period = options.enums === String ? "M1" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.period != null && message.hasOwnProperty("period"))
      object.period =
        options.enums === String
          ? $root.ProtoOATrendbarPeriod[message.period]
          : message.period;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    return object;
  };

  /**
   * Converts this ProtoOASubscribeLiveTrendbarReq to JSON.
   * @function toJSON
   * @memberof ProtoOASubscribeLiveTrendbarReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASubscribeLiveTrendbarReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASubscribeLiveTrendbarReq;
})();

$root.ProtoOAUnsubscribeLiveTrendbarReq = (function() {
  /**
   * Properties of a ProtoOAUnsubscribeLiveTrendbarReq.
   * @exports IProtoOAUnsubscribeLiveTrendbarReq
   * @interface IProtoOAUnsubscribeLiveTrendbarReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAUnsubscribeLiveTrendbarReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAUnsubscribeLiveTrendbarReq ctidTraderAccountId
   * @property {ProtoOATrendbarPeriod} period ProtoOAUnsubscribeLiveTrendbarReq period
   * @property {number|Long} symbolId ProtoOAUnsubscribeLiveTrendbarReq symbolId
   */

  /**
   * Constructs a new ProtoOAUnsubscribeLiveTrendbarReq.
   * @exports ProtoOAUnsubscribeLiveTrendbarReq
   * @classdesc Request for unsubscribing from the live trend bars.
   * @implements IProtoOAUnsubscribeLiveTrendbarReq
   * @constructor
   * @param {IProtoOAUnsubscribeLiveTrendbarReq=} [properties] Properties to set
   */
  function ProtoOAUnsubscribeLiveTrendbarReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAUnsubscribeLiveTrendbarReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOAUnsubscribeLiveTrendbarReq.prototype.payloadType = 2136;

  /**
   * ProtoOAUnsubscribeLiveTrendbarReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOAUnsubscribeLiveTrendbarReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAUnsubscribeLiveTrendbarReq period.
   * @member {ProtoOATrendbarPeriod} period
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOAUnsubscribeLiveTrendbarReq.prototype.period = 1;

  /**
   * ProtoOAUnsubscribeLiveTrendbarReq symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @instance
   */
  ProtoOAUnsubscribeLiveTrendbarReq.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAUnsubscribeLiveTrendbarReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {IProtoOAUnsubscribeLiveTrendbarReq=} [properties] Properties to set
   * @returns {ProtoOAUnsubscribeLiveTrendbarReq} ProtoOAUnsubscribeLiveTrendbarReq instance
   */
  ProtoOAUnsubscribeLiveTrendbarReq.create = function create(properties) {
    return new ProtoOAUnsubscribeLiveTrendbarReq(properties);
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeLiveTrendbarReq message. Does not implicitly {@link ProtoOAUnsubscribeLiveTrendbarReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {IProtoOAUnsubscribeLiveTrendbarReq} message ProtoOAUnsubscribeLiveTrendbarReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeLiveTrendbarReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.period);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.symbolId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeLiveTrendbarReq message, length delimited. Does not implicitly {@link ProtoOAUnsubscribeLiveTrendbarReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {IProtoOAUnsubscribeLiveTrendbarReq} message ProtoOAUnsubscribeLiveTrendbarReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeLiveTrendbarReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAUnsubscribeLiveTrendbarReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAUnsubscribeLiveTrendbarReq} ProtoOAUnsubscribeLiveTrendbarReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeLiveTrendbarReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAUnsubscribeLiveTrendbarReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.period = reader.int32();
          break;
        case 4:
          message.symbolId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("period"))
      throw $util.ProtocolError("missing required 'period'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAUnsubscribeLiveTrendbarReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAUnsubscribeLiveTrendbarReq} ProtoOAUnsubscribeLiveTrendbarReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeLiveTrendbarReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAUnsubscribeLiveTrendbarReq message.
   * @function verify
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAUnsubscribeLiveTrendbarReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    switch (message.period) {
      default:
        return "period: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        break;
    }
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAUnsubscribeLiveTrendbarReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAUnsubscribeLiveTrendbarReq} ProtoOAUnsubscribeLiveTrendbarReq
   */
  ProtoOAUnsubscribeLiveTrendbarReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAUnsubscribeLiveTrendbarReq)
      return object;
    var message = new $root.ProtoOAUnsubscribeLiveTrendbarReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    switch (object.period) {
      case "M1":
      case 1:
        message.period = 1;
        break;
      case "M2":
      case 2:
        message.period = 2;
        break;
      case "M3":
      case 3:
        message.period = 3;
        break;
      case "M4":
      case 4:
        message.period = 4;
        break;
      case "M5":
      case 5:
        message.period = 5;
        break;
      case "M10":
      case 6:
        message.period = 6;
        break;
      case "M15":
      case 7:
        message.period = 7;
        break;
      case "M30":
      case 8:
        message.period = 8;
        break;
      case "H1":
      case 9:
        message.period = 9;
        break;
      case "H4":
      case 10:
        message.period = 10;
        break;
      case "H12":
      case 11:
        message.period = 11;
        break;
      case "D1":
      case 12:
        message.period = 12;
        break;
      case "W1":
      case 13:
        message.period = 13;
        break;
      case "MN1":
      case 14:
        message.period = 14;
        break;
    }
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAUnsubscribeLiveTrendbarReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @static
   * @param {ProtoOAUnsubscribeLiveTrendbarReq} message ProtoOAUnsubscribeLiveTrendbarReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAUnsubscribeLiveTrendbarReq.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ"
          : 2136;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.period = options.enums === String ? "M1" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.period != null && message.hasOwnProperty("period"))
      object.period =
        options.enums === String
          ? $root.ProtoOATrendbarPeriod[message.period]
          : message.period;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    return object;
  };

  /**
   * Converts this ProtoOAUnsubscribeLiveTrendbarReq to JSON.
   * @function toJSON
   * @memberof ProtoOAUnsubscribeLiveTrendbarReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAUnsubscribeLiveTrendbarReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAUnsubscribeLiveTrendbarReq;
})();

$root.ProtoOAGetTrendbarsReq = (function() {
  /**
   * Properties of a ProtoOAGetTrendbarsReq.
   * @exports IProtoOAGetTrendbarsReq
   * @interface IProtoOAGetTrendbarsReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetTrendbarsReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAGetTrendbarsReq ctidTraderAccountId
   * @property {number|Long} fromTimestamp ProtoOAGetTrendbarsReq fromTimestamp
   * @property {number|Long} toTimestamp ProtoOAGetTrendbarsReq toTimestamp
   * @property {ProtoOATrendbarPeriod} period ProtoOAGetTrendbarsReq period
   * @property {number|Long} symbolId ProtoOAGetTrendbarsReq symbolId
   */

  /**
   * Constructs a new ProtoOAGetTrendbarsReq.
   * @exports ProtoOAGetTrendbarsReq
   * @classdesc Request for getting historical trend bars for the symbol.
   * @implements IProtoOAGetTrendbarsReq
   * @constructor
   * @param {IProtoOAGetTrendbarsReq=} [properties] Properties to set
   */
  function ProtoOAGetTrendbarsReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetTrendbarsReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetTrendbarsReq
   * @instance
   */
  ProtoOAGetTrendbarsReq.prototype.payloadType = 2137;

  /**
   * ProtoOAGetTrendbarsReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAGetTrendbarsReq
   * @instance
   */
  ProtoOAGetTrendbarsReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTrendbarsReq fromTimestamp.
   * @member {number|Long} fromTimestamp
   * @memberof ProtoOAGetTrendbarsReq
   * @instance
   */
  ProtoOAGetTrendbarsReq.prototype.fromTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTrendbarsReq toTimestamp.
   * @member {number|Long} toTimestamp
   * @memberof ProtoOAGetTrendbarsReq
   * @instance
   */
  ProtoOAGetTrendbarsReq.prototype.toTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTrendbarsReq period.
   * @member {ProtoOATrendbarPeriod} period
   * @memberof ProtoOAGetTrendbarsReq
   * @instance
   */
  ProtoOAGetTrendbarsReq.prototype.period = 1;

  /**
   * ProtoOAGetTrendbarsReq symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOAGetTrendbarsReq
   * @instance
   */
  ProtoOAGetTrendbarsReq.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAGetTrendbarsReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {IProtoOAGetTrendbarsReq=} [properties] Properties to set
   * @returns {ProtoOAGetTrendbarsReq} ProtoOAGetTrendbarsReq instance
   */
  ProtoOAGetTrendbarsReq.create = function create(properties) {
    return new ProtoOAGetTrendbarsReq(properties);
  };

  /**
   * Encodes the specified ProtoOAGetTrendbarsReq message. Does not implicitly {@link ProtoOAGetTrendbarsReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {IProtoOAGetTrendbarsReq} message ProtoOAGetTrendbarsReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTrendbarsReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.fromTimestamp);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.toTimestamp);
    writer.uint32(/* id 5, wireType 0 =*/ 40).int32(message.period);
    writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.symbolId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetTrendbarsReq message, length delimited. Does not implicitly {@link ProtoOAGetTrendbarsReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {IProtoOAGetTrendbarsReq} message ProtoOAGetTrendbarsReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTrendbarsReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetTrendbarsReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetTrendbarsReq} ProtoOAGetTrendbarsReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTrendbarsReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetTrendbarsReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.fromTimestamp = reader.int64();
          break;
        case 4:
          message.toTimestamp = reader.int64();
          break;
        case 5:
          message.period = reader.int32();
          break;
        case 6:
          message.symbolId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("fromTimestamp"))
      throw $util.ProtocolError("missing required 'fromTimestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("toTimestamp"))
      throw $util.ProtocolError("missing required 'toTimestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("period"))
      throw $util.ProtocolError("missing required 'period'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetTrendbarsReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetTrendbarsReq} ProtoOAGetTrendbarsReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTrendbarsReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetTrendbarsReq message.
   * @function verify
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetTrendbarsReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.fromTimestamp) &&
      !(
        message.fromTimestamp &&
        $util.isInteger(message.fromTimestamp.low) &&
        $util.isInteger(message.fromTimestamp.high)
      )
    )
      return "fromTimestamp: integer|Long expected";
    if (
      !$util.isInteger(message.toTimestamp) &&
      !(
        message.toTimestamp &&
        $util.isInteger(message.toTimestamp.low) &&
        $util.isInteger(message.toTimestamp.high)
      )
    )
      return "toTimestamp: integer|Long expected";
    switch (message.period) {
      default:
        return "period: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        break;
    }
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAGetTrendbarsReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetTrendbarsReq} ProtoOAGetTrendbarsReq
   */
  ProtoOAGetTrendbarsReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAGetTrendbarsReq) return object;
    var message = new $root.ProtoOAGetTrendbarsReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.fromTimestamp != null)
      if ($util.Long)
        (message.fromTimestamp = $util.Long.fromValue(
          object.fromTimestamp
        )).unsigned = false;
      else if (typeof object.fromTimestamp === "string")
        message.fromTimestamp = parseInt(object.fromTimestamp, 10);
      else if (typeof object.fromTimestamp === "number")
        message.fromTimestamp = object.fromTimestamp;
      else if (typeof object.fromTimestamp === "object")
        message.fromTimestamp = new $util.LongBits(
          object.fromTimestamp.low >>> 0,
          object.fromTimestamp.high >>> 0
        ).toNumber();
    if (object.toTimestamp != null)
      if ($util.Long)
        (message.toTimestamp = $util.Long.fromValue(
          object.toTimestamp
        )).unsigned = false;
      else if (typeof object.toTimestamp === "string")
        message.toTimestamp = parseInt(object.toTimestamp, 10);
      else if (typeof object.toTimestamp === "number")
        message.toTimestamp = object.toTimestamp;
      else if (typeof object.toTimestamp === "object")
        message.toTimestamp = new $util.LongBits(
          object.toTimestamp.low >>> 0,
          object.toTimestamp.high >>> 0
        ).toNumber();
    switch (object.period) {
      case "M1":
      case 1:
        message.period = 1;
        break;
      case "M2":
      case 2:
        message.period = 2;
        break;
      case "M3":
      case 3:
        message.period = 3;
        break;
      case "M4":
      case 4:
        message.period = 4;
        break;
      case "M5":
      case 5:
        message.period = 5;
        break;
      case "M10":
      case 6:
        message.period = 6;
        break;
      case "M15":
      case 7:
        message.period = 7;
        break;
      case "M30":
      case 8:
        message.period = 8;
        break;
      case "H1":
      case 9:
        message.period = 9;
        break;
      case "H4":
      case 10:
        message.period = 10;
        break;
      case "H12":
      case 11:
        message.period = 11;
        break;
      case "D1":
      case 12:
        message.period = 12;
        break;
      case "W1":
      case 13:
        message.period = 13;
        break;
      case "MN1":
      case 14:
        message.period = 14;
        break;
    }
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetTrendbarsReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetTrendbarsReq
   * @static
   * @param {ProtoOAGetTrendbarsReq} message ProtoOAGetTrendbarsReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetTrendbarsReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_GET_TRENDBARS_REQ" : 2137;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.fromTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.fromTimestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.toTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.toTimestamp = options.longs === String ? "0" : 0;
      object.period = options.enums === String ? "M1" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (
      message.fromTimestamp != null &&
      message.hasOwnProperty("fromTimestamp")
    )
      if (typeof message.fromTimestamp === "number")
        object.fromTimestamp =
          options.longs === String
            ? String(message.fromTimestamp)
            : message.fromTimestamp;
      else
        object.fromTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.fromTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.fromTimestamp.low >>> 0,
                message.fromTimestamp.high >>> 0
              ).toNumber()
            : message.fromTimestamp;
    if (message.toTimestamp != null && message.hasOwnProperty("toTimestamp"))
      if (typeof message.toTimestamp === "number")
        object.toTimestamp =
          options.longs === String
            ? String(message.toTimestamp)
            : message.toTimestamp;
      else
        object.toTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.toTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.toTimestamp.low >>> 0,
                message.toTimestamp.high >>> 0
              ).toNumber()
            : message.toTimestamp;
    if (message.period != null && message.hasOwnProperty("period"))
      object.period =
        options.enums === String
          ? $root.ProtoOATrendbarPeriod[message.period]
          : message.period;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    return object;
  };

  /**
   * Converts this ProtoOAGetTrendbarsReq to JSON.
   * @function toJSON
   * @memberof ProtoOAGetTrendbarsReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetTrendbarsReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetTrendbarsReq;
})();

$root.ProtoOAGetTrendbarsRes = (function() {
  /**
   * Properties of a ProtoOAGetTrendbarsRes.
   * @exports IProtoOAGetTrendbarsRes
   * @interface IProtoOAGetTrendbarsRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetTrendbarsRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAGetTrendbarsRes ctidTraderAccountId
   * @property {ProtoOATrendbarPeriod} period ProtoOAGetTrendbarsRes period
   * @property {number|Long} timestamp ProtoOAGetTrendbarsRes timestamp
   * @property {Array.<IProtoOATrendbar>|null} [trendbar] ProtoOAGetTrendbarsRes trendbar
   * @property {number|Long|null} [symbolId] ProtoOAGetTrendbarsRes symbolId
   */

  /**
   * Constructs a new ProtoOAGetTrendbarsRes.
   * @exports ProtoOAGetTrendbarsRes
   * @classdesc Response to the ProtoOAGetTrendbarsReq request.
   * @implements IProtoOAGetTrendbarsRes
   * @constructor
   * @param {IProtoOAGetTrendbarsRes=} [properties] Properties to set
   */
  function ProtoOAGetTrendbarsRes(properties) {
    this.trendbar = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetTrendbarsRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetTrendbarsRes
   * @instance
   */
  ProtoOAGetTrendbarsRes.prototype.payloadType = 2138;

  /**
   * ProtoOAGetTrendbarsRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAGetTrendbarsRes
   * @instance
   */
  ProtoOAGetTrendbarsRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTrendbarsRes period.
   * @member {ProtoOATrendbarPeriod} period
   * @memberof ProtoOAGetTrendbarsRes
   * @instance
   */
  ProtoOAGetTrendbarsRes.prototype.period = 1;

  /**
   * ProtoOAGetTrendbarsRes timestamp.
   * @member {number|Long} timestamp
   * @memberof ProtoOAGetTrendbarsRes
   * @instance
   */
  ProtoOAGetTrendbarsRes.prototype.timestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTrendbarsRes trendbar.
   * @member {Array.<IProtoOATrendbar>} trendbar
   * @memberof ProtoOAGetTrendbarsRes
   * @instance
   */
  ProtoOAGetTrendbarsRes.prototype.trendbar = $util.emptyArray;

  /**
   * ProtoOAGetTrendbarsRes symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOAGetTrendbarsRes
   * @instance
   */
  ProtoOAGetTrendbarsRes.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAGetTrendbarsRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {IProtoOAGetTrendbarsRes=} [properties] Properties to set
   * @returns {ProtoOAGetTrendbarsRes} ProtoOAGetTrendbarsRes instance
   */
  ProtoOAGetTrendbarsRes.create = function create(properties) {
    return new ProtoOAGetTrendbarsRes(properties);
  };

  /**
   * Encodes the specified ProtoOAGetTrendbarsRes message. Does not implicitly {@link ProtoOAGetTrendbarsRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {IProtoOAGetTrendbarsRes} message ProtoOAGetTrendbarsRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTrendbarsRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.period);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.timestamp);
    if (message.trendbar != null && message.trendbar.length)
      for (var i = 0; i < message.trendbar.length; ++i)
        $root.ProtoOATrendbar.encode(
          message.trendbar[i],
          writer.uint32(/* id 5, wireType 2 =*/ 42).fork()
        ).ldelim();
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.symbolId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetTrendbarsRes message, length delimited. Does not implicitly {@link ProtoOAGetTrendbarsRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {IProtoOAGetTrendbarsRes} message ProtoOAGetTrendbarsRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTrendbarsRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetTrendbarsRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetTrendbarsRes} ProtoOAGetTrendbarsRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTrendbarsRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetTrendbarsRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.period = reader.int32();
          break;
        case 4:
          message.timestamp = reader.int64();
          break;
        case 5:
          if (!(message.trendbar && message.trendbar.length))
            message.trendbar = [];
          message.trendbar.push(
            $root.ProtoOATrendbar.decode(reader, reader.uint32())
          );
          break;
        case 6:
          message.symbolId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("period"))
      throw $util.ProtocolError("missing required 'period'", {
        instance: message
      });
    if (!message.hasOwnProperty("timestamp"))
      throw $util.ProtocolError("missing required 'timestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetTrendbarsRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetTrendbarsRes} ProtoOAGetTrendbarsRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTrendbarsRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetTrendbarsRes message.
   * @function verify
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetTrendbarsRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    switch (message.period) {
      default:
        return "period: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
        break;
    }
    if (
      !$util.isInteger(message.timestamp) &&
      !(
        message.timestamp &&
        $util.isInteger(message.timestamp.low) &&
        $util.isInteger(message.timestamp.high)
      )
    )
      return "timestamp: integer|Long expected";
    if (message.trendbar != null && message.hasOwnProperty("trendbar")) {
      if (!Array.isArray(message.trendbar)) return "trendbar: array expected";
      for (var i = 0; i < message.trendbar.length; ++i) {
        var error = $root.ProtoOATrendbar.verify(message.trendbar[i]);
        if (error) return "trendbar." + error;
      }
    }
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (
        !$util.isInteger(message.symbolId) &&
        !(
          message.symbolId &&
          $util.isInteger(message.symbolId.low) &&
          $util.isInteger(message.symbolId.high)
        )
      )
        return "symbolId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAGetTrendbarsRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetTrendbarsRes} ProtoOAGetTrendbarsRes
   */
  ProtoOAGetTrendbarsRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAGetTrendbarsRes) return object;
    var message = new $root.ProtoOAGetTrendbarsRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    switch (object.period) {
      case "M1":
      case 1:
        message.period = 1;
        break;
      case "M2":
      case 2:
        message.period = 2;
        break;
      case "M3":
      case 3:
        message.period = 3;
        break;
      case "M4":
      case 4:
        message.period = 4;
        break;
      case "M5":
      case 5:
        message.period = 5;
        break;
      case "M10":
      case 6:
        message.period = 6;
        break;
      case "M15":
      case 7:
        message.period = 7;
        break;
      case "M30":
      case 8:
        message.period = 8;
        break;
      case "H1":
      case 9:
        message.period = 9;
        break;
      case "H4":
      case 10:
        message.period = 10;
        break;
      case "H12":
      case 11:
        message.period = 11;
        break;
      case "D1":
      case 12:
        message.period = 12;
        break;
      case "W1":
      case 13:
        message.period = 13;
        break;
      case "MN1":
      case 14:
        message.period = 14;
        break;
    }
    if (object.timestamp != null)
      if ($util.Long)
        (message.timestamp = $util.Long.fromValue(
          object.timestamp
        )).unsigned = false;
      else if (typeof object.timestamp === "string")
        message.timestamp = parseInt(object.timestamp, 10);
      else if (typeof object.timestamp === "number")
        message.timestamp = object.timestamp;
      else if (typeof object.timestamp === "object")
        message.timestamp = new $util.LongBits(
          object.timestamp.low >>> 0,
          object.timestamp.high >>> 0
        ).toNumber();
    if (object.trendbar) {
      if (!Array.isArray(object.trendbar))
        throw TypeError(".ProtoOAGetTrendbarsRes.trendbar: array expected");
      message.trendbar = [];
      for (var i = 0; i < object.trendbar.length; ++i) {
        if (typeof object.trendbar[i] !== "object")
          throw TypeError(".ProtoOAGetTrendbarsRes.trendbar: object expected");
        message.trendbar[i] = $root.ProtoOATrendbar.fromObject(
          object.trendbar[i]
        );
      }
    }
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetTrendbarsRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetTrendbarsRes
   * @static
   * @param {ProtoOAGetTrendbarsRes} message ProtoOAGetTrendbarsRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetTrendbarsRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.trendbar = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_GET_TRENDBARS_RES" : 2138;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.period = options.enums === String ? "M1" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.timestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.timestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.period != null && message.hasOwnProperty("period"))
      object.period =
        options.enums === String
          ? $root.ProtoOATrendbarPeriod[message.period]
          : message.period;
    if (message.timestamp != null && message.hasOwnProperty("timestamp"))
      if (typeof message.timestamp === "number")
        object.timestamp =
          options.longs === String
            ? String(message.timestamp)
            : message.timestamp;
      else
        object.timestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.timestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.timestamp.low >>> 0,
                message.timestamp.high >>> 0
              ).toNumber()
            : message.timestamp;
    if (message.trendbar && message.trendbar.length) {
      object.trendbar = [];
      for (var j = 0; j < message.trendbar.length; ++j)
        object.trendbar[j] = $root.ProtoOATrendbar.toObject(
          message.trendbar[j],
          options
        );
    }
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    return object;
  };

  /**
   * Converts this ProtoOAGetTrendbarsRes to JSON.
   * @function toJSON
   * @memberof ProtoOAGetTrendbarsRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetTrendbarsRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetTrendbarsRes;
})();

$root.ProtoOAGetTickDataReq = (function() {
  /**
   * Properties of a ProtoOAGetTickDataReq.
   * @exports IProtoOAGetTickDataReq
   * @interface IProtoOAGetTickDataReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetTickDataReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAGetTickDataReq ctidTraderAccountId
   * @property {number|Long} symbolId ProtoOAGetTickDataReq symbolId
   * @property {ProtoOAQuoteType} type ProtoOAGetTickDataReq type
   * @property {number|Long} fromTimestamp ProtoOAGetTickDataReq fromTimestamp
   * @property {number|Long} toTimestamp ProtoOAGetTickDataReq toTimestamp
   */

  /**
   * Constructs a new ProtoOAGetTickDataReq.
   * @exports ProtoOAGetTickDataReq
   * @classdesc Request for getting historical tick data for the symbol.
   * @implements IProtoOAGetTickDataReq
   * @constructor
   * @param {IProtoOAGetTickDataReq=} [properties] Properties to set
   */
  function ProtoOAGetTickDataReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetTickDataReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetTickDataReq
   * @instance
   */
  ProtoOAGetTickDataReq.prototype.payloadType = 2145;

  /**
   * ProtoOAGetTickDataReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAGetTickDataReq
   * @instance
   */
  ProtoOAGetTickDataReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTickDataReq symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOAGetTickDataReq
   * @instance
   */
  ProtoOAGetTickDataReq.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTickDataReq type.
   * @member {ProtoOAQuoteType} type
   * @memberof ProtoOAGetTickDataReq
   * @instance
   */
  ProtoOAGetTickDataReq.prototype.type = 1;

  /**
   * ProtoOAGetTickDataReq fromTimestamp.
   * @member {number|Long} fromTimestamp
   * @memberof ProtoOAGetTickDataReq
   * @instance
   */
  ProtoOAGetTickDataReq.prototype.fromTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTickDataReq toTimestamp.
   * @member {number|Long} toTimestamp
   * @memberof ProtoOAGetTickDataReq
   * @instance
   */
  ProtoOAGetTickDataReq.prototype.toTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAGetTickDataReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {IProtoOAGetTickDataReq=} [properties] Properties to set
   * @returns {ProtoOAGetTickDataReq} ProtoOAGetTickDataReq instance
   */
  ProtoOAGetTickDataReq.create = function create(properties) {
    return new ProtoOAGetTickDataReq(properties);
  };

  /**
   * Encodes the specified ProtoOAGetTickDataReq message. Does not implicitly {@link ProtoOAGetTickDataReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {IProtoOAGetTickDataReq} message ProtoOAGetTickDataReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTickDataReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.type);
    writer.uint32(/* id 5, wireType 0 =*/ 40).int64(message.fromTimestamp);
    writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.toTimestamp);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetTickDataReq message, length delimited. Does not implicitly {@link ProtoOAGetTickDataReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {IProtoOAGetTickDataReq} message ProtoOAGetTickDataReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTickDataReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetTickDataReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetTickDataReq} ProtoOAGetTickDataReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTickDataReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetTickDataReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.symbolId = reader.int64();
          break;
        case 4:
          message.type = reader.int32();
          break;
        case 5:
          message.fromTimestamp = reader.int64();
          break;
        case 6:
          message.toTimestamp = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    if (!message.hasOwnProperty("type"))
      throw $util.ProtocolError("missing required 'type'", {
        instance: message
      });
    if (!message.hasOwnProperty("fromTimestamp"))
      throw $util.ProtocolError("missing required 'fromTimestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("toTimestamp"))
      throw $util.ProtocolError("missing required 'toTimestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetTickDataReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetTickDataReq} ProtoOAGetTickDataReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTickDataReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetTickDataReq message.
   * @function verify
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetTickDataReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    switch (message.type) {
      default:
        return "type: enum value expected";
      case 1:
      case 2:
        break;
    }
    if (
      !$util.isInteger(message.fromTimestamp) &&
      !(
        message.fromTimestamp &&
        $util.isInteger(message.fromTimestamp.low) &&
        $util.isInteger(message.fromTimestamp.high)
      )
    )
      return "fromTimestamp: integer|Long expected";
    if (
      !$util.isInteger(message.toTimestamp) &&
      !(
        message.toTimestamp &&
        $util.isInteger(message.toTimestamp.low) &&
        $util.isInteger(message.toTimestamp.high)
      )
    )
      return "toTimestamp: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAGetTickDataReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetTickDataReq} ProtoOAGetTickDataReq
   */
  ProtoOAGetTickDataReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAGetTickDataReq) return object;
    var message = new $root.ProtoOAGetTickDataReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    switch (object.type) {
      case "BID":
      case 1:
        message.type = 1;
        break;
      case "ASK":
      case 2:
        message.type = 2;
        break;
    }
    if (object.fromTimestamp != null)
      if ($util.Long)
        (message.fromTimestamp = $util.Long.fromValue(
          object.fromTimestamp
        )).unsigned = false;
      else if (typeof object.fromTimestamp === "string")
        message.fromTimestamp = parseInt(object.fromTimestamp, 10);
      else if (typeof object.fromTimestamp === "number")
        message.fromTimestamp = object.fromTimestamp;
      else if (typeof object.fromTimestamp === "object")
        message.fromTimestamp = new $util.LongBits(
          object.fromTimestamp.low >>> 0,
          object.fromTimestamp.high >>> 0
        ).toNumber();
    if (object.toTimestamp != null)
      if ($util.Long)
        (message.toTimestamp = $util.Long.fromValue(
          object.toTimestamp
        )).unsigned = false;
      else if (typeof object.toTimestamp === "string")
        message.toTimestamp = parseInt(object.toTimestamp, 10);
      else if (typeof object.toTimestamp === "number")
        message.toTimestamp = object.toTimestamp;
      else if (typeof object.toTimestamp === "object")
        message.toTimestamp = new $util.LongBits(
          object.toTimestamp.low >>> 0,
          object.toTimestamp.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetTickDataReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetTickDataReq
   * @static
   * @param {ProtoOAGetTickDataReq} message ProtoOAGetTickDataReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetTickDataReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_GET_TICKDATA_REQ" : 2145;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
      object.type = options.enums === String ? "BID" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.fromTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.fromTimestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.toTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.toTimestamp = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (message.type != null && message.hasOwnProperty("type"))
      object.type =
        options.enums === String
          ? $root.ProtoOAQuoteType[message.type]
          : message.type;
    if (
      message.fromTimestamp != null &&
      message.hasOwnProperty("fromTimestamp")
    )
      if (typeof message.fromTimestamp === "number")
        object.fromTimestamp =
          options.longs === String
            ? String(message.fromTimestamp)
            : message.fromTimestamp;
      else
        object.fromTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.fromTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.fromTimestamp.low >>> 0,
                message.fromTimestamp.high >>> 0
              ).toNumber()
            : message.fromTimestamp;
    if (message.toTimestamp != null && message.hasOwnProperty("toTimestamp"))
      if (typeof message.toTimestamp === "number")
        object.toTimestamp =
          options.longs === String
            ? String(message.toTimestamp)
            : message.toTimestamp;
      else
        object.toTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.toTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.toTimestamp.low >>> 0,
                message.toTimestamp.high >>> 0
              ).toNumber()
            : message.toTimestamp;
    return object;
  };

  /**
   * Converts this ProtoOAGetTickDataReq to JSON.
   * @function toJSON
   * @memberof ProtoOAGetTickDataReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetTickDataReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetTickDataReq;
})();

$root.ProtoOAGetTickDataRes = (function() {
  /**
   * Properties of a ProtoOAGetTickDataRes.
   * @exports IProtoOAGetTickDataRes
   * @interface IProtoOAGetTickDataRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetTickDataRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAGetTickDataRes ctidTraderAccountId
   * @property {Array.<IProtoOATickData>|null} [tickData] ProtoOAGetTickDataRes tickData
   * @property {boolean} hasMore ProtoOAGetTickDataRes hasMore
   */

  /**
   * Constructs a new ProtoOAGetTickDataRes.
   * @exports ProtoOAGetTickDataRes
   * @classdesc Response to the ProtoOAGetTickDataReq request.
   * @implements IProtoOAGetTickDataRes
   * @constructor
   * @param {IProtoOAGetTickDataRes=} [properties] Properties to set
   */
  function ProtoOAGetTickDataRes(properties) {
    this.tickData = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetTickDataRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetTickDataRes
   * @instance
   */
  ProtoOAGetTickDataRes.prototype.payloadType = 2146;

  /**
   * ProtoOAGetTickDataRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAGetTickDataRes
   * @instance
   */
  ProtoOAGetTickDataRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAGetTickDataRes tickData.
   * @member {Array.<IProtoOATickData>} tickData
   * @memberof ProtoOAGetTickDataRes
   * @instance
   */
  ProtoOAGetTickDataRes.prototype.tickData = $util.emptyArray;

  /**
   * ProtoOAGetTickDataRes hasMore.
   * @member {boolean} hasMore
   * @memberof ProtoOAGetTickDataRes
   * @instance
   */
  ProtoOAGetTickDataRes.prototype.hasMore = false;

  /**
   * Creates a new ProtoOAGetTickDataRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {IProtoOAGetTickDataRes=} [properties] Properties to set
   * @returns {ProtoOAGetTickDataRes} ProtoOAGetTickDataRes instance
   */
  ProtoOAGetTickDataRes.create = function create(properties) {
    return new ProtoOAGetTickDataRes(properties);
  };

  /**
   * Encodes the specified ProtoOAGetTickDataRes message. Does not implicitly {@link ProtoOAGetTickDataRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {IProtoOAGetTickDataRes} message ProtoOAGetTickDataRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTickDataRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.tickData != null && message.tickData.length)
      for (var i = 0; i < message.tickData.length; ++i)
        $root.ProtoOATickData.encode(
          message.tickData[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    writer.uint32(/* id 4, wireType 0 =*/ 32).bool(message.hasMore);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetTickDataRes message, length delimited. Does not implicitly {@link ProtoOAGetTickDataRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {IProtoOAGetTickDataRes} message ProtoOAGetTickDataRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetTickDataRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetTickDataRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetTickDataRes} ProtoOAGetTickDataRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTickDataRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetTickDataRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.tickData && message.tickData.length))
            message.tickData = [];
          message.tickData.push(
            $root.ProtoOATickData.decode(reader, reader.uint32())
          );
          break;
        case 4:
          message.hasMore = reader.bool();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("hasMore"))
      throw $util.ProtocolError("missing required 'hasMore'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetTickDataRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetTickDataRes} ProtoOAGetTickDataRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetTickDataRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetTickDataRes message.
   * @function verify
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetTickDataRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.tickData != null && message.hasOwnProperty("tickData")) {
      if (!Array.isArray(message.tickData)) return "tickData: array expected";
      for (var i = 0; i < message.tickData.length; ++i) {
        var error = $root.ProtoOATickData.verify(message.tickData[i]);
        if (error) return "tickData." + error;
      }
    }
    if (typeof message.hasMore !== "boolean")
      return "hasMore: boolean expected";
    return null;
  };

  /**
   * Creates a ProtoOAGetTickDataRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetTickDataRes} ProtoOAGetTickDataRes
   */
  ProtoOAGetTickDataRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAGetTickDataRes) return object;
    var message = new $root.ProtoOAGetTickDataRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.tickData) {
      if (!Array.isArray(object.tickData))
        throw TypeError(".ProtoOAGetTickDataRes.tickData: array expected");
      message.tickData = [];
      for (var i = 0; i < object.tickData.length; ++i) {
        if (typeof object.tickData[i] !== "object")
          throw TypeError(".ProtoOAGetTickDataRes.tickData: object expected");
        message.tickData[i] = $root.ProtoOATickData.fromObject(
          object.tickData[i]
        );
      }
    }
    if (object.hasMore != null) message.hasMore = Boolean(object.hasMore);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetTickDataRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetTickDataRes
   * @static
   * @param {ProtoOAGetTickDataRes} message ProtoOAGetTickDataRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetTickDataRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.tickData = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_GET_TICKDATA_RES" : 2146;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.hasMore = false;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.tickData && message.tickData.length) {
      object.tickData = [];
      for (var j = 0; j < message.tickData.length; ++j)
        object.tickData[j] = $root.ProtoOATickData.toObject(
          message.tickData[j],
          options
        );
    }
    if (message.hasMore != null && message.hasOwnProperty("hasMore"))
      object.hasMore = message.hasMore;
    return object;
  };

  /**
   * Converts this ProtoOAGetTickDataRes to JSON.
   * @function toJSON
   * @memberof ProtoOAGetTickDataRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetTickDataRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetTickDataRes;
})();

$root.ProtoOAGetCtidProfileByTokenReq = (function() {
  /**
   * Properties of a ProtoOAGetCtidProfileByTokenReq.
   * @exports IProtoOAGetCtidProfileByTokenReq
   * @interface IProtoOAGetCtidProfileByTokenReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetCtidProfileByTokenReq payloadType
   * @property {string} accessToken ProtoOAGetCtidProfileByTokenReq accessToken
   */

  /**
   * Constructs a new ProtoOAGetCtidProfileByTokenReq.
   * @exports ProtoOAGetCtidProfileByTokenReq
   * @classdesc Request for getting details of Trader's profile. Limited due to GDRP requirements.
   * @implements IProtoOAGetCtidProfileByTokenReq
   * @constructor
   * @param {IProtoOAGetCtidProfileByTokenReq=} [properties] Properties to set
   */
  function ProtoOAGetCtidProfileByTokenReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetCtidProfileByTokenReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @instance
   */
  ProtoOAGetCtidProfileByTokenReq.prototype.payloadType = 2151;

  /**
   * ProtoOAGetCtidProfileByTokenReq accessToken.
   * @member {string} accessToken
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @instance
   */
  ProtoOAGetCtidProfileByTokenReq.prototype.accessToken = "";

  /**
   * Creates a new ProtoOAGetCtidProfileByTokenReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {IProtoOAGetCtidProfileByTokenReq=} [properties] Properties to set
   * @returns {ProtoOAGetCtidProfileByTokenReq} ProtoOAGetCtidProfileByTokenReq instance
   */
  ProtoOAGetCtidProfileByTokenReq.create = function create(properties) {
    return new ProtoOAGetCtidProfileByTokenReq(properties);
  };

  /**
   * Encodes the specified ProtoOAGetCtidProfileByTokenReq message. Does not implicitly {@link ProtoOAGetCtidProfileByTokenReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {IProtoOAGetCtidProfileByTokenReq} message ProtoOAGetCtidProfileByTokenReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetCtidProfileByTokenReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.accessToken);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetCtidProfileByTokenReq message, length delimited. Does not implicitly {@link ProtoOAGetCtidProfileByTokenReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {IProtoOAGetCtidProfileByTokenReq} message ProtoOAGetCtidProfileByTokenReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetCtidProfileByTokenReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetCtidProfileByTokenReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetCtidProfileByTokenReq} ProtoOAGetCtidProfileByTokenReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetCtidProfileByTokenReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetCtidProfileByTokenReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.accessToken = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("accessToken"))
      throw $util.ProtocolError("missing required 'accessToken'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetCtidProfileByTokenReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetCtidProfileByTokenReq} ProtoOAGetCtidProfileByTokenReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetCtidProfileByTokenReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetCtidProfileByTokenReq message.
   * @function verify
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetCtidProfileByTokenReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (!$util.isString(message.accessToken))
      return "accessToken: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAGetCtidProfileByTokenReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetCtidProfileByTokenReq} ProtoOAGetCtidProfileByTokenReq
   */
  ProtoOAGetCtidProfileByTokenReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAGetCtidProfileByTokenReq) return object;
    var message = new $root.ProtoOAGetCtidProfileByTokenReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.accessToken != null)
      message.accessToken = String(object.accessToken);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetCtidProfileByTokenReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @static
   * @param {ProtoOAGetCtidProfileByTokenReq} message ProtoOAGetCtidProfileByTokenReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetCtidProfileByTokenReq.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ"
          : 2151;
      object.accessToken = "";
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.accessToken != null && message.hasOwnProperty("accessToken"))
      object.accessToken = message.accessToken;
    return object;
  };

  /**
   * Converts this ProtoOAGetCtidProfileByTokenReq to JSON.
   * @function toJSON
   * @memberof ProtoOAGetCtidProfileByTokenReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetCtidProfileByTokenReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetCtidProfileByTokenReq;
})();

$root.ProtoOAGetCtidProfileByTokenRes = (function() {
  /**
   * Properties of a ProtoOAGetCtidProfileByTokenRes.
   * @exports IProtoOAGetCtidProfileByTokenRes
   * @interface IProtoOAGetCtidProfileByTokenRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAGetCtidProfileByTokenRes payloadType
   * @property {IProtoOACtidProfile} profile ProtoOAGetCtidProfileByTokenRes profile
   */

  /**
   * Constructs a new ProtoOAGetCtidProfileByTokenRes.
   * @exports ProtoOAGetCtidProfileByTokenRes
   * @classdesc Response to the ProtoOAGetCtidProfileByTokenReq request.
   * @implements IProtoOAGetCtidProfileByTokenRes
   * @constructor
   * @param {IProtoOAGetCtidProfileByTokenRes=} [properties] Properties to set
   */
  function ProtoOAGetCtidProfileByTokenRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAGetCtidProfileByTokenRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @instance
   */
  ProtoOAGetCtidProfileByTokenRes.prototype.payloadType = 2152;

  /**
   * ProtoOAGetCtidProfileByTokenRes profile.
   * @member {IProtoOACtidProfile} profile
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @instance
   */
  ProtoOAGetCtidProfileByTokenRes.prototype.profile = null;

  /**
   * Creates a new ProtoOAGetCtidProfileByTokenRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {IProtoOAGetCtidProfileByTokenRes=} [properties] Properties to set
   * @returns {ProtoOAGetCtidProfileByTokenRes} ProtoOAGetCtidProfileByTokenRes instance
   */
  ProtoOAGetCtidProfileByTokenRes.create = function create(properties) {
    return new ProtoOAGetCtidProfileByTokenRes(properties);
  };

  /**
   * Encodes the specified ProtoOAGetCtidProfileByTokenRes message. Does not implicitly {@link ProtoOAGetCtidProfileByTokenRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {IProtoOAGetCtidProfileByTokenRes} message ProtoOAGetCtidProfileByTokenRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetCtidProfileByTokenRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    $root.ProtoOACtidProfile.encode(
      message.profile,
      writer.uint32(/* id 2, wireType 2 =*/ 18).fork()
    ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOAGetCtidProfileByTokenRes message, length delimited. Does not implicitly {@link ProtoOAGetCtidProfileByTokenRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {IProtoOAGetCtidProfileByTokenRes} message ProtoOAGetCtidProfileByTokenRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAGetCtidProfileByTokenRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAGetCtidProfileByTokenRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAGetCtidProfileByTokenRes} ProtoOAGetCtidProfileByTokenRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetCtidProfileByTokenRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAGetCtidProfileByTokenRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.profile = $root.ProtoOACtidProfile.decode(
            reader,
            reader.uint32()
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("profile"))
      throw $util.ProtocolError("missing required 'profile'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAGetCtidProfileByTokenRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAGetCtidProfileByTokenRes} ProtoOAGetCtidProfileByTokenRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAGetCtidProfileByTokenRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAGetCtidProfileByTokenRes message.
   * @function verify
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAGetCtidProfileByTokenRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    {
      var error = $root.ProtoOACtidProfile.verify(message.profile);
      if (error) return "profile." + error;
    }
    return null;
  };

  /**
   * Creates a ProtoOAGetCtidProfileByTokenRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAGetCtidProfileByTokenRes} ProtoOAGetCtidProfileByTokenRes
   */
  ProtoOAGetCtidProfileByTokenRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAGetCtidProfileByTokenRes) return object;
    var message = new $root.ProtoOAGetCtidProfileByTokenRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.profile != null) {
      if (typeof object.profile !== "object")
        throw TypeError(
          ".ProtoOAGetCtidProfileByTokenRes.profile: object expected"
        );
      message.profile = $root.ProtoOACtidProfile.fromObject(object.profile);
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAGetCtidProfileByTokenRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @static
   * @param {ProtoOAGetCtidProfileByTokenRes} message ProtoOAGetCtidProfileByTokenRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAGetCtidProfileByTokenRes.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES"
          : 2152;
      object.profile = null;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (message.profile != null && message.hasOwnProperty("profile"))
      object.profile = $root.ProtoOACtidProfile.toObject(
        message.profile,
        options
      );
    return object;
  };

  /**
   * Converts this ProtoOAGetCtidProfileByTokenRes to JSON.
   * @function toJSON
   * @memberof ProtoOAGetCtidProfileByTokenRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAGetCtidProfileByTokenRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAGetCtidProfileByTokenRes;
})();

$root.ProtoOADepthEvent = (function() {
  /**
   * Properties of a ProtoOADepthEvent.
   * @exports IProtoOADepthEvent
   * @interface IProtoOADepthEvent
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOADepthEvent payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOADepthEvent ctidTraderAccountId
   * @property {number|Long} symbolId ProtoOADepthEvent symbolId
   * @property {Array.<IProtoOADepthQuote>|null} [newQuotes] ProtoOADepthEvent newQuotes
   * @property {Array.<number|Long>|null} [deletedQuotes] ProtoOADepthEvent deletedQuotes
   */

  /**
   * Constructs a new ProtoOADepthEvent.
   * @exports ProtoOADepthEvent
   * @classdesc Event that is sent when the structure of depth of market is changed. Requires subscription on the depth of markets for the symbol, see ProtoOASubscribeDepthQuotesReq.
   * @implements IProtoOADepthEvent
   * @constructor
   * @param {IProtoOADepthEvent=} [properties] Properties to set
   */
  function ProtoOADepthEvent(properties) {
    this.newQuotes = [];
    this.deletedQuotes = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOADepthEvent payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOADepthEvent
   * @instance
   */
  ProtoOADepthEvent.prototype.payloadType = 2155;

  /**
   * ProtoOADepthEvent ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOADepthEvent
   * @instance
   */
  ProtoOADepthEvent.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADepthEvent symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOADepthEvent
   * @instance
   */
  ProtoOADepthEvent.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOADepthEvent newQuotes.
   * @member {Array.<IProtoOADepthQuote>} newQuotes
   * @memberof ProtoOADepthEvent
   * @instance
   */
  ProtoOADepthEvent.prototype.newQuotes = $util.emptyArray;

  /**
   * ProtoOADepthEvent deletedQuotes.
   * @member {Array.<number|Long>} deletedQuotes
   * @memberof ProtoOADepthEvent
   * @instance
   */
  ProtoOADepthEvent.prototype.deletedQuotes = $util.emptyArray;

  /**
   * Creates a new ProtoOADepthEvent instance using the specified properties.
   * @function create
   * @memberof ProtoOADepthEvent
   * @static
   * @param {IProtoOADepthEvent=} [properties] Properties to set
   * @returns {ProtoOADepthEvent} ProtoOADepthEvent instance
   */
  ProtoOADepthEvent.create = function create(properties) {
    return new ProtoOADepthEvent(properties);
  };

  /**
   * Encodes the specified ProtoOADepthEvent message. Does not implicitly {@link ProtoOADepthEvent.verify|verify} messages.
   * @function encode
   * @memberof ProtoOADepthEvent
   * @static
   * @param {IProtoOADepthEvent} message ProtoOADepthEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADepthEvent.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).uint64(message.symbolId);
    if (message.newQuotes != null && message.newQuotes.length)
      for (var i = 0; i < message.newQuotes.length; ++i)
        $root.ProtoOADepthQuote.encode(
          message.newQuotes[i],
          writer.uint32(/* id 4, wireType 2 =*/ 34).fork()
        ).ldelim();
    if (message.deletedQuotes != null && message.deletedQuotes.length) {
      writer.uint32(/* id 5, wireType 2 =*/ 42).fork();
      for (var i = 0; i < message.deletedQuotes.length; ++i)
        writer.uint64(message.deletedQuotes[i]);
      writer.ldelim();
    }
    return writer;
  };

  /**
   * Encodes the specified ProtoOADepthEvent message, length delimited. Does not implicitly {@link ProtoOADepthEvent.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOADepthEvent
   * @static
   * @param {IProtoOADepthEvent} message ProtoOADepthEvent message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADepthEvent.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOADepthEvent message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOADepthEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOADepthEvent} ProtoOADepthEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADepthEvent.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOADepthEvent();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          message.symbolId = reader.uint64();
          break;
        case 4:
          if (!(message.newQuotes && message.newQuotes.length))
            message.newQuotes = [];
          message.newQuotes.push(
            $root.ProtoOADepthQuote.decode(reader, reader.uint32())
          );
          break;
        case 5:
          if (!(message.deletedQuotes && message.deletedQuotes.length))
            message.deletedQuotes = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2)
              message.deletedQuotes.push(reader.uint64());
          } else message.deletedQuotes.push(reader.uint64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOADepthEvent message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOADepthEvent
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOADepthEvent} ProtoOADepthEvent
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADepthEvent.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOADepthEvent message.
   * @function verify
   * @memberof ProtoOADepthEvent
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOADepthEvent.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    if (message.newQuotes != null && message.hasOwnProperty("newQuotes")) {
      if (!Array.isArray(message.newQuotes)) return "newQuotes: array expected";
      for (var i = 0; i < message.newQuotes.length; ++i) {
        var error = $root.ProtoOADepthQuote.verify(message.newQuotes[i]);
        if (error) return "newQuotes." + error;
      }
    }
    if (
      message.deletedQuotes != null &&
      message.hasOwnProperty("deletedQuotes")
    ) {
      if (!Array.isArray(message.deletedQuotes))
        return "deletedQuotes: array expected";
      for (var i = 0; i < message.deletedQuotes.length; ++i)
        if (
          !$util.isInteger(message.deletedQuotes[i]) &&
          !(
            message.deletedQuotes[i] &&
            $util.isInteger(message.deletedQuotes[i].low) &&
            $util.isInteger(message.deletedQuotes[i].high)
          )
        )
          return "deletedQuotes: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOADepthEvent message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOADepthEvent
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOADepthEvent} ProtoOADepthEvent
   */
  ProtoOADepthEvent.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOADepthEvent) return object;
    var message = new $root.ProtoOADepthEvent();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = true;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber(true);
    if (object.newQuotes) {
      if (!Array.isArray(object.newQuotes))
        throw TypeError(".ProtoOADepthEvent.newQuotes: array expected");
      message.newQuotes = [];
      for (var i = 0; i < object.newQuotes.length; ++i) {
        if (typeof object.newQuotes[i] !== "object")
          throw TypeError(".ProtoOADepthEvent.newQuotes: object expected");
        message.newQuotes[i] = $root.ProtoOADepthQuote.fromObject(
          object.newQuotes[i]
        );
      }
    }
    if (object.deletedQuotes) {
      if (!Array.isArray(object.deletedQuotes))
        throw TypeError(".ProtoOADepthEvent.deletedQuotes: array expected");
      message.deletedQuotes = [];
      for (var i = 0; i < object.deletedQuotes.length; ++i)
        if ($util.Long)
          (message.deletedQuotes[i] = $util.Long.fromValue(
            object.deletedQuotes[i]
          )).unsigned = true;
        else if (typeof object.deletedQuotes[i] === "string")
          message.deletedQuotes[i] = parseInt(object.deletedQuotes[i], 10);
        else if (typeof object.deletedQuotes[i] === "number")
          message.deletedQuotes[i] = object.deletedQuotes[i];
        else if (typeof object.deletedQuotes[i] === "object")
          message.deletedQuotes[i] = new $util.LongBits(
            object.deletedQuotes[i].low >>> 0,
            object.deletedQuotes[i].high >>> 0
          ).toNumber(true);
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOADepthEvent message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOADepthEvent
   * @static
   * @param {ProtoOADepthEvent} message ProtoOADepthEvent
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOADepthEvent.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) {
      object.newQuotes = [];
      object.deletedQuotes = [];
    }
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_DEPTH_EVENT" : 2155;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber(true)
            : message.symbolId;
    if (message.newQuotes && message.newQuotes.length) {
      object.newQuotes = [];
      for (var j = 0; j < message.newQuotes.length; ++j)
        object.newQuotes[j] = $root.ProtoOADepthQuote.toObject(
          message.newQuotes[j],
          options
        );
    }
    if (message.deletedQuotes && message.deletedQuotes.length) {
      object.deletedQuotes = [];
      for (var j = 0; j < message.deletedQuotes.length; ++j)
        if (typeof message.deletedQuotes[j] === "number")
          object.deletedQuotes[j] =
            options.longs === String
              ? String(message.deletedQuotes[j])
              : message.deletedQuotes[j];
        else
          object.deletedQuotes[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.deletedQuotes[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.deletedQuotes[j].low >>> 0,
                  message.deletedQuotes[j].high >>> 0
                ).toNumber(true)
              : message.deletedQuotes[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOADepthEvent to JSON.
   * @function toJSON
   * @memberof ProtoOADepthEvent
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOADepthEvent.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOADepthEvent;
})();

$root.ProtoOASubscribeDepthQuotesReq = (function() {
  /**
   * Properties of a ProtoOASubscribeDepthQuotesReq.
   * @exports IProtoOASubscribeDepthQuotesReq
   * @interface IProtoOASubscribeDepthQuotesReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASubscribeDepthQuotesReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASubscribeDepthQuotesReq ctidTraderAccountId
   * @property {Array.<number|Long>|null} [symbolId] ProtoOASubscribeDepthQuotesReq symbolId
   */

  /**
   * Constructs a new ProtoOASubscribeDepthQuotesReq.
   * @exports ProtoOASubscribeDepthQuotesReq
   * @classdesc Request for subscribing on depth of market of the specified symbol.
   * @implements IProtoOASubscribeDepthQuotesReq
   * @constructor
   * @param {IProtoOASubscribeDepthQuotesReq=} [properties] Properties to set
   */
  function ProtoOASubscribeDepthQuotesReq(properties) {
    this.symbolId = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASubscribeDepthQuotesReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @instance
   */
  ProtoOASubscribeDepthQuotesReq.prototype.payloadType = 2156;

  /**
   * ProtoOASubscribeDepthQuotesReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @instance
   */
  ProtoOASubscribeDepthQuotesReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASubscribeDepthQuotesReq symbolId.
   * @member {Array.<number|Long>} symbolId
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @instance
   */
  ProtoOASubscribeDepthQuotesReq.prototype.symbolId = $util.emptyArray;

  /**
   * Creates a new ProtoOASubscribeDepthQuotesReq instance using the specified properties.
   * @function create
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {IProtoOASubscribeDepthQuotesReq=} [properties] Properties to set
   * @returns {ProtoOASubscribeDepthQuotesReq} ProtoOASubscribeDepthQuotesReq instance
   */
  ProtoOASubscribeDepthQuotesReq.create = function create(properties) {
    return new ProtoOASubscribeDepthQuotesReq(properties);
  };

  /**
   * Encodes the specified ProtoOASubscribeDepthQuotesReq message. Does not implicitly {@link ProtoOASubscribeDepthQuotesReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {IProtoOASubscribeDepthQuotesReq} message ProtoOASubscribeDepthQuotesReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeDepthQuotesReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbolId != null && message.symbolId.length)
      for (var i = 0; i < message.symbolId.length; ++i)
        writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId[i]);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASubscribeDepthQuotesReq message, length delimited. Does not implicitly {@link ProtoOASubscribeDepthQuotesReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {IProtoOASubscribeDepthQuotesReq} message ProtoOASubscribeDepthQuotesReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeDepthQuotesReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASubscribeDepthQuotesReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASubscribeDepthQuotesReq} ProtoOASubscribeDepthQuotesReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeDepthQuotesReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASubscribeDepthQuotesReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbolId && message.symbolId.length))
            message.symbolId = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) message.symbolId.push(reader.int64());
          } else message.symbolId.push(reader.int64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASubscribeDepthQuotesReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASubscribeDepthQuotesReq} ProtoOASubscribeDepthQuotesReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeDepthQuotesReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASubscribeDepthQuotesReq message.
   * @function verify
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASubscribeDepthQuotesReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbolId != null && message.hasOwnProperty("symbolId")) {
      if (!Array.isArray(message.symbolId)) return "symbolId: array expected";
      for (var i = 0; i < message.symbolId.length; ++i)
        if (
          !$util.isInteger(message.symbolId[i]) &&
          !(
            message.symbolId[i] &&
            $util.isInteger(message.symbolId[i].low) &&
            $util.isInteger(message.symbolId[i].high)
          )
        )
          return "symbolId: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOASubscribeDepthQuotesReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASubscribeDepthQuotesReq} ProtoOASubscribeDepthQuotesReq
   */
  ProtoOASubscribeDepthQuotesReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASubscribeDepthQuotesReq) return object;
    var message = new $root.ProtoOASubscribeDepthQuotesReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId) {
      if (!Array.isArray(object.symbolId))
        throw TypeError(
          ".ProtoOASubscribeDepthQuotesReq.symbolId: array expected"
        );
      message.symbolId = [];
      for (var i = 0; i < object.symbolId.length; ++i)
        if ($util.Long)
          (message.symbolId[i] = $util.Long.fromValue(
            object.symbolId[i]
          )).unsigned = false;
        else if (typeof object.symbolId[i] === "string")
          message.symbolId[i] = parseInt(object.symbolId[i], 10);
        else if (typeof object.symbolId[i] === "number")
          message.symbolId[i] = object.symbolId[i];
        else if (typeof object.symbolId[i] === "object")
          message.symbolId[i] = new $util.LongBits(
            object.symbolId[i].low >>> 0,
            object.symbolId[i].high >>> 0
          ).toNumber();
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASubscribeDepthQuotesReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @static
   * @param {ProtoOASubscribeDepthQuotesReq} message ProtoOASubscribeDepthQuotesReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASubscribeDepthQuotesReq.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbolId = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ" : 2156;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId && message.symbolId.length) {
      object.symbolId = [];
      for (var j = 0; j < message.symbolId.length; ++j)
        if (typeof message.symbolId[j] === "number")
          object.symbolId[j] =
            options.longs === String
              ? String(message.symbolId[j])
              : message.symbolId[j];
        else
          object.symbolId[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.symbolId[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.symbolId[j].low >>> 0,
                  message.symbolId[j].high >>> 0
                ).toNumber()
              : message.symbolId[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOASubscribeDepthQuotesReq to JSON.
   * @function toJSON
   * @memberof ProtoOASubscribeDepthQuotesReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASubscribeDepthQuotesReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASubscribeDepthQuotesReq;
})();

$root.ProtoOASubscribeDepthQuotesRes = (function() {
  /**
   * Properties of a ProtoOASubscribeDepthQuotesRes.
   * @exports IProtoOASubscribeDepthQuotesRes
   * @interface IProtoOASubscribeDepthQuotesRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASubscribeDepthQuotesRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASubscribeDepthQuotesRes ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOASubscribeDepthQuotesRes.
   * @exports ProtoOASubscribeDepthQuotesRes
   * @classdesc Response to the ProtoOASubscribeDepthQuotesReq request.
   * @implements IProtoOASubscribeDepthQuotesRes
   * @constructor
   * @param {IProtoOASubscribeDepthQuotesRes=} [properties] Properties to set
   */
  function ProtoOASubscribeDepthQuotesRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASubscribeDepthQuotesRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @instance
   */
  ProtoOASubscribeDepthQuotesRes.prototype.payloadType = 2157;

  /**
   * ProtoOASubscribeDepthQuotesRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @instance
   */
  ProtoOASubscribeDepthQuotesRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOASubscribeDepthQuotesRes instance using the specified properties.
   * @function create
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {IProtoOASubscribeDepthQuotesRes=} [properties] Properties to set
   * @returns {ProtoOASubscribeDepthQuotesRes} ProtoOASubscribeDepthQuotesRes instance
   */
  ProtoOASubscribeDepthQuotesRes.create = function create(properties) {
    return new ProtoOASubscribeDepthQuotesRes(properties);
  };

  /**
   * Encodes the specified ProtoOASubscribeDepthQuotesRes message. Does not implicitly {@link ProtoOASubscribeDepthQuotesRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {IProtoOASubscribeDepthQuotesRes} message ProtoOASubscribeDepthQuotesRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeDepthQuotesRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASubscribeDepthQuotesRes message, length delimited. Does not implicitly {@link ProtoOASubscribeDepthQuotesRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {IProtoOASubscribeDepthQuotesRes} message ProtoOASubscribeDepthQuotesRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASubscribeDepthQuotesRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASubscribeDepthQuotesRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASubscribeDepthQuotesRes} ProtoOASubscribeDepthQuotesRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeDepthQuotesRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASubscribeDepthQuotesRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASubscribeDepthQuotesRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASubscribeDepthQuotesRes} ProtoOASubscribeDepthQuotesRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASubscribeDepthQuotesRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASubscribeDepthQuotesRes message.
   * @function verify
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASubscribeDepthQuotesRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOASubscribeDepthQuotesRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASubscribeDepthQuotesRes} ProtoOASubscribeDepthQuotesRes
   */
  ProtoOASubscribeDepthQuotesRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASubscribeDepthQuotesRes) return object;
    var message = new $root.ProtoOASubscribeDepthQuotesRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASubscribeDepthQuotesRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @static
   * @param {ProtoOASubscribeDepthQuotesRes} message ProtoOASubscribeDepthQuotesRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASubscribeDepthQuotesRes.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES" : 2157;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOASubscribeDepthQuotesRes to JSON.
   * @function toJSON
   * @memberof ProtoOASubscribeDepthQuotesRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASubscribeDepthQuotesRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASubscribeDepthQuotesRes;
})();

$root.ProtoOAUnsubscribeDepthQuotesReq = (function() {
  /**
   * Properties of a ProtoOAUnsubscribeDepthQuotesReq.
   * @exports IProtoOAUnsubscribeDepthQuotesReq
   * @interface IProtoOAUnsubscribeDepthQuotesReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAUnsubscribeDepthQuotesReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAUnsubscribeDepthQuotesReq ctidTraderAccountId
   * @property {Array.<number|Long>|null} [symbolId] ProtoOAUnsubscribeDepthQuotesReq symbolId
   */

  /**
   * Constructs a new ProtoOAUnsubscribeDepthQuotesReq.
   * @exports ProtoOAUnsubscribeDepthQuotesReq
   * @classdesc Request for unsubscribing from the depth of market of the specified symbol.
   * @implements IProtoOAUnsubscribeDepthQuotesReq
   * @constructor
   * @param {IProtoOAUnsubscribeDepthQuotesReq=} [properties] Properties to set
   */
  function ProtoOAUnsubscribeDepthQuotesReq(properties) {
    this.symbolId = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAUnsubscribeDepthQuotesReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @instance
   */
  ProtoOAUnsubscribeDepthQuotesReq.prototype.payloadType = 2158;

  /**
   * ProtoOAUnsubscribeDepthQuotesReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @instance
   */
  ProtoOAUnsubscribeDepthQuotesReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAUnsubscribeDepthQuotesReq symbolId.
   * @member {Array.<number|Long>} symbolId
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @instance
   */
  ProtoOAUnsubscribeDepthQuotesReq.prototype.symbolId = $util.emptyArray;

  /**
   * Creates a new ProtoOAUnsubscribeDepthQuotesReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {IProtoOAUnsubscribeDepthQuotesReq=} [properties] Properties to set
   * @returns {ProtoOAUnsubscribeDepthQuotesReq} ProtoOAUnsubscribeDepthQuotesReq instance
   */
  ProtoOAUnsubscribeDepthQuotesReq.create = function create(properties) {
    return new ProtoOAUnsubscribeDepthQuotesReq(properties);
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeDepthQuotesReq message. Does not implicitly {@link ProtoOAUnsubscribeDepthQuotesReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {IProtoOAUnsubscribeDepthQuotesReq} message ProtoOAUnsubscribeDepthQuotesReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeDepthQuotesReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbolId != null && message.symbolId.length)
      for (var i = 0; i < message.symbolId.length; ++i)
        writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.symbolId[i]);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeDepthQuotesReq message, length delimited. Does not implicitly {@link ProtoOAUnsubscribeDepthQuotesReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {IProtoOAUnsubscribeDepthQuotesReq} message ProtoOAUnsubscribeDepthQuotesReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeDepthQuotesReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAUnsubscribeDepthQuotesReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAUnsubscribeDepthQuotesReq} ProtoOAUnsubscribeDepthQuotesReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeDepthQuotesReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAUnsubscribeDepthQuotesReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbolId && message.symbolId.length))
            message.symbolId = [];
          if ((tag & 7) === 2) {
            var end2 = reader.uint32() + reader.pos;
            while (reader.pos < end2) message.symbolId.push(reader.int64());
          } else message.symbolId.push(reader.int64());
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAUnsubscribeDepthQuotesReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAUnsubscribeDepthQuotesReq} ProtoOAUnsubscribeDepthQuotesReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeDepthQuotesReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAUnsubscribeDepthQuotesReq message.
   * @function verify
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAUnsubscribeDepthQuotesReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.symbolId != null && message.hasOwnProperty("symbolId")) {
      if (!Array.isArray(message.symbolId)) return "symbolId: array expected";
      for (var i = 0; i < message.symbolId.length; ++i)
        if (
          !$util.isInteger(message.symbolId[i]) &&
          !(
            message.symbolId[i] &&
            $util.isInteger(message.symbolId[i].low) &&
            $util.isInteger(message.symbolId[i].high)
          )
        )
          return "symbolId: integer|Long[] expected";
    }
    return null;
  };

  /**
   * Creates a ProtoOAUnsubscribeDepthQuotesReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAUnsubscribeDepthQuotesReq} ProtoOAUnsubscribeDepthQuotesReq
   */
  ProtoOAUnsubscribeDepthQuotesReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAUnsubscribeDepthQuotesReq) return object;
    var message = new $root.ProtoOAUnsubscribeDepthQuotesReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolId) {
      if (!Array.isArray(object.symbolId))
        throw TypeError(
          ".ProtoOAUnsubscribeDepthQuotesReq.symbolId: array expected"
        );
      message.symbolId = [];
      for (var i = 0; i < object.symbolId.length; ++i)
        if ($util.Long)
          (message.symbolId[i] = $util.Long.fromValue(
            object.symbolId[i]
          )).unsigned = false;
        else if (typeof object.symbolId[i] === "string")
          message.symbolId[i] = parseInt(object.symbolId[i], 10);
        else if (typeof object.symbolId[i] === "number")
          message.symbolId[i] = object.symbolId[i];
        else if (typeof object.symbolId[i] === "object")
          message.symbolId[i] = new $util.LongBits(
            object.symbolId[i].low >>> 0,
            object.symbolId[i].high >>> 0
          ).toNumber();
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAUnsubscribeDepthQuotesReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @static
   * @param {ProtoOAUnsubscribeDepthQuotesReq} message ProtoOAUnsubscribeDepthQuotesReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAUnsubscribeDepthQuotesReq.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbolId = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ"
          : 2158;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolId && message.symbolId.length) {
      object.symbolId = [];
      for (var j = 0; j < message.symbolId.length; ++j)
        if (typeof message.symbolId[j] === "number")
          object.symbolId[j] =
            options.longs === String
              ? String(message.symbolId[j])
              : message.symbolId[j];
        else
          object.symbolId[j] =
            options.longs === String
              ? $util.Long.prototype.toString.call(message.symbolId[j])
              : options.longs === Number
              ? new $util.LongBits(
                  message.symbolId[j].low >>> 0,
                  message.symbolId[j].high >>> 0
                ).toNumber()
              : message.symbolId[j];
    }
    return object;
  };

  /**
   * Converts this ProtoOAUnsubscribeDepthQuotesReq to JSON.
   * @function toJSON
   * @memberof ProtoOAUnsubscribeDepthQuotesReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAUnsubscribeDepthQuotesReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAUnsubscribeDepthQuotesReq;
})();

$root.ProtoOAUnsubscribeDepthQuotesRes = (function() {
  /**
   * Properties of a ProtoOAUnsubscribeDepthQuotesRes.
   * @exports IProtoOAUnsubscribeDepthQuotesRes
   * @interface IProtoOAUnsubscribeDepthQuotesRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAUnsubscribeDepthQuotesRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAUnsubscribeDepthQuotesRes ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAUnsubscribeDepthQuotesRes.
   * @exports ProtoOAUnsubscribeDepthQuotesRes
   * @classdesc Response to the ProtoOAUnsubscribeDepthQuotesReq request.
   * @implements IProtoOAUnsubscribeDepthQuotesRes
   * @constructor
   * @param {IProtoOAUnsubscribeDepthQuotesRes=} [properties] Properties to set
   */
  function ProtoOAUnsubscribeDepthQuotesRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAUnsubscribeDepthQuotesRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @instance
   */
  ProtoOAUnsubscribeDepthQuotesRes.prototype.payloadType = 2159;

  /**
   * ProtoOAUnsubscribeDepthQuotesRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @instance
   */
  ProtoOAUnsubscribeDepthQuotesRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAUnsubscribeDepthQuotesRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {IProtoOAUnsubscribeDepthQuotesRes=} [properties] Properties to set
   * @returns {ProtoOAUnsubscribeDepthQuotesRes} ProtoOAUnsubscribeDepthQuotesRes instance
   */
  ProtoOAUnsubscribeDepthQuotesRes.create = function create(properties) {
    return new ProtoOAUnsubscribeDepthQuotesRes(properties);
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeDepthQuotesRes message. Does not implicitly {@link ProtoOAUnsubscribeDepthQuotesRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {IProtoOAUnsubscribeDepthQuotesRes} message ProtoOAUnsubscribeDepthQuotesRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeDepthQuotesRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAUnsubscribeDepthQuotesRes message, length delimited. Does not implicitly {@link ProtoOAUnsubscribeDepthQuotesRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {IProtoOAUnsubscribeDepthQuotesRes} message ProtoOAUnsubscribeDepthQuotesRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAUnsubscribeDepthQuotesRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAUnsubscribeDepthQuotesRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAUnsubscribeDepthQuotesRes} ProtoOAUnsubscribeDepthQuotesRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeDepthQuotesRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAUnsubscribeDepthQuotesRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAUnsubscribeDepthQuotesRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAUnsubscribeDepthQuotesRes} ProtoOAUnsubscribeDepthQuotesRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAUnsubscribeDepthQuotesRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAUnsubscribeDepthQuotesRes message.
   * @function verify
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAUnsubscribeDepthQuotesRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAUnsubscribeDepthQuotesRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAUnsubscribeDepthQuotesRes} ProtoOAUnsubscribeDepthQuotesRes
   */
  ProtoOAUnsubscribeDepthQuotesRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAUnsubscribeDepthQuotesRes) return object;
    var message = new $root.ProtoOAUnsubscribeDepthQuotesRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAUnsubscribeDepthQuotesRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @static
   * @param {ProtoOAUnsubscribeDepthQuotesRes} message ProtoOAUnsubscribeDepthQuotesRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAUnsubscribeDepthQuotesRes.toObject = function toObject(
    message,
    options
  ) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String
          ? "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES"
          : 2159;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAUnsubscribeDepthQuotesRes to JSON.
   * @function toJSON
   * @memberof ProtoOAUnsubscribeDepthQuotesRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAUnsubscribeDepthQuotesRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAUnsubscribeDepthQuotesRes;
})();

$root.ProtoOASymbolCategoryListReq = (function() {
  /**
   * Properties of a ProtoOASymbolCategoryListReq.
   * @exports IProtoOASymbolCategoryListReq
   * @interface IProtoOASymbolCategoryListReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolCategoryListReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolCategoryListReq ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOASymbolCategoryListReq.
   * @exports ProtoOASymbolCategoryListReq
   * @classdesc Request for a list of symbol categories available for a trading account.
   * @implements IProtoOASymbolCategoryListReq
   * @constructor
   * @param {IProtoOASymbolCategoryListReq=} [properties] Properties to set
   */
  function ProtoOASymbolCategoryListReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolCategoryListReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolCategoryListReq
   * @instance
   */
  ProtoOASymbolCategoryListReq.prototype.payloadType = 2160;

  /**
   * ProtoOASymbolCategoryListReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolCategoryListReq
   * @instance
   */
  ProtoOASymbolCategoryListReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOASymbolCategoryListReq instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {IProtoOASymbolCategoryListReq=} [properties] Properties to set
   * @returns {ProtoOASymbolCategoryListReq} ProtoOASymbolCategoryListReq instance
   */
  ProtoOASymbolCategoryListReq.create = function create(properties) {
    return new ProtoOASymbolCategoryListReq(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolCategoryListReq message. Does not implicitly {@link ProtoOASymbolCategoryListReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {IProtoOASymbolCategoryListReq} message ProtoOASymbolCategoryListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolCategoryListReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolCategoryListReq message, length delimited. Does not implicitly {@link ProtoOASymbolCategoryListReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {IProtoOASymbolCategoryListReq} message ProtoOASymbolCategoryListReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolCategoryListReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolCategoryListReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolCategoryListReq} ProtoOASymbolCategoryListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolCategoryListReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolCategoryListReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolCategoryListReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolCategoryListReq} ProtoOASymbolCategoryListReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolCategoryListReq.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolCategoryListReq message.
   * @function verify
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolCategoryListReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOASymbolCategoryListReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolCategoryListReq} ProtoOASymbolCategoryListReq
   */
  ProtoOASymbolCategoryListReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolCategoryListReq) return object;
    var message = new $root.ProtoOASymbolCategoryListReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolCategoryListReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolCategoryListReq
   * @static
   * @param {ProtoOASymbolCategoryListReq} message ProtoOASymbolCategoryListReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolCategoryListReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOL_CATEGORY_REQ" : 2160;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOASymbolCategoryListReq to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolCategoryListReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolCategoryListReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolCategoryListReq;
})();

$root.ProtoOASymbolCategoryListRes = (function() {
  /**
   * Properties of a ProtoOASymbolCategoryListRes.
   * @exports IProtoOASymbolCategoryListRes
   * @interface IProtoOASymbolCategoryListRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOASymbolCategoryListRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOASymbolCategoryListRes ctidTraderAccountId
   * @property {Array.<IProtoOASymbolCategory>|null} [symbolCategory] ProtoOASymbolCategoryListRes symbolCategory
   */

  /**
   * Constructs a new ProtoOASymbolCategoryListRes.
   * @exports ProtoOASymbolCategoryListRes
   * @classdesc Response to the ProtoSymbolCategoryListReq request.
   * @implements IProtoOASymbolCategoryListRes
   * @constructor
   * @param {IProtoOASymbolCategoryListRes=} [properties] Properties to set
   */
  function ProtoOASymbolCategoryListRes(properties) {
    this.symbolCategory = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolCategoryListRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOASymbolCategoryListRes
   * @instance
   */
  ProtoOASymbolCategoryListRes.prototype.payloadType = 2161;

  /**
   * ProtoOASymbolCategoryListRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOASymbolCategoryListRes
   * @instance
   */
  ProtoOASymbolCategoryListRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolCategoryListRes symbolCategory.
   * @member {Array.<IProtoOASymbolCategory>} symbolCategory
   * @memberof ProtoOASymbolCategoryListRes
   * @instance
   */
  ProtoOASymbolCategoryListRes.prototype.symbolCategory = $util.emptyArray;

  /**
   * Creates a new ProtoOASymbolCategoryListRes instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {IProtoOASymbolCategoryListRes=} [properties] Properties to set
   * @returns {ProtoOASymbolCategoryListRes} ProtoOASymbolCategoryListRes instance
   */
  ProtoOASymbolCategoryListRes.create = function create(properties) {
    return new ProtoOASymbolCategoryListRes(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolCategoryListRes message. Does not implicitly {@link ProtoOASymbolCategoryListRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {IProtoOASymbolCategoryListRes} message ProtoOASymbolCategoryListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolCategoryListRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    if (message.symbolCategory != null && message.symbolCategory.length)
      for (var i = 0; i < message.symbolCategory.length; ++i)
        $root.ProtoOASymbolCategory.encode(
          message.symbolCategory[i],
          writer.uint32(/* id 3, wireType 2 =*/ 26).fork()
        ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolCategoryListRes message, length delimited. Does not implicitly {@link ProtoOASymbolCategoryListRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {IProtoOASymbolCategoryListRes} message ProtoOASymbolCategoryListRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolCategoryListRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolCategoryListRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolCategoryListRes} ProtoOASymbolCategoryListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolCategoryListRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolCategoryListRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 3:
          if (!(message.symbolCategory && message.symbolCategory.length))
            message.symbolCategory = [];
          message.symbolCategory.push(
            $root.ProtoOASymbolCategory.decode(reader, reader.uint32())
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolCategoryListRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolCategoryListRes} ProtoOASymbolCategoryListRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolCategoryListRes.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolCategoryListRes message.
   * @function verify
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolCategoryListRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      message.symbolCategory != null &&
      message.hasOwnProperty("symbolCategory")
    ) {
      if (!Array.isArray(message.symbolCategory))
        return "symbolCategory: array expected";
      for (var i = 0; i < message.symbolCategory.length; ++i) {
        var error = $root.ProtoOASymbolCategory.verify(
          message.symbolCategory[i]
        );
        if (error) return "symbolCategory." + error;
      }
    }
    return null;
  };

  /**
   * Creates a ProtoOASymbolCategoryListRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolCategoryListRes} ProtoOASymbolCategoryListRes
   */
  ProtoOASymbolCategoryListRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolCategoryListRes) return object;
    var message = new $root.ProtoOASymbolCategoryListRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.symbolCategory) {
      if (!Array.isArray(object.symbolCategory))
        throw TypeError(
          ".ProtoOASymbolCategoryListRes.symbolCategory: array expected"
        );
      message.symbolCategory = [];
      for (var i = 0; i < object.symbolCategory.length; ++i) {
        if (typeof object.symbolCategory[i] !== "object")
          throw TypeError(
            ".ProtoOASymbolCategoryListRes.symbolCategory: object expected"
          );
        message.symbolCategory[i] = $root.ProtoOASymbolCategory.fromObject(
          object.symbolCategory[i]
        );
      }
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolCategoryListRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolCategoryListRes
   * @static
   * @param {ProtoOASymbolCategoryListRes} message ProtoOASymbolCategoryListRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolCategoryListRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.symbolCategory = [];
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_SYMBOL_CATEGORY_RES" : 2161;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.symbolCategory && message.symbolCategory.length) {
      object.symbolCategory = [];
      for (var j = 0; j < message.symbolCategory.length; ++j)
        object.symbolCategory[j] = $root.ProtoOASymbolCategory.toObject(
          message.symbolCategory[j],
          options
        );
    }
    return object;
  };

  /**
   * Converts this ProtoOASymbolCategoryListRes to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolCategoryListRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolCategoryListRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolCategoryListRes;
})();

$root.ProtoOAAccountLogoutReq = (function() {
  /**
   * Properties of a ProtoOAAccountLogoutReq.
   * @exports IProtoOAAccountLogoutReq
   * @interface IProtoOAAccountLogoutReq
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAccountLogoutReq payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAccountLogoutReq ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAAccountLogoutReq.
   * @exports ProtoOAAccountLogoutReq
   * @classdesc Request for logout of  trading account session.
   * @implements IProtoOAAccountLogoutReq
   * @constructor
   * @param {IProtoOAAccountLogoutReq=} [properties] Properties to set
   */
  function ProtoOAAccountLogoutReq(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAccountLogoutReq payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAccountLogoutReq
   * @instance
   */
  ProtoOAAccountLogoutReq.prototype.payloadType = 2162;

  /**
   * ProtoOAAccountLogoutReq ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAccountLogoutReq
   * @instance
   */
  ProtoOAAccountLogoutReq.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAAccountLogoutReq instance using the specified properties.
   * @function create
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {IProtoOAAccountLogoutReq=} [properties] Properties to set
   * @returns {ProtoOAAccountLogoutReq} ProtoOAAccountLogoutReq instance
   */
  ProtoOAAccountLogoutReq.create = function create(properties) {
    return new ProtoOAAccountLogoutReq(properties);
  };

  /**
   * Encodes the specified ProtoOAAccountLogoutReq message. Does not implicitly {@link ProtoOAAccountLogoutReq.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {IProtoOAAccountLogoutReq} message ProtoOAAccountLogoutReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountLogoutReq.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAccountLogoutReq message, length delimited. Does not implicitly {@link ProtoOAAccountLogoutReq.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {IProtoOAAccountLogoutReq} message ProtoOAAccountLogoutReq message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountLogoutReq.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAccountLogoutReq message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAccountLogoutReq} ProtoOAAccountLogoutReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountLogoutReq.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAccountLogoutReq();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAccountLogoutReq message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAccountLogoutReq} ProtoOAAccountLogoutReq
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountLogoutReq.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAccountLogoutReq message.
   * @function verify
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAccountLogoutReq.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAAccountLogoutReq message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAccountLogoutReq} ProtoOAAccountLogoutReq
   */
  ProtoOAAccountLogoutReq.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAccountLogoutReq) return object;
    var message = new $root.ProtoOAAccountLogoutReq();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAccountLogoutReq message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAccountLogoutReq
   * @static
   * @param {ProtoOAAccountLogoutReq} message ProtoOAAccountLogoutReq
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAccountLogoutReq.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ACCOUNT_LOGOUT_REQ" : 2162;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAAccountLogoutReq to JSON.
   * @function toJSON
   * @memberof ProtoOAAccountLogoutReq
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAccountLogoutReq.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAccountLogoutReq;
})();

$root.ProtoOAAccountLogoutRes = (function() {
  /**
   * Properties of a ProtoOAAccountLogoutRes.
   * @exports IProtoOAAccountLogoutRes
   * @interface IProtoOAAccountLogoutRes
   * @property {ProtoOAPayloadType|null} [payloadType] ProtoOAAccountLogoutRes payloadType
   * @property {number|Long} ctidTraderAccountId ProtoOAAccountLogoutRes ctidTraderAccountId
   */

  /**
   * Constructs a new ProtoOAAccountLogoutRes.
   * @exports ProtoOAAccountLogoutRes
   * @classdesc Response to the ProtoOATraderLogoutReq request.
   * @implements IProtoOAAccountLogoutRes
   * @constructor
   * @param {IProtoOAAccountLogoutRes=} [properties] Properties to set
   */
  function ProtoOAAccountLogoutRes(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAccountLogoutRes payloadType.
   * @member {ProtoOAPayloadType} payloadType
   * @memberof ProtoOAAccountLogoutRes
   * @instance
   */
  ProtoOAAccountLogoutRes.prototype.payloadType = 2163;

  /**
   * ProtoOAAccountLogoutRes ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOAAccountLogoutRes
   * @instance
   */
  ProtoOAAccountLogoutRes.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAAccountLogoutRes instance using the specified properties.
   * @function create
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {IProtoOAAccountLogoutRes=} [properties] Properties to set
   * @returns {ProtoOAAccountLogoutRes} ProtoOAAccountLogoutRes instance
   */
  ProtoOAAccountLogoutRes.create = function create(properties) {
    return new ProtoOAAccountLogoutRes(properties);
  };

  /**
   * Encodes the specified ProtoOAAccountLogoutRes message. Does not implicitly {@link ProtoOAAccountLogoutRes.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {IProtoOAAccountLogoutRes} message ProtoOAAccountLogoutRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountLogoutRes.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.payloadType);
    writer
      .uint32(/* id 2, wireType 0 =*/ 16)
      .int64(message.ctidTraderAccountId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAccountLogoutRes message, length delimited. Does not implicitly {@link ProtoOAAccountLogoutRes.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {IProtoOAAccountLogoutRes} message ProtoOAAccountLogoutRes message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAccountLogoutRes.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAccountLogoutRes message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAccountLogoutRes} ProtoOAAccountLogoutRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountLogoutRes.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAccountLogoutRes();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.payloadType = reader.int32();
          break;
        case 2:
          message.ctidTraderAccountId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAccountLogoutRes message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAccountLogoutRes} ProtoOAAccountLogoutRes
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAccountLogoutRes.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAccountLogoutRes message.
   * @function verify
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAccountLogoutRes.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      switch (message.payloadType) {
        default:
          return "payloadType: enum value expected";
        case 2100:
        case 2101:
        case 2102:
        case 2103:
        case 2104:
        case 2105:
        case 2106:
        case 2107:
        case 2108:
        case 2109:
        case 2110:
        case 2111:
        case 2112:
        case 2113:
        case 2114:
        case 2115:
        case 2116:
        case 2117:
        case 2118:
        case 2119:
        case 2120:
        case 2121:
        case 2122:
        case 2123:
        case 2124:
        case 2125:
        case 2126:
        case 2127:
        case 2128:
        case 2129:
        case 2130:
        case 2131:
        case 2132:
        case 2133:
        case 2134:
        case 2135:
        case 2136:
        case 2137:
        case 2138:
        case 2139:
        case 2140:
        case 2141:
        case 2142:
        case 2143:
        case 2144:
        case 2145:
        case 2146:
        case 2147:
        case 2148:
        case 2149:
        case 2150:
        case 2151:
        case 2152:
        case 2153:
        case 2154:
        case 2155:
        case 2156:
        case 2157:
        case 2158:
        case 2159:
        case 2160:
        case 2161:
        case 2162:
        case 2163:
          break;
      }
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAAccountLogoutRes message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAccountLogoutRes} ProtoOAAccountLogoutRes
   */
  ProtoOAAccountLogoutRes.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAccountLogoutRes) return object;
    var message = new $root.ProtoOAAccountLogoutRes();
    switch (object.payloadType) {
      case "PROTO_OA_APPLICATION_AUTH_REQ":
      case 2100:
        message.payloadType = 2100;
        break;
      case "PROTO_OA_APPLICATION_AUTH_RES":
      case 2101:
        message.payloadType = 2101;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_REQ":
      case 2102:
        message.payloadType = 2102;
        break;
      case "PROTO_OA_ACCOUNT_AUTH_RES":
      case 2103:
        message.payloadType = 2103;
        break;
      case "PROTO_OA_VERSION_REQ":
      case 2104:
        message.payloadType = 2104;
        break;
      case "PROTO_OA_VERSION_RES":
      case 2105:
        message.payloadType = 2105;
        break;
      case "PROTO_OA_NEW_ORDER_REQ":
      case 2106:
        message.payloadType = 2106;
        break;
      case "PROTO_OA_TRAILING_SL_CHANGED_EVENT":
      case 2107:
        message.payloadType = 2107;
        break;
      case "PROTO_OA_CANCEL_ORDER_REQ":
      case 2108:
        message.payloadType = 2108;
        break;
      case "PROTO_OA_AMEND_ORDER_REQ":
      case 2109:
        message.payloadType = 2109;
        break;
      case "PROTO_OA_AMEND_POSITION_SLTP_REQ":
      case 2110:
        message.payloadType = 2110;
        break;
      case "PROTO_OA_CLOSE_POSITION_REQ":
      case 2111:
        message.payloadType = 2111;
        break;
      case "PROTO_OA_ASSET_LIST_REQ":
      case 2112:
        message.payloadType = 2112;
        break;
      case "PROTO_OA_ASSET_LIST_RES":
      case 2113:
        message.payloadType = 2113;
        break;
      case "PROTO_OA_SYMBOLS_LIST_REQ":
      case 2114:
        message.payloadType = 2114;
        break;
      case "PROTO_OA_SYMBOLS_LIST_RES":
      case 2115:
        message.payloadType = 2115;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_REQ":
      case 2116:
        message.payloadType = 2116;
        break;
      case "PROTO_OA_SYMBOL_BY_ID_RES":
      case 2117:
        message.payloadType = 2117;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ":
      case 2118:
        message.payloadType = 2118;
        break;
      case "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES":
      case 2119:
        message.payloadType = 2119;
        break;
      case "PROTO_OA_SYMBOL_CHANGED_EVENT":
      case 2120:
        message.payloadType = 2120;
        break;
      case "PROTO_OA_TRADER_REQ":
      case 2121:
        message.payloadType = 2121;
        break;
      case "PROTO_OA_TRADER_RES":
      case 2122:
        message.payloadType = 2122;
        break;
      case "PROTO_OA_TRADER_UPDATE_EVENT":
      case 2123:
        message.payloadType = 2123;
        break;
      case "PROTO_OA_RECONCILE_REQ":
      case 2124:
        message.payloadType = 2124;
        break;
      case "PROTO_OA_RECONCILE_RES":
      case 2125:
        message.payloadType = 2125;
        break;
      case "PROTO_OA_EXECUTION_EVENT":
      case 2126:
        message.payloadType = 2126;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_REQ":
      case 2127:
        message.payloadType = 2127;
        break;
      case "PROTO_OA_SUBSCRIBE_SPOTS_RES":
      case 2128:
        message.payloadType = 2128;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ":
      case 2129:
        message.payloadType = 2129;
        break;
      case "PROTO_OA_UNSUBSCRIBE_SPOTS_RES":
      case 2130:
        message.payloadType = 2130;
        break;
      case "PROTO_OA_SPOT_EVENT":
      case 2131:
        message.payloadType = 2131;
        break;
      case "PROTO_OA_ORDER_ERROR_EVENT":
      case 2132:
        message.payloadType = 2132;
        break;
      case "PROTO_OA_DEAL_LIST_REQ":
      case 2133:
        message.payloadType = 2133;
        break;
      case "PROTO_OA_DEAL_LIST_RES":
      case 2134:
        message.payloadType = 2134;
        break;
      case "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2135:
        message.payloadType = 2135;
        break;
      case "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ":
      case 2136:
        message.payloadType = 2136;
        break;
      case "PROTO_OA_GET_TRENDBARS_REQ":
      case 2137:
        message.payloadType = 2137;
        break;
      case "PROTO_OA_GET_TRENDBARS_RES":
      case 2138:
        message.payloadType = 2138;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_REQ":
      case 2139:
        message.payloadType = 2139;
        break;
      case "PROTO_OA_EXPECTED_MARGIN_RES":
      case 2140:
        message.payloadType = 2140;
        break;
      case "PROTO_OA_MARGIN_CHANGED_EVENT":
      case 2141:
        message.payloadType = 2141;
        break;
      case "PROTO_OA_ERROR_RES":
      case 2142:
        message.payloadType = 2142;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ":
      case 2143:
        message.payloadType = 2143;
        break;
      case "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES":
      case 2144:
        message.payloadType = 2144;
        break;
      case "PROTO_OA_GET_TICKDATA_REQ":
      case 2145:
        message.payloadType = 2145;
        break;
      case "PROTO_OA_GET_TICKDATA_RES":
      case 2146:
        message.payloadType = 2146;
        break;
      case "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT":
      case 2147:
        message.payloadType = 2147;
        break;
      case "PROTO_OA_CLIENT_DISCONNECT_EVENT":
      case 2148:
        message.payloadType = 2148;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ":
      case 2149:
        message.payloadType = 2149;
        break;
      case "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES":
      case 2150:
        message.payloadType = 2150;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ":
      case 2151:
        message.payloadType = 2151;
        break;
      case "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES":
      case 2152:
        message.payloadType = 2152;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_REQ":
      case 2153:
        message.payloadType = 2153;
        break;
      case "PROTO_OA_ASSET_CLASS_LIST_RES":
      case 2154:
        message.payloadType = 2154;
        break;
      case "PROTO_OA_DEPTH_EVENT":
      case 2155:
        message.payloadType = 2155;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2156:
        message.payloadType = 2156;
        break;
      case "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES":
      case 2157:
        message.payloadType = 2157;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ":
      case 2158:
        message.payloadType = 2158;
        break;
      case "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES":
      case 2159:
        message.payloadType = 2159;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_REQ":
      case 2160:
        message.payloadType = 2160;
        break;
      case "PROTO_OA_SYMBOL_CATEGORY_RES":
      case 2161:
        message.payloadType = 2161;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_REQ":
      case 2162:
        message.payloadType = 2162;
        break;
      case "PROTO_OA_ACCOUNT_LOGOUT_RES":
      case 2163:
        message.payloadType = 2163;
        break;
    }
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAccountLogoutRes message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAccountLogoutRes
   * @static
   * @param {ProtoOAAccountLogoutRes} message ProtoOAAccountLogoutRes
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAccountLogoutRes.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.payloadType =
        options.enums === String ? "PROTO_OA_ACCOUNT_LOGOUT_RES" : 2163;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
    }
    if (message.payloadType != null && message.hasOwnProperty("payloadType"))
      object.payloadType =
        options.enums === String
          ? $root.ProtoOAPayloadType[message.payloadType]
          : message.payloadType;
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    return object;
  };

  /**
   * Converts this ProtoOAAccountLogoutRes to JSON.
   * @function toJSON
   * @memberof ProtoOAAccountLogoutRes
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAccountLogoutRes.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAccountLogoutRes;
})();

/**
 * ProtoOAPayloadType enum.
 * @exports ProtoOAPayloadType
 * @enum {string}
 * @property {number} PROTO_OA_APPLICATION_AUTH_REQ=2100 PROTO_OA_APPLICATION_AUTH_REQ value
 * @property {number} PROTO_OA_APPLICATION_AUTH_RES=2101 PROTO_OA_APPLICATION_AUTH_RES value
 * @property {number} PROTO_OA_ACCOUNT_AUTH_REQ=2102 PROTO_OA_ACCOUNT_AUTH_REQ value
 * @property {number} PROTO_OA_ACCOUNT_AUTH_RES=2103 PROTO_OA_ACCOUNT_AUTH_RES value
 * @property {number} PROTO_OA_VERSION_REQ=2104 PROTO_OA_VERSION_REQ value
 * @property {number} PROTO_OA_VERSION_RES=2105 PROTO_OA_VERSION_RES value
 * @property {number} PROTO_OA_NEW_ORDER_REQ=2106 PROTO_OA_NEW_ORDER_REQ value
 * @property {number} PROTO_OA_TRAILING_SL_CHANGED_EVENT=2107 PROTO_OA_TRAILING_SL_CHANGED_EVENT value
 * @property {number} PROTO_OA_CANCEL_ORDER_REQ=2108 PROTO_OA_CANCEL_ORDER_REQ value
 * @property {number} PROTO_OA_AMEND_ORDER_REQ=2109 PROTO_OA_AMEND_ORDER_REQ value
 * @property {number} PROTO_OA_AMEND_POSITION_SLTP_REQ=2110 PROTO_OA_AMEND_POSITION_SLTP_REQ value
 * @property {number} PROTO_OA_CLOSE_POSITION_REQ=2111 PROTO_OA_CLOSE_POSITION_REQ value
 * @property {number} PROTO_OA_ASSET_LIST_REQ=2112 PROTO_OA_ASSET_LIST_REQ value
 * @property {number} PROTO_OA_ASSET_LIST_RES=2113 PROTO_OA_ASSET_LIST_RES value
 * @property {number} PROTO_OA_SYMBOLS_LIST_REQ=2114 PROTO_OA_SYMBOLS_LIST_REQ value
 * @property {number} PROTO_OA_SYMBOLS_LIST_RES=2115 PROTO_OA_SYMBOLS_LIST_RES value
 * @property {number} PROTO_OA_SYMBOL_BY_ID_REQ=2116 PROTO_OA_SYMBOL_BY_ID_REQ value
 * @property {number} PROTO_OA_SYMBOL_BY_ID_RES=2117 PROTO_OA_SYMBOL_BY_ID_RES value
 * @property {number} PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ=2118 PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ value
 * @property {number} PROTO_OA_SYMBOLS_FOR_CONVERSION_RES=2119 PROTO_OA_SYMBOLS_FOR_CONVERSION_RES value
 * @property {number} PROTO_OA_SYMBOL_CHANGED_EVENT=2120 PROTO_OA_SYMBOL_CHANGED_EVENT value
 * @property {number} PROTO_OA_TRADER_REQ=2121 PROTO_OA_TRADER_REQ value
 * @property {number} PROTO_OA_TRADER_RES=2122 PROTO_OA_TRADER_RES value
 * @property {number} PROTO_OA_TRADER_UPDATE_EVENT=2123 PROTO_OA_TRADER_UPDATE_EVENT value
 * @property {number} PROTO_OA_RECONCILE_REQ=2124 PROTO_OA_RECONCILE_REQ value
 * @property {number} PROTO_OA_RECONCILE_RES=2125 PROTO_OA_RECONCILE_RES value
 * @property {number} PROTO_OA_EXECUTION_EVENT=2126 PROTO_OA_EXECUTION_EVENT value
 * @property {number} PROTO_OA_SUBSCRIBE_SPOTS_REQ=2127 PROTO_OA_SUBSCRIBE_SPOTS_REQ value
 * @property {number} PROTO_OA_SUBSCRIBE_SPOTS_RES=2128 PROTO_OA_SUBSCRIBE_SPOTS_RES value
 * @property {number} PROTO_OA_UNSUBSCRIBE_SPOTS_REQ=2129 PROTO_OA_UNSUBSCRIBE_SPOTS_REQ value
 * @property {number} PROTO_OA_UNSUBSCRIBE_SPOTS_RES=2130 PROTO_OA_UNSUBSCRIBE_SPOTS_RES value
 * @property {number} PROTO_OA_SPOT_EVENT=2131 PROTO_OA_SPOT_EVENT value
 * @property {number} PROTO_OA_ORDER_ERROR_EVENT=2132 PROTO_OA_ORDER_ERROR_EVENT value
 * @property {number} PROTO_OA_DEAL_LIST_REQ=2133 PROTO_OA_DEAL_LIST_REQ value
 * @property {number} PROTO_OA_DEAL_LIST_RES=2134 PROTO_OA_DEAL_LIST_RES value
 * @property {number} PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ=2135 PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ value
 * @property {number} PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ=2136 PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ value
 * @property {number} PROTO_OA_GET_TRENDBARS_REQ=2137 PROTO_OA_GET_TRENDBARS_REQ value
 * @property {number} PROTO_OA_GET_TRENDBARS_RES=2138 PROTO_OA_GET_TRENDBARS_RES value
 * @property {number} PROTO_OA_EXPECTED_MARGIN_REQ=2139 PROTO_OA_EXPECTED_MARGIN_REQ value
 * @property {number} PROTO_OA_EXPECTED_MARGIN_RES=2140 PROTO_OA_EXPECTED_MARGIN_RES value
 * @property {number} PROTO_OA_MARGIN_CHANGED_EVENT=2141 PROTO_OA_MARGIN_CHANGED_EVENT value
 * @property {number} PROTO_OA_ERROR_RES=2142 PROTO_OA_ERROR_RES value
 * @property {number} PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ=2143 PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ value
 * @property {number} PROTO_OA_CASH_FLOW_HISTORY_LIST_RES=2144 PROTO_OA_CASH_FLOW_HISTORY_LIST_RES value
 * @property {number} PROTO_OA_GET_TICKDATA_REQ=2145 PROTO_OA_GET_TICKDATA_REQ value
 * @property {number} PROTO_OA_GET_TICKDATA_RES=2146 PROTO_OA_GET_TICKDATA_RES value
 * @property {number} PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT=2147 PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT value
 * @property {number} PROTO_OA_CLIENT_DISCONNECT_EVENT=2148 PROTO_OA_CLIENT_DISCONNECT_EVENT value
 * @property {number} PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ=2149 PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ value
 * @property {number} PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES=2150 PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES value
 * @property {number} PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ=2151 PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ value
 * @property {number} PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES=2152 PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES value
 * @property {number} PROTO_OA_ASSET_CLASS_LIST_REQ=2153 PROTO_OA_ASSET_CLASS_LIST_REQ value
 * @property {number} PROTO_OA_ASSET_CLASS_LIST_RES=2154 PROTO_OA_ASSET_CLASS_LIST_RES value
 * @property {number} PROTO_OA_DEPTH_EVENT=2155 PROTO_OA_DEPTH_EVENT value
 * @property {number} PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ=2156 PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ value
 * @property {number} PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES=2157 PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES value
 * @property {number} PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ=2158 PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ value
 * @property {number} PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES=2159 PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES value
 * @property {number} PROTO_OA_SYMBOL_CATEGORY_REQ=2160 PROTO_OA_SYMBOL_CATEGORY_REQ value
 * @property {number} PROTO_OA_SYMBOL_CATEGORY_RES=2161 PROTO_OA_SYMBOL_CATEGORY_RES value
 * @property {number} PROTO_OA_ACCOUNT_LOGOUT_REQ=2162 PROTO_OA_ACCOUNT_LOGOUT_REQ value
 * @property {number} PROTO_OA_ACCOUNT_LOGOUT_RES=2163 PROTO_OA_ACCOUNT_LOGOUT_RES value
 */
$root.ProtoOAPayloadType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[2100] = "PROTO_OA_APPLICATION_AUTH_REQ")] = 2100;
  values[(valuesById[2101] = "PROTO_OA_APPLICATION_AUTH_RES")] = 2101;
  values[(valuesById[2102] = "PROTO_OA_ACCOUNT_AUTH_REQ")] = 2102;
  values[(valuesById[2103] = "PROTO_OA_ACCOUNT_AUTH_RES")] = 2103;
  values[(valuesById[2104] = "PROTO_OA_VERSION_REQ")] = 2104;
  values[(valuesById[2105] = "PROTO_OA_VERSION_RES")] = 2105;
  values[(valuesById[2106] = "PROTO_OA_NEW_ORDER_REQ")] = 2106;
  values[(valuesById[2107] = "PROTO_OA_TRAILING_SL_CHANGED_EVENT")] = 2107;
  values[(valuesById[2108] = "PROTO_OA_CANCEL_ORDER_REQ")] = 2108;
  values[(valuesById[2109] = "PROTO_OA_AMEND_ORDER_REQ")] = 2109;
  values[(valuesById[2110] = "PROTO_OA_AMEND_POSITION_SLTP_REQ")] = 2110;
  values[(valuesById[2111] = "PROTO_OA_CLOSE_POSITION_REQ")] = 2111;
  values[(valuesById[2112] = "PROTO_OA_ASSET_LIST_REQ")] = 2112;
  values[(valuesById[2113] = "PROTO_OA_ASSET_LIST_RES")] = 2113;
  values[(valuesById[2114] = "PROTO_OA_SYMBOLS_LIST_REQ")] = 2114;
  values[(valuesById[2115] = "PROTO_OA_SYMBOLS_LIST_RES")] = 2115;
  values[(valuesById[2116] = "PROTO_OA_SYMBOL_BY_ID_REQ")] = 2116;
  values[(valuesById[2117] = "PROTO_OA_SYMBOL_BY_ID_RES")] = 2117;
  values[(valuesById[2118] = "PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ")] = 2118;
  values[(valuesById[2119] = "PROTO_OA_SYMBOLS_FOR_CONVERSION_RES")] = 2119;
  values[(valuesById[2120] = "PROTO_OA_SYMBOL_CHANGED_EVENT")] = 2120;
  values[(valuesById[2121] = "PROTO_OA_TRADER_REQ")] = 2121;
  values[(valuesById[2122] = "PROTO_OA_TRADER_RES")] = 2122;
  values[(valuesById[2123] = "PROTO_OA_TRADER_UPDATE_EVENT")] = 2123;
  values[(valuesById[2124] = "PROTO_OA_RECONCILE_REQ")] = 2124;
  values[(valuesById[2125] = "PROTO_OA_RECONCILE_RES")] = 2125;
  values[(valuesById[2126] = "PROTO_OA_EXECUTION_EVENT")] = 2126;
  values[(valuesById[2127] = "PROTO_OA_SUBSCRIBE_SPOTS_REQ")] = 2127;
  values[(valuesById[2128] = "PROTO_OA_SUBSCRIBE_SPOTS_RES")] = 2128;
  values[(valuesById[2129] = "PROTO_OA_UNSUBSCRIBE_SPOTS_REQ")] = 2129;
  values[(valuesById[2130] = "PROTO_OA_UNSUBSCRIBE_SPOTS_RES")] = 2130;
  values[(valuesById[2131] = "PROTO_OA_SPOT_EVENT")] = 2131;
  values[(valuesById[2132] = "PROTO_OA_ORDER_ERROR_EVENT")] = 2132;
  values[(valuesById[2133] = "PROTO_OA_DEAL_LIST_REQ")] = 2133;
  values[(valuesById[2134] = "PROTO_OA_DEAL_LIST_RES")] = 2134;
  values[(valuesById[2135] = "PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ")] = 2135;
  values[(valuesById[2136] = "PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ")] = 2136;
  values[(valuesById[2137] = "PROTO_OA_GET_TRENDBARS_REQ")] = 2137;
  values[(valuesById[2138] = "PROTO_OA_GET_TRENDBARS_RES")] = 2138;
  values[(valuesById[2139] = "PROTO_OA_EXPECTED_MARGIN_REQ")] = 2139;
  values[(valuesById[2140] = "PROTO_OA_EXPECTED_MARGIN_RES")] = 2140;
  values[(valuesById[2141] = "PROTO_OA_MARGIN_CHANGED_EVENT")] = 2141;
  values[(valuesById[2142] = "PROTO_OA_ERROR_RES")] = 2142;
  values[(valuesById[2143] = "PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ")] = 2143;
  values[(valuesById[2144] = "PROTO_OA_CASH_FLOW_HISTORY_LIST_RES")] = 2144;
  values[(valuesById[2145] = "PROTO_OA_GET_TICKDATA_REQ")] = 2145;
  values[(valuesById[2146] = "PROTO_OA_GET_TICKDATA_RES")] = 2146;
  values[
    (valuesById[2147] = "PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT")
  ] = 2147;
  values[(valuesById[2148] = "PROTO_OA_CLIENT_DISCONNECT_EVENT")] = 2148;
  values[
    (valuesById[2149] = "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ")
  ] = 2149;
  values[
    (valuesById[2150] = "PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES")
  ] = 2150;
  values[(valuesById[2151] = "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ")] = 2151;
  values[(valuesById[2152] = "PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES")] = 2152;
  values[(valuesById[2153] = "PROTO_OA_ASSET_CLASS_LIST_REQ")] = 2153;
  values[(valuesById[2154] = "PROTO_OA_ASSET_CLASS_LIST_RES")] = 2154;
  values[(valuesById[2155] = "PROTO_OA_DEPTH_EVENT")] = 2155;
  values[(valuesById[2156] = "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ")] = 2156;
  values[(valuesById[2157] = "PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES")] = 2157;
  values[(valuesById[2158] = "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ")] = 2158;
  values[(valuesById[2159] = "PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES")] = 2159;
  values[(valuesById[2160] = "PROTO_OA_SYMBOL_CATEGORY_REQ")] = 2160;
  values[(valuesById[2161] = "PROTO_OA_SYMBOL_CATEGORY_RES")] = 2161;
  values[(valuesById[2162] = "PROTO_OA_ACCOUNT_LOGOUT_REQ")] = 2162;
  values[(valuesById[2163] = "PROTO_OA_ACCOUNT_LOGOUT_RES")] = 2163;
  return values;
})();

$root.ProtoOAAsset = (function() {
  /**
   * Properties of a ProtoOAAsset.
   * @exports IProtoOAAsset
   * @interface IProtoOAAsset
   * @property {number|Long} assetId ProtoOAAsset assetId
   * @property {string} name ProtoOAAsset name
   * @property {string|null} [displayName] ProtoOAAsset displayName
   */

  /**
   * Constructs a new ProtoOAAsset.
   * @exports ProtoOAAsset
   * @classdesc Asset entity.
   * @implements IProtoOAAsset
   * @constructor
   * @param {IProtoOAAsset=} [properties] Properties to set
   */
  function ProtoOAAsset(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAsset assetId.
   * @member {number|Long} assetId
   * @memberof ProtoOAAsset
   * @instance
   */
  ProtoOAAsset.prototype.assetId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAsset name.
   * @member {string} name
   * @memberof ProtoOAAsset
   * @instance
   */
  ProtoOAAsset.prototype.name = "";

  /**
   * ProtoOAAsset displayName.
   * @member {string} displayName
   * @memberof ProtoOAAsset
   * @instance
   */
  ProtoOAAsset.prototype.displayName = "";

  /**
   * Creates a new ProtoOAAsset instance using the specified properties.
   * @function create
   * @memberof ProtoOAAsset
   * @static
   * @param {IProtoOAAsset=} [properties] Properties to set
   * @returns {ProtoOAAsset} ProtoOAAsset instance
   */
  ProtoOAAsset.create = function create(properties) {
    return new ProtoOAAsset(properties);
  };

  /**
   * Encodes the specified ProtoOAAsset message. Does not implicitly {@link ProtoOAAsset.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAsset
   * @static
   * @param {IProtoOAAsset} message ProtoOAAsset message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAsset.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.assetId);
    writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.name);
    if (message.displayName != null && message.hasOwnProperty("displayName"))
      writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.displayName);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAsset message, length delimited. Does not implicitly {@link ProtoOAAsset.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAsset
   * @static
   * @param {IProtoOAAsset} message ProtoOAAsset message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAsset.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAsset message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAsset
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAsset} ProtoOAAsset
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAsset.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAsset();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.assetId = reader.int64();
          break;
        case 2:
          message.name = reader.string();
          break;
        case 3:
          message.displayName = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("assetId"))
      throw $util.ProtocolError("missing required 'assetId'", {
        instance: message
      });
    if (!message.hasOwnProperty("name"))
      throw $util.ProtocolError("missing required 'name'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAAsset message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAsset
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAsset} ProtoOAAsset
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAsset.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAsset message.
   * @function verify
   * @memberof ProtoOAAsset
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAsset.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.assetId) &&
      !(
        message.assetId &&
        $util.isInteger(message.assetId.low) &&
        $util.isInteger(message.assetId.high)
      )
    )
      return "assetId: integer|Long expected";
    if (!$util.isString(message.name)) return "name: string expected";
    if (message.displayName != null && message.hasOwnProperty("displayName"))
      if (!$util.isString(message.displayName))
        return "displayName: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAAsset message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAsset
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAsset} ProtoOAAsset
   */
  ProtoOAAsset.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAsset) return object;
    var message = new $root.ProtoOAAsset();
    if (object.assetId != null)
      if ($util.Long)
        (message.assetId = $util.Long.fromValue(
          object.assetId
        )).unsigned = false;
      else if (typeof object.assetId === "string")
        message.assetId = parseInt(object.assetId, 10);
      else if (typeof object.assetId === "number")
        message.assetId = object.assetId;
      else if (typeof object.assetId === "object")
        message.assetId = new $util.LongBits(
          object.assetId.low >>> 0,
          object.assetId.high >>> 0
        ).toNumber();
    if (object.name != null) message.name = String(object.name);
    if (object.displayName != null)
      message.displayName = String(object.displayName);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAsset message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAsset
   * @static
   * @param {ProtoOAAsset} message ProtoOAAsset
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAsset.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.assetId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.assetId = options.longs === String ? "0" : 0;
      object.name = "";
      object.displayName = "";
    }
    if (message.assetId != null && message.hasOwnProperty("assetId"))
      if (typeof message.assetId === "number")
        object.assetId =
          options.longs === String ? String(message.assetId) : message.assetId;
      else
        object.assetId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.assetId)
            : options.longs === Number
            ? new $util.LongBits(
                message.assetId.low >>> 0,
                message.assetId.high >>> 0
              ).toNumber()
            : message.assetId;
    if (message.name != null && message.hasOwnProperty("name"))
      object.name = message.name;
    if (message.displayName != null && message.hasOwnProperty("displayName"))
      object.displayName = message.displayName;
    return object;
  };

  /**
   * Converts this ProtoOAAsset to JSON.
   * @function toJSON
   * @memberof ProtoOAAsset
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAsset.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAsset;
})();

$root.ProtoOASymbol = (function() {
  /**
   * Properties of a ProtoOASymbol.
   * @exports IProtoOASymbol
   * @interface IProtoOASymbol
   * @property {number|Long} symbolId ProtoOASymbol symbolId
   * @property {number} digits ProtoOASymbol digits
   * @property {number} pipPosition ProtoOASymbol pipPosition
   * @property {boolean|null} [enableShortSelling] ProtoOASymbol enableShortSelling
   * @property {boolean|null} [guaranteedStopLoss] ProtoOASymbol guaranteedStopLoss
   * @property {ProtoOADayOfWeek|null} [swapRollover3Days] ProtoOASymbol swapRollover3Days
   * @property {number|null} [swapLong] ProtoOASymbol swapLong
   * @property {number|null} [swapShort] ProtoOASymbol swapShort
   * @property {number|Long|null} [maxVolume] ProtoOASymbol maxVolume
   * @property {number|Long|null} [minVolume] ProtoOASymbol minVolume
   * @property {number|Long|null} [stepVolume] ProtoOASymbol stepVolume
   * @property {number|Long|null} [maxExposure] ProtoOASymbol maxExposure
   * @property {Array.<IProtoOAInterval>|null} [schedule] ProtoOASymbol schedule
   * @property {number|Long} commission ProtoOASymbol commission
   * @property {ProtoOACommissionType|null} [commissionType] ProtoOASymbol commissionType
   * @property {number|null} [slDistance] ProtoOASymbol slDistance
   * @property {number|null} [tpDistance] ProtoOASymbol tpDistance
   * @property {number|null} [gslDistance] ProtoOASymbol gslDistance
   * @property {number|Long|null} [gslCharge] ProtoOASymbol gslCharge
   * @property {ProtoOASymbolDistanceType|null} [distanceSetIn] ProtoOASymbol distanceSetIn
   * @property {number|Long|null} [minCommission] ProtoOASymbol minCommission
   * @property {ProtoOAMinCommissionType|null} [minCommissionType] ProtoOASymbol minCommissionType
   * @property {string|null} [minCommissionAsset] ProtoOASymbol minCommissionAsset
   * @property {number|Long|null} [rolloverCommission] ProtoOASymbol rolloverCommission
   * @property {number|null} [skipRolloverDays] ProtoOASymbol skipRolloverDays
   * @property {string|null} [scheduleTimeZone] ProtoOASymbol scheduleTimeZone
   * @property {ProtoOATradingMode|null} [tradingMode] ProtoOASymbol tradingMode
   */

  /**
   * Constructs a new ProtoOASymbol.
   * @exports ProtoOASymbol
   * @classdesc Trading symbol entity.
   * @implements IProtoOASymbol
   * @constructor
   * @param {IProtoOASymbol=} [properties] Properties to set
   */
  function ProtoOASymbol(properties) {
    this.schedule = [];
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbol symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol digits.
   * @member {number} digits
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.digits = 0;

  /**
   * ProtoOASymbol pipPosition.
   * @member {number} pipPosition
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.pipPosition = 0;

  /**
   * ProtoOASymbol enableShortSelling.
   * @member {boolean} enableShortSelling
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.enableShortSelling = false;

  /**
   * ProtoOASymbol guaranteedStopLoss.
   * @member {boolean} guaranteedStopLoss
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.guaranteedStopLoss = false;

  /**
   * ProtoOASymbol swapRollover3Days.
   * @member {ProtoOADayOfWeek} swapRollover3Days
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.swapRollover3Days = 1;

  /**
   * ProtoOASymbol swapLong.
   * @member {number} swapLong
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.swapLong = 0;

  /**
   * ProtoOASymbol swapShort.
   * @member {number} swapShort
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.swapShort = 0;

  /**
   * ProtoOASymbol maxVolume.
   * @member {number|Long} maxVolume
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.maxVolume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol minVolume.
   * @member {number|Long} minVolume
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.minVolume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol stepVolume.
   * @member {number|Long} stepVolume
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.stepVolume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol maxExposure.
   * @member {number|Long} maxExposure
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.maxExposure = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOASymbol schedule.
   * @member {Array.<IProtoOAInterval>} schedule
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.schedule = $util.emptyArray;

  /**
   * ProtoOASymbol commission.
   * @member {number|Long} commission
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.commission = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol commissionType.
   * @member {ProtoOACommissionType} commissionType
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.commissionType = 1;

  /**
   * ProtoOASymbol slDistance.
   * @member {number} slDistance
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.slDistance = 0;

  /**
   * ProtoOASymbol tpDistance.
   * @member {number} tpDistance
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.tpDistance = 0;

  /**
   * ProtoOASymbol gslDistance.
   * @member {number} gslDistance
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.gslDistance = 0;

  /**
   * ProtoOASymbol gslCharge.
   * @member {number|Long} gslCharge
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.gslCharge = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol distanceSetIn.
   * @member {ProtoOASymbolDistanceType} distanceSetIn
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.distanceSetIn = 1;

  /**
   * ProtoOASymbol minCommission.
   * @member {number|Long} minCommission
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.minCommission = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol minCommissionType.
   * @member {ProtoOAMinCommissionType} minCommissionType
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.minCommissionType = 1;

  /**
   * ProtoOASymbol minCommissionAsset.
   * @member {string} minCommissionAsset
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.minCommissionAsset = "USD";

  /**
   * ProtoOASymbol rolloverCommission.
   * @member {number|Long} rolloverCommission
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.rolloverCommission = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbol skipRolloverDays.
   * @member {number} skipRolloverDays
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.skipRolloverDays = 0;

  /**
   * ProtoOASymbol scheduleTimeZone.
   * @member {string} scheduleTimeZone
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.scheduleTimeZone = "";

  /**
   * ProtoOASymbol tradingMode.
   * @member {ProtoOATradingMode} tradingMode
   * @memberof ProtoOASymbol
   * @instance
   */
  ProtoOASymbol.prototype.tradingMode = 0;

  /**
   * Creates a new ProtoOASymbol instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbol
   * @static
   * @param {IProtoOASymbol=} [properties] Properties to set
   * @returns {ProtoOASymbol} ProtoOASymbol instance
   */
  ProtoOASymbol.create = function create(properties) {
    return new ProtoOASymbol(properties);
  };

  /**
   * Encodes the specified ProtoOASymbol message. Does not implicitly {@link ProtoOASymbol.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbol
   * @static
   * @param {IProtoOASymbol} message ProtoOASymbol message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbol.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.symbolId);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int32(message.digits);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.pipPosition);
    if (
      message.enableShortSelling != null &&
      message.hasOwnProperty("enableShortSelling")
    )
      writer
        .uint32(/* id 4, wireType 0 =*/ 32)
        .bool(message.enableShortSelling);
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      writer
        .uint32(/* id 5, wireType 0 =*/ 40)
        .bool(message.guaranteedStopLoss);
    if (
      message.swapRollover3Days != null &&
      message.hasOwnProperty("swapRollover3Days")
    )
      writer
        .uint32(/* id 6, wireType 0 =*/ 48)
        .int32(message.swapRollover3Days);
    if (message.swapLong != null && message.hasOwnProperty("swapLong"))
      writer.uint32(/* id 7, wireType 1 =*/ 57).double(message.swapLong);
    if (message.swapShort != null && message.hasOwnProperty("swapShort"))
      writer.uint32(/* id 8, wireType 1 =*/ 65).double(message.swapShort);
    if (message.maxVolume != null && message.hasOwnProperty("maxVolume"))
      writer.uint32(/* id 9, wireType 0 =*/ 72).int64(message.maxVolume);
    if (message.minVolume != null && message.hasOwnProperty("minVolume"))
      writer.uint32(/* id 10, wireType 0 =*/ 80).int64(message.minVolume);
    if (message.stepVolume != null && message.hasOwnProperty("stepVolume"))
      writer.uint32(/* id 11, wireType 0 =*/ 88).int64(message.stepVolume);
    if (message.maxExposure != null && message.hasOwnProperty("maxExposure"))
      writer.uint32(/* id 12, wireType 0 =*/ 96).uint64(message.maxExposure);
    if (message.schedule != null && message.schedule.length)
      for (var i = 0; i < message.schedule.length; ++i)
        $root.ProtoOAInterval.encode(
          message.schedule[i],
          writer.uint32(/* id 13, wireType 2 =*/ 106).fork()
        ).ldelim();
    writer.uint32(/* id 14, wireType 0 =*/ 112).int64(message.commission);
    if (
      message.commissionType != null &&
      message.hasOwnProperty("commissionType")
    )
      writer.uint32(/* id 15, wireType 0 =*/ 120).int32(message.commissionType);
    if (message.slDistance != null && message.hasOwnProperty("slDistance"))
      writer.uint32(/* id 16, wireType 0 =*/ 128).uint32(message.slDistance);
    if (message.tpDistance != null && message.hasOwnProperty("tpDistance"))
      writer.uint32(/* id 17, wireType 0 =*/ 136).uint32(message.tpDistance);
    if (message.gslDistance != null && message.hasOwnProperty("gslDistance"))
      writer.uint32(/* id 18, wireType 0 =*/ 144).uint32(message.gslDistance);
    if (message.gslCharge != null && message.hasOwnProperty("gslCharge"))
      writer.uint32(/* id 19, wireType 0 =*/ 152).int64(message.gslCharge);
    if (
      message.distanceSetIn != null &&
      message.hasOwnProperty("distanceSetIn")
    )
      writer.uint32(/* id 20, wireType 0 =*/ 160).int32(message.distanceSetIn);
    if (
      message.minCommission != null &&
      message.hasOwnProperty("minCommission")
    )
      writer.uint32(/* id 21, wireType 0 =*/ 168).int64(message.minCommission);
    if (
      message.minCommissionType != null &&
      message.hasOwnProperty("minCommissionType")
    )
      writer
        .uint32(/* id 22, wireType 0 =*/ 176)
        .int32(message.minCommissionType);
    if (
      message.minCommissionAsset != null &&
      message.hasOwnProperty("minCommissionAsset")
    )
      writer
        .uint32(/* id 23, wireType 2 =*/ 186)
        .string(message.minCommissionAsset);
    if (
      message.rolloverCommission != null &&
      message.hasOwnProperty("rolloverCommission")
    )
      writer
        .uint32(/* id 24, wireType 0 =*/ 192)
        .int64(message.rolloverCommission);
    if (
      message.skipRolloverDays != null &&
      message.hasOwnProperty("skipRolloverDays")
    )
      writer
        .uint32(/* id 25, wireType 0 =*/ 200)
        .int32(message.skipRolloverDays);
    if (
      message.scheduleTimeZone != null &&
      message.hasOwnProperty("scheduleTimeZone")
    )
      writer
        .uint32(/* id 26, wireType 2 =*/ 210)
        .string(message.scheduleTimeZone);
    if (message.tradingMode != null && message.hasOwnProperty("tradingMode"))
      writer.uint32(/* id 27, wireType 0 =*/ 216).int32(message.tradingMode);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbol message, length delimited. Does not implicitly {@link ProtoOASymbol.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbol
   * @static
   * @param {IProtoOASymbol} message ProtoOASymbol message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbol.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbol message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbol
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbol} ProtoOASymbol
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbol.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbol();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.symbolId = reader.int64();
          break;
        case 2:
          message.digits = reader.int32();
          break;
        case 3:
          message.pipPosition = reader.int32();
          break;
        case 4:
          message.enableShortSelling = reader.bool();
          break;
        case 5:
          message.guaranteedStopLoss = reader.bool();
          break;
        case 6:
          message.swapRollover3Days = reader.int32();
          break;
        case 7:
          message.swapLong = reader.double();
          break;
        case 8:
          message.swapShort = reader.double();
          break;
        case 9:
          message.maxVolume = reader.int64();
          break;
        case 10:
          message.minVolume = reader.int64();
          break;
        case 11:
          message.stepVolume = reader.int64();
          break;
        case 12:
          message.maxExposure = reader.uint64();
          break;
        case 13:
          if (!(message.schedule && message.schedule.length))
            message.schedule = [];
          message.schedule.push(
            $root.ProtoOAInterval.decode(reader, reader.uint32())
          );
          break;
        case 14:
          message.commission = reader.int64();
          break;
        case 15:
          message.commissionType = reader.int32();
          break;
        case 16:
          message.slDistance = reader.uint32();
          break;
        case 17:
          message.tpDistance = reader.uint32();
          break;
        case 18:
          message.gslDistance = reader.uint32();
          break;
        case 19:
          message.gslCharge = reader.int64();
          break;
        case 20:
          message.distanceSetIn = reader.int32();
          break;
        case 21:
          message.minCommission = reader.int64();
          break;
        case 22:
          message.minCommissionType = reader.int32();
          break;
        case 23:
          message.minCommissionAsset = reader.string();
          break;
        case 24:
          message.rolloverCommission = reader.int64();
          break;
        case 25:
          message.skipRolloverDays = reader.int32();
          break;
        case 26:
          message.scheduleTimeZone = reader.string();
          break;
        case 27:
          message.tradingMode = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    if (!message.hasOwnProperty("digits"))
      throw $util.ProtocolError("missing required 'digits'", {
        instance: message
      });
    if (!message.hasOwnProperty("pipPosition"))
      throw $util.ProtocolError("missing required 'pipPosition'", {
        instance: message
      });
    if (!message.hasOwnProperty("commission"))
      throw $util.ProtocolError("missing required 'commission'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbol message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbol
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbol} ProtoOASymbol
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbol.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbol message.
   * @function verify
   * @memberof ProtoOASymbol
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbol.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    if (!$util.isInteger(message.digits)) return "digits: integer expected";
    if (!$util.isInteger(message.pipPosition))
      return "pipPosition: integer expected";
    if (
      message.enableShortSelling != null &&
      message.hasOwnProperty("enableShortSelling")
    )
      if (typeof message.enableShortSelling !== "boolean")
        return "enableShortSelling: boolean expected";
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      if (typeof message.guaranteedStopLoss !== "boolean")
        return "guaranteedStopLoss: boolean expected";
    if (
      message.swapRollover3Days != null &&
      message.hasOwnProperty("swapRollover3Days")
    )
      switch (message.swapRollover3Days) {
        default:
          return "swapRollover3Days: enum value expected";
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          break;
      }
    if (message.swapLong != null && message.hasOwnProperty("swapLong"))
      if (typeof message.swapLong !== "number")
        return "swapLong: number expected";
    if (message.swapShort != null && message.hasOwnProperty("swapShort"))
      if (typeof message.swapShort !== "number")
        return "swapShort: number expected";
    if (message.maxVolume != null && message.hasOwnProperty("maxVolume"))
      if (
        !$util.isInteger(message.maxVolume) &&
        !(
          message.maxVolume &&
          $util.isInteger(message.maxVolume.low) &&
          $util.isInteger(message.maxVolume.high)
        )
      )
        return "maxVolume: integer|Long expected";
    if (message.minVolume != null && message.hasOwnProperty("minVolume"))
      if (
        !$util.isInteger(message.minVolume) &&
        !(
          message.minVolume &&
          $util.isInteger(message.minVolume.low) &&
          $util.isInteger(message.minVolume.high)
        )
      )
        return "minVolume: integer|Long expected";
    if (message.stepVolume != null && message.hasOwnProperty("stepVolume"))
      if (
        !$util.isInteger(message.stepVolume) &&
        !(
          message.stepVolume &&
          $util.isInteger(message.stepVolume.low) &&
          $util.isInteger(message.stepVolume.high)
        )
      )
        return "stepVolume: integer|Long expected";
    if (message.maxExposure != null && message.hasOwnProperty("maxExposure"))
      if (
        !$util.isInteger(message.maxExposure) &&
        !(
          message.maxExposure &&
          $util.isInteger(message.maxExposure.low) &&
          $util.isInteger(message.maxExposure.high)
        )
      )
        return "maxExposure: integer|Long expected";
    if (message.schedule != null && message.hasOwnProperty("schedule")) {
      if (!Array.isArray(message.schedule)) return "schedule: array expected";
      for (var i = 0; i < message.schedule.length; ++i) {
        var error = $root.ProtoOAInterval.verify(message.schedule[i]);
        if (error) return "schedule." + error;
      }
    }
    if (
      !$util.isInteger(message.commission) &&
      !(
        message.commission &&
        $util.isInteger(message.commission.low) &&
        $util.isInteger(message.commission.high)
      )
    )
      return "commission: integer|Long expected";
    if (
      message.commissionType != null &&
      message.hasOwnProperty("commissionType")
    )
      switch (message.commissionType) {
        default:
          return "commissionType: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
          break;
      }
    if (message.slDistance != null && message.hasOwnProperty("slDistance"))
      if (!$util.isInteger(message.slDistance))
        return "slDistance: integer expected";
    if (message.tpDistance != null && message.hasOwnProperty("tpDistance"))
      if (!$util.isInteger(message.tpDistance))
        return "tpDistance: integer expected";
    if (message.gslDistance != null && message.hasOwnProperty("gslDistance"))
      if (!$util.isInteger(message.gslDistance))
        return "gslDistance: integer expected";
    if (message.gslCharge != null && message.hasOwnProperty("gslCharge"))
      if (
        !$util.isInteger(message.gslCharge) &&
        !(
          message.gslCharge &&
          $util.isInteger(message.gslCharge.low) &&
          $util.isInteger(message.gslCharge.high)
        )
      )
        return "gslCharge: integer|Long expected";
    if (
      message.distanceSetIn != null &&
      message.hasOwnProperty("distanceSetIn")
    )
      switch (message.distanceSetIn) {
        default:
          return "distanceSetIn: enum value expected";
        case 1:
        case 2:
          break;
      }
    if (
      message.minCommission != null &&
      message.hasOwnProperty("minCommission")
    )
      if (
        !$util.isInteger(message.minCommission) &&
        !(
          message.minCommission &&
          $util.isInteger(message.minCommission.low) &&
          $util.isInteger(message.minCommission.high)
        )
      )
        return "minCommission: integer|Long expected";
    if (
      message.minCommissionType != null &&
      message.hasOwnProperty("minCommissionType")
    )
      switch (message.minCommissionType) {
        default:
          return "minCommissionType: enum value expected";
        case 1:
        case 2:
          break;
      }
    if (
      message.minCommissionAsset != null &&
      message.hasOwnProperty("minCommissionAsset")
    )
      if (!$util.isString(message.minCommissionAsset))
        return "minCommissionAsset: string expected";
    if (
      message.rolloverCommission != null &&
      message.hasOwnProperty("rolloverCommission")
    )
      if (
        !$util.isInteger(message.rolloverCommission) &&
        !(
          message.rolloverCommission &&
          $util.isInteger(message.rolloverCommission.low) &&
          $util.isInteger(message.rolloverCommission.high)
        )
      )
        return "rolloverCommission: integer|Long expected";
    if (
      message.skipRolloverDays != null &&
      message.hasOwnProperty("skipRolloverDays")
    )
      if (!$util.isInteger(message.skipRolloverDays))
        return "skipRolloverDays: integer expected";
    if (
      message.scheduleTimeZone != null &&
      message.hasOwnProperty("scheduleTimeZone")
    )
      if (!$util.isString(message.scheduleTimeZone))
        return "scheduleTimeZone: string expected";
    if (message.tradingMode != null && message.hasOwnProperty("tradingMode"))
      switch (message.tradingMode) {
        default:
          return "tradingMode: enum value expected";
        case 0:
        case 1:
        case 2:
        case 3:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOASymbol message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbol
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbol} ProtoOASymbol
   */
  ProtoOASymbol.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbol) return object;
    var message = new $root.ProtoOASymbol();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    if (object.digits != null) message.digits = object.digits | 0;
    if (object.pipPosition != null)
      message.pipPosition = object.pipPosition | 0;
    if (object.enableShortSelling != null)
      message.enableShortSelling = Boolean(object.enableShortSelling);
    if (object.guaranteedStopLoss != null)
      message.guaranteedStopLoss = Boolean(object.guaranteedStopLoss);
    switch (object.swapRollover3Days) {
      case "NONE":
      case 0:
        message.swapRollover3Days = 0;
        break;
      case "MONDAY":
      case 1:
        message.swapRollover3Days = 1;
        break;
      case "TUESDAY":
      case 2:
        message.swapRollover3Days = 2;
        break;
      case "WEDNESDAY":
      case 3:
        message.swapRollover3Days = 3;
        break;
      case "THURSDAY":
      case 4:
        message.swapRollover3Days = 4;
        break;
      case "FRIDAY":
      case 5:
        message.swapRollover3Days = 5;
        break;
      case "SATURDAY":
      case 6:
        message.swapRollover3Days = 6;
        break;
      case "SUNDAY":
      case 7:
        message.swapRollover3Days = 7;
        break;
    }
    if (object.swapLong != null) message.swapLong = Number(object.swapLong);
    if (object.swapShort != null) message.swapShort = Number(object.swapShort);
    if (object.maxVolume != null)
      if ($util.Long)
        (message.maxVolume = $util.Long.fromValue(
          object.maxVolume
        )).unsigned = false;
      else if (typeof object.maxVolume === "string")
        message.maxVolume = parseInt(object.maxVolume, 10);
      else if (typeof object.maxVolume === "number")
        message.maxVolume = object.maxVolume;
      else if (typeof object.maxVolume === "object")
        message.maxVolume = new $util.LongBits(
          object.maxVolume.low >>> 0,
          object.maxVolume.high >>> 0
        ).toNumber();
    if (object.minVolume != null)
      if ($util.Long)
        (message.minVolume = $util.Long.fromValue(
          object.minVolume
        )).unsigned = false;
      else if (typeof object.minVolume === "string")
        message.minVolume = parseInt(object.minVolume, 10);
      else if (typeof object.minVolume === "number")
        message.minVolume = object.minVolume;
      else if (typeof object.minVolume === "object")
        message.minVolume = new $util.LongBits(
          object.minVolume.low >>> 0,
          object.minVolume.high >>> 0
        ).toNumber();
    if (object.stepVolume != null)
      if ($util.Long)
        (message.stepVolume = $util.Long.fromValue(
          object.stepVolume
        )).unsigned = false;
      else if (typeof object.stepVolume === "string")
        message.stepVolume = parseInt(object.stepVolume, 10);
      else if (typeof object.stepVolume === "number")
        message.stepVolume = object.stepVolume;
      else if (typeof object.stepVolume === "object")
        message.stepVolume = new $util.LongBits(
          object.stepVolume.low >>> 0,
          object.stepVolume.high >>> 0
        ).toNumber();
    if (object.maxExposure != null)
      if ($util.Long)
        (message.maxExposure = $util.Long.fromValue(
          object.maxExposure
        )).unsigned = true;
      else if (typeof object.maxExposure === "string")
        message.maxExposure = parseInt(object.maxExposure, 10);
      else if (typeof object.maxExposure === "number")
        message.maxExposure = object.maxExposure;
      else if (typeof object.maxExposure === "object")
        message.maxExposure = new $util.LongBits(
          object.maxExposure.low >>> 0,
          object.maxExposure.high >>> 0
        ).toNumber(true);
    if (object.schedule) {
      if (!Array.isArray(object.schedule))
        throw TypeError(".ProtoOASymbol.schedule: array expected");
      message.schedule = [];
      for (var i = 0; i < object.schedule.length; ++i) {
        if (typeof object.schedule[i] !== "object")
          throw TypeError(".ProtoOASymbol.schedule: object expected");
        message.schedule[i] = $root.ProtoOAInterval.fromObject(
          object.schedule[i]
        );
      }
    }
    if (object.commission != null)
      if ($util.Long)
        (message.commission = $util.Long.fromValue(
          object.commission
        )).unsigned = false;
      else if (typeof object.commission === "string")
        message.commission = parseInt(object.commission, 10);
      else if (typeof object.commission === "number")
        message.commission = object.commission;
      else if (typeof object.commission === "object")
        message.commission = new $util.LongBits(
          object.commission.low >>> 0,
          object.commission.high >>> 0
        ).toNumber();
    switch (object.commissionType) {
      case "USD_PER_MIL_USD":
      case 1:
        message.commissionType = 1;
        break;
      case "USD_PER_LOT":
      case 2:
        message.commissionType = 2;
        break;
      case "PERCENTAGE":
      case 3:
        message.commissionType = 3;
        break;
      case "QUOTE_CCY_PER_LOT":
      case 4:
        message.commissionType = 4;
        break;
    }
    if (object.slDistance != null) message.slDistance = object.slDistance >>> 0;
    if (object.tpDistance != null) message.tpDistance = object.tpDistance >>> 0;
    if (object.gslDistance != null)
      message.gslDistance = object.gslDistance >>> 0;
    if (object.gslCharge != null)
      if ($util.Long)
        (message.gslCharge = $util.Long.fromValue(
          object.gslCharge
        )).unsigned = false;
      else if (typeof object.gslCharge === "string")
        message.gslCharge = parseInt(object.gslCharge, 10);
      else if (typeof object.gslCharge === "number")
        message.gslCharge = object.gslCharge;
      else if (typeof object.gslCharge === "object")
        message.gslCharge = new $util.LongBits(
          object.gslCharge.low >>> 0,
          object.gslCharge.high >>> 0
        ).toNumber();
    switch (object.distanceSetIn) {
      case "SYMBOL_DISTANCE_IN_POINTS":
      case 1:
        message.distanceSetIn = 1;
        break;
      case "SYMBOL_DISTANCE_IN_PERCENTAGE":
      case 2:
        message.distanceSetIn = 2;
        break;
    }
    if (object.minCommission != null)
      if ($util.Long)
        (message.minCommission = $util.Long.fromValue(
          object.minCommission
        )).unsigned = false;
      else if (typeof object.minCommission === "string")
        message.minCommission = parseInt(object.minCommission, 10);
      else if (typeof object.minCommission === "number")
        message.minCommission = object.minCommission;
      else if (typeof object.minCommission === "object")
        message.minCommission = new $util.LongBits(
          object.minCommission.low >>> 0,
          object.minCommission.high >>> 0
        ).toNumber();
    switch (object.minCommissionType) {
      case "CURRENCY":
      case 1:
        message.minCommissionType = 1;
        break;
      case "QUOTE_CURRENCY":
      case 2:
        message.minCommissionType = 2;
        break;
    }
    if (object.minCommissionAsset != null)
      message.minCommissionAsset = String(object.minCommissionAsset);
    if (object.rolloverCommission != null)
      if ($util.Long)
        (message.rolloverCommission = $util.Long.fromValue(
          object.rolloverCommission
        )).unsigned = false;
      else if (typeof object.rolloverCommission === "string")
        message.rolloverCommission = parseInt(object.rolloverCommission, 10);
      else if (typeof object.rolloverCommission === "number")
        message.rolloverCommission = object.rolloverCommission;
      else if (typeof object.rolloverCommission === "object")
        message.rolloverCommission = new $util.LongBits(
          object.rolloverCommission.low >>> 0,
          object.rolloverCommission.high >>> 0
        ).toNumber();
    if (object.skipRolloverDays != null)
      message.skipRolloverDays = object.skipRolloverDays | 0;
    if (object.scheduleTimeZone != null)
      message.scheduleTimeZone = String(object.scheduleTimeZone);
    switch (object.tradingMode) {
      case "ENABLED":
      case 0:
        message.tradingMode = 0;
        break;
      case "DISABLED_WITHOUT_PENDINGS_EXECUTION":
      case 1:
        message.tradingMode = 1;
        break;
      case "DISABLED_WITH_PENDINGS_EXECUTION":
      case 2:
        message.tradingMode = 2;
        break;
      case "CLOSE_ONLY_MODE":
      case 3:
        message.tradingMode = 3;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbol message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbol
   * @static
   * @param {ProtoOASymbol} message ProtoOASymbol
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbol.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.arrays || options.defaults) object.schedule = [];
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
      object.digits = 0;
      object.pipPosition = 0;
      object.enableShortSelling = false;
      object.guaranteedStopLoss = false;
      object.swapRollover3Days = options.enums === String ? "MONDAY" : 1;
      object.swapLong = 0;
      object.swapShort = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.maxVolume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.maxVolume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.minVolume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.minVolume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.stepVolume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.stepVolume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.maxExposure =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.maxExposure = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.commission =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.commission = options.longs === String ? "0" : 0;
      object.commissionType = options.enums === String ? "USD_PER_MIL_USD" : 1;
      object.slDistance = 0;
      object.tpDistance = 0;
      object.gslDistance = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.gslCharge =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.gslCharge = options.longs === String ? "0" : 0;
      object.distanceSetIn =
        options.enums === String ? "SYMBOL_DISTANCE_IN_POINTS" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.minCommission =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.minCommission = options.longs === String ? "0" : 0;
      object.minCommissionType = options.enums === String ? "CURRENCY" : 1;
      object.minCommissionAsset = "USD";
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.rolloverCommission =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.rolloverCommission = options.longs === String ? "0" : 0;
      object.skipRolloverDays = 0;
      object.scheduleTimeZone = "";
      object.tradingMode = options.enums === String ? "ENABLED" : 0;
    }
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (message.digits != null && message.hasOwnProperty("digits"))
      object.digits = message.digits;
    if (message.pipPosition != null && message.hasOwnProperty("pipPosition"))
      object.pipPosition = message.pipPosition;
    if (
      message.enableShortSelling != null &&
      message.hasOwnProperty("enableShortSelling")
    )
      object.enableShortSelling = message.enableShortSelling;
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      object.guaranteedStopLoss = message.guaranteedStopLoss;
    if (
      message.swapRollover3Days != null &&
      message.hasOwnProperty("swapRollover3Days")
    )
      object.swapRollover3Days =
        options.enums === String
          ? $root.ProtoOADayOfWeek[message.swapRollover3Days]
          : message.swapRollover3Days;
    if (message.swapLong != null && message.hasOwnProperty("swapLong"))
      object.swapLong =
        options.json && !isFinite(message.swapLong)
          ? String(message.swapLong)
          : message.swapLong;
    if (message.swapShort != null && message.hasOwnProperty("swapShort"))
      object.swapShort =
        options.json && !isFinite(message.swapShort)
          ? String(message.swapShort)
          : message.swapShort;
    if (message.maxVolume != null && message.hasOwnProperty("maxVolume"))
      if (typeof message.maxVolume === "number")
        object.maxVolume =
          options.longs === String
            ? String(message.maxVolume)
            : message.maxVolume;
      else
        object.maxVolume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.maxVolume)
            : options.longs === Number
            ? new $util.LongBits(
                message.maxVolume.low >>> 0,
                message.maxVolume.high >>> 0
              ).toNumber()
            : message.maxVolume;
    if (message.minVolume != null && message.hasOwnProperty("minVolume"))
      if (typeof message.minVolume === "number")
        object.minVolume =
          options.longs === String
            ? String(message.minVolume)
            : message.minVolume;
      else
        object.minVolume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.minVolume)
            : options.longs === Number
            ? new $util.LongBits(
                message.minVolume.low >>> 0,
                message.minVolume.high >>> 0
              ).toNumber()
            : message.minVolume;
    if (message.stepVolume != null && message.hasOwnProperty("stepVolume"))
      if (typeof message.stepVolume === "number")
        object.stepVolume =
          options.longs === String
            ? String(message.stepVolume)
            : message.stepVolume;
      else
        object.stepVolume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.stepVolume)
            : options.longs === Number
            ? new $util.LongBits(
                message.stepVolume.low >>> 0,
                message.stepVolume.high >>> 0
              ).toNumber()
            : message.stepVolume;
    if (message.maxExposure != null && message.hasOwnProperty("maxExposure"))
      if (typeof message.maxExposure === "number")
        object.maxExposure =
          options.longs === String
            ? String(message.maxExposure)
            : message.maxExposure;
      else
        object.maxExposure =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.maxExposure)
            : options.longs === Number
            ? new $util.LongBits(
                message.maxExposure.low >>> 0,
                message.maxExposure.high >>> 0
              ).toNumber(true)
            : message.maxExposure;
    if (message.schedule && message.schedule.length) {
      object.schedule = [];
      for (var j = 0; j < message.schedule.length; ++j)
        object.schedule[j] = $root.ProtoOAInterval.toObject(
          message.schedule[j],
          options
        );
    }
    if (message.commission != null && message.hasOwnProperty("commission"))
      if (typeof message.commission === "number")
        object.commission =
          options.longs === String
            ? String(message.commission)
            : message.commission;
      else
        object.commission =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.commission)
            : options.longs === Number
            ? new $util.LongBits(
                message.commission.low >>> 0,
                message.commission.high >>> 0
              ).toNumber()
            : message.commission;
    if (
      message.commissionType != null &&
      message.hasOwnProperty("commissionType")
    )
      object.commissionType =
        options.enums === String
          ? $root.ProtoOACommissionType[message.commissionType]
          : message.commissionType;
    if (message.slDistance != null && message.hasOwnProperty("slDistance"))
      object.slDistance = message.slDistance;
    if (message.tpDistance != null && message.hasOwnProperty("tpDistance"))
      object.tpDistance = message.tpDistance;
    if (message.gslDistance != null && message.hasOwnProperty("gslDistance"))
      object.gslDistance = message.gslDistance;
    if (message.gslCharge != null && message.hasOwnProperty("gslCharge"))
      if (typeof message.gslCharge === "number")
        object.gslCharge =
          options.longs === String
            ? String(message.gslCharge)
            : message.gslCharge;
      else
        object.gslCharge =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.gslCharge)
            : options.longs === Number
            ? new $util.LongBits(
                message.gslCharge.low >>> 0,
                message.gslCharge.high >>> 0
              ).toNumber()
            : message.gslCharge;
    if (
      message.distanceSetIn != null &&
      message.hasOwnProperty("distanceSetIn")
    )
      object.distanceSetIn =
        options.enums === String
          ? $root.ProtoOASymbolDistanceType[message.distanceSetIn]
          : message.distanceSetIn;
    if (
      message.minCommission != null &&
      message.hasOwnProperty("minCommission")
    )
      if (typeof message.minCommission === "number")
        object.minCommission =
          options.longs === String
            ? String(message.minCommission)
            : message.minCommission;
      else
        object.minCommission =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.minCommission)
            : options.longs === Number
            ? new $util.LongBits(
                message.minCommission.low >>> 0,
                message.minCommission.high >>> 0
              ).toNumber()
            : message.minCommission;
    if (
      message.minCommissionType != null &&
      message.hasOwnProperty("minCommissionType")
    )
      object.minCommissionType =
        options.enums === String
          ? $root.ProtoOAMinCommissionType[message.minCommissionType]
          : message.minCommissionType;
    if (
      message.minCommissionAsset != null &&
      message.hasOwnProperty("minCommissionAsset")
    )
      object.minCommissionAsset = message.minCommissionAsset;
    if (
      message.rolloverCommission != null &&
      message.hasOwnProperty("rolloverCommission")
    )
      if (typeof message.rolloverCommission === "number")
        object.rolloverCommission =
          options.longs === String
            ? String(message.rolloverCommission)
            : message.rolloverCommission;
      else
        object.rolloverCommission =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.rolloverCommission)
            : options.longs === Number
            ? new $util.LongBits(
                message.rolloverCommission.low >>> 0,
                message.rolloverCommission.high >>> 0
              ).toNumber()
            : message.rolloverCommission;
    if (
      message.skipRolloverDays != null &&
      message.hasOwnProperty("skipRolloverDays")
    )
      object.skipRolloverDays = message.skipRolloverDays;
    if (
      message.scheduleTimeZone != null &&
      message.hasOwnProperty("scheduleTimeZone")
    )
      object.scheduleTimeZone = message.scheduleTimeZone;
    if (message.tradingMode != null && message.hasOwnProperty("tradingMode"))
      object.tradingMode =
        options.enums === String
          ? $root.ProtoOATradingMode[message.tradingMode]
          : message.tradingMode;
    return object;
  };

  /**
   * Converts this ProtoOASymbol to JSON.
   * @function toJSON
   * @memberof ProtoOASymbol
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbol.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbol;
})();

$root.ProtoOALightSymbol = (function() {
  /**
   * Properties of a ProtoOALightSymbol.
   * @exports IProtoOALightSymbol
   * @interface IProtoOALightSymbol
   * @property {number|Long} symbolId ProtoOALightSymbol symbolId
   * @property {string|null} [symbolName] ProtoOALightSymbol symbolName
   * @property {boolean|null} [enabled] ProtoOALightSymbol enabled
   * @property {number|Long|null} [baseAssetId] ProtoOALightSymbol baseAssetId
   * @property {number|Long|null} [quoteAssetId] ProtoOALightSymbol quoteAssetId
   * @property {number|Long|null} [symbolCategoryId] ProtoOALightSymbol symbolCategoryId
   * @property {string|null} [description] ProtoOALightSymbol description
   */

  /**
   * Constructs a new ProtoOALightSymbol.
   * @exports ProtoOALightSymbol
   * @classdesc Lightweight symbol entity.
   * @implements IProtoOALightSymbol
   * @constructor
   * @param {IProtoOALightSymbol=} [properties] Properties to set
   */
  function ProtoOALightSymbol(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOALightSymbol symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOALightSymbol
   * @instance
   */
  ProtoOALightSymbol.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOALightSymbol symbolName.
   * @member {string} symbolName
   * @memberof ProtoOALightSymbol
   * @instance
   */
  ProtoOALightSymbol.prototype.symbolName = "";

  /**
   * ProtoOALightSymbol enabled.
   * @member {boolean} enabled
   * @memberof ProtoOALightSymbol
   * @instance
   */
  ProtoOALightSymbol.prototype.enabled = false;

  /**
   * ProtoOALightSymbol baseAssetId.
   * @member {number|Long} baseAssetId
   * @memberof ProtoOALightSymbol
   * @instance
   */
  ProtoOALightSymbol.prototype.baseAssetId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOALightSymbol quoteAssetId.
   * @member {number|Long} quoteAssetId
   * @memberof ProtoOALightSymbol
   * @instance
   */
  ProtoOALightSymbol.prototype.quoteAssetId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOALightSymbol symbolCategoryId.
   * @member {number|Long} symbolCategoryId
   * @memberof ProtoOALightSymbol
   * @instance
   */
  ProtoOALightSymbol.prototype.symbolCategoryId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOALightSymbol description.
   * @member {string} description
   * @memberof ProtoOALightSymbol
   * @instance
   */
  ProtoOALightSymbol.prototype.description = "";

  /**
   * Creates a new ProtoOALightSymbol instance using the specified properties.
   * @function create
   * @memberof ProtoOALightSymbol
   * @static
   * @param {IProtoOALightSymbol=} [properties] Properties to set
   * @returns {ProtoOALightSymbol} ProtoOALightSymbol instance
   */
  ProtoOALightSymbol.create = function create(properties) {
    return new ProtoOALightSymbol(properties);
  };

  /**
   * Encodes the specified ProtoOALightSymbol message. Does not implicitly {@link ProtoOALightSymbol.verify|verify} messages.
   * @function encode
   * @memberof ProtoOALightSymbol
   * @static
   * @param {IProtoOALightSymbol} message ProtoOALightSymbol message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOALightSymbol.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.symbolId);
    if (message.symbolName != null && message.hasOwnProperty("symbolName"))
      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.symbolName);
    if (message.enabled != null && message.hasOwnProperty("enabled"))
      writer.uint32(/* id 3, wireType 0 =*/ 24).bool(message.enabled);
    if (message.baseAssetId != null && message.hasOwnProperty("baseAssetId"))
      writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.baseAssetId);
    if (message.quoteAssetId != null && message.hasOwnProperty("quoteAssetId"))
      writer.uint32(/* id 5, wireType 0 =*/ 40).int64(message.quoteAssetId);
    if (
      message.symbolCategoryId != null &&
      message.hasOwnProperty("symbolCategoryId")
    )
      writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.symbolCategoryId);
    if (message.description != null && message.hasOwnProperty("description"))
      writer.uint32(/* id 7, wireType 2 =*/ 58).string(message.description);
    return writer;
  };

  /**
   * Encodes the specified ProtoOALightSymbol message, length delimited. Does not implicitly {@link ProtoOALightSymbol.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOALightSymbol
   * @static
   * @param {IProtoOALightSymbol} message ProtoOALightSymbol message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOALightSymbol.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOALightSymbol message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOALightSymbol
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOALightSymbol} ProtoOALightSymbol
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOALightSymbol.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOALightSymbol();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.symbolId = reader.int64();
          break;
        case 2:
          message.symbolName = reader.string();
          break;
        case 3:
          message.enabled = reader.bool();
          break;
        case 4:
          message.baseAssetId = reader.int64();
          break;
        case 5:
          message.quoteAssetId = reader.int64();
          break;
        case 6:
          message.symbolCategoryId = reader.int64();
          break;
        case 7:
          message.description = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOALightSymbol message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOALightSymbol
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOALightSymbol} ProtoOALightSymbol
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOALightSymbol.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOALightSymbol message.
   * @function verify
   * @memberof ProtoOALightSymbol
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOALightSymbol.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    if (message.symbolName != null && message.hasOwnProperty("symbolName"))
      if (!$util.isString(message.symbolName))
        return "symbolName: string expected";
    if (message.enabled != null && message.hasOwnProperty("enabled"))
      if (typeof message.enabled !== "boolean")
        return "enabled: boolean expected";
    if (message.baseAssetId != null && message.hasOwnProperty("baseAssetId"))
      if (
        !$util.isInteger(message.baseAssetId) &&
        !(
          message.baseAssetId &&
          $util.isInteger(message.baseAssetId.low) &&
          $util.isInteger(message.baseAssetId.high)
        )
      )
        return "baseAssetId: integer|Long expected";
    if (message.quoteAssetId != null && message.hasOwnProperty("quoteAssetId"))
      if (
        !$util.isInteger(message.quoteAssetId) &&
        !(
          message.quoteAssetId &&
          $util.isInteger(message.quoteAssetId.low) &&
          $util.isInteger(message.quoteAssetId.high)
        )
      )
        return "quoteAssetId: integer|Long expected";
    if (
      message.symbolCategoryId != null &&
      message.hasOwnProperty("symbolCategoryId")
    )
      if (
        !$util.isInteger(message.symbolCategoryId) &&
        !(
          message.symbolCategoryId &&
          $util.isInteger(message.symbolCategoryId.low) &&
          $util.isInteger(message.symbolCategoryId.high)
        )
      )
        return "symbolCategoryId: integer|Long expected";
    if (message.description != null && message.hasOwnProperty("description"))
      if (!$util.isString(message.description))
        return "description: string expected";
    return null;
  };

  /**
   * Creates a ProtoOALightSymbol message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOALightSymbol
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOALightSymbol} ProtoOALightSymbol
   */
  ProtoOALightSymbol.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOALightSymbol) return object;
    var message = new $root.ProtoOALightSymbol();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    if (object.symbolName != null)
      message.symbolName = String(object.symbolName);
    if (object.enabled != null) message.enabled = Boolean(object.enabled);
    if (object.baseAssetId != null)
      if ($util.Long)
        (message.baseAssetId = $util.Long.fromValue(
          object.baseAssetId
        )).unsigned = false;
      else if (typeof object.baseAssetId === "string")
        message.baseAssetId = parseInt(object.baseAssetId, 10);
      else if (typeof object.baseAssetId === "number")
        message.baseAssetId = object.baseAssetId;
      else if (typeof object.baseAssetId === "object")
        message.baseAssetId = new $util.LongBits(
          object.baseAssetId.low >>> 0,
          object.baseAssetId.high >>> 0
        ).toNumber();
    if (object.quoteAssetId != null)
      if ($util.Long)
        (message.quoteAssetId = $util.Long.fromValue(
          object.quoteAssetId
        )).unsigned = false;
      else if (typeof object.quoteAssetId === "string")
        message.quoteAssetId = parseInt(object.quoteAssetId, 10);
      else if (typeof object.quoteAssetId === "number")
        message.quoteAssetId = object.quoteAssetId;
      else if (typeof object.quoteAssetId === "object")
        message.quoteAssetId = new $util.LongBits(
          object.quoteAssetId.low >>> 0,
          object.quoteAssetId.high >>> 0
        ).toNumber();
    if (object.symbolCategoryId != null)
      if ($util.Long)
        (message.symbolCategoryId = $util.Long.fromValue(
          object.symbolCategoryId
        )).unsigned = false;
      else if (typeof object.symbolCategoryId === "string")
        message.symbolCategoryId = parseInt(object.symbolCategoryId, 10);
      else if (typeof object.symbolCategoryId === "number")
        message.symbolCategoryId = object.symbolCategoryId;
      else if (typeof object.symbolCategoryId === "object")
        message.symbolCategoryId = new $util.LongBits(
          object.symbolCategoryId.low >>> 0,
          object.symbolCategoryId.high >>> 0
        ).toNumber();
    if (object.description != null)
      message.description = String(object.description);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOALightSymbol message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOALightSymbol
   * @static
   * @param {ProtoOALightSymbol} message ProtoOALightSymbol
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOALightSymbol.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
      object.symbolName = "";
      object.enabled = false;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.baseAssetId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.baseAssetId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.quoteAssetId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.quoteAssetId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolCategoryId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolCategoryId = options.longs === String ? "0" : 0;
      object.description = "";
    }
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (message.symbolName != null && message.hasOwnProperty("symbolName"))
      object.symbolName = message.symbolName;
    if (message.enabled != null && message.hasOwnProperty("enabled"))
      object.enabled = message.enabled;
    if (message.baseAssetId != null && message.hasOwnProperty("baseAssetId"))
      if (typeof message.baseAssetId === "number")
        object.baseAssetId =
          options.longs === String
            ? String(message.baseAssetId)
            : message.baseAssetId;
      else
        object.baseAssetId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.baseAssetId)
            : options.longs === Number
            ? new $util.LongBits(
                message.baseAssetId.low >>> 0,
                message.baseAssetId.high >>> 0
              ).toNumber()
            : message.baseAssetId;
    if (message.quoteAssetId != null && message.hasOwnProperty("quoteAssetId"))
      if (typeof message.quoteAssetId === "number")
        object.quoteAssetId =
          options.longs === String
            ? String(message.quoteAssetId)
            : message.quoteAssetId;
      else
        object.quoteAssetId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.quoteAssetId)
            : options.longs === Number
            ? new $util.LongBits(
                message.quoteAssetId.low >>> 0,
                message.quoteAssetId.high >>> 0
              ).toNumber()
            : message.quoteAssetId;
    if (
      message.symbolCategoryId != null &&
      message.hasOwnProperty("symbolCategoryId")
    )
      if (typeof message.symbolCategoryId === "number")
        object.symbolCategoryId =
          options.longs === String
            ? String(message.symbolCategoryId)
            : message.symbolCategoryId;
      else
        object.symbolCategoryId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolCategoryId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolCategoryId.low >>> 0,
                message.symbolCategoryId.high >>> 0
              ).toNumber()
            : message.symbolCategoryId;
    if (message.description != null && message.hasOwnProperty("description"))
      object.description = message.description;
    return object;
  };

  /**
   * Converts this ProtoOALightSymbol to JSON.
   * @function toJSON
   * @memberof ProtoOALightSymbol
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOALightSymbol.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOALightSymbol;
})();

$root.ProtoOASymbolCategory = (function() {
  /**
   * Properties of a ProtoOASymbolCategory.
   * @exports IProtoOASymbolCategory
   * @interface IProtoOASymbolCategory
   * @property {number|Long} id ProtoOASymbolCategory id
   * @property {number|Long} assetClassId ProtoOASymbolCategory assetClassId
   * @property {string} name ProtoOASymbolCategory name
   */

  /**
   * Constructs a new ProtoOASymbolCategory.
   * @exports ProtoOASymbolCategory
   * @classdesc Symbol category entity.
   * @implements IProtoOASymbolCategory
   * @constructor
   * @param {IProtoOASymbolCategory=} [properties] Properties to set
   */
  function ProtoOASymbolCategory(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOASymbolCategory id.
   * @member {number|Long} id
   * @memberof ProtoOASymbolCategory
   * @instance
   */
  ProtoOASymbolCategory.prototype.id = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolCategory assetClassId.
   * @member {number|Long} assetClassId
   * @memberof ProtoOASymbolCategory
   * @instance
   */
  ProtoOASymbolCategory.prototype.assetClassId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOASymbolCategory name.
   * @member {string} name
   * @memberof ProtoOASymbolCategory
   * @instance
   */
  ProtoOASymbolCategory.prototype.name = "";

  /**
   * Creates a new ProtoOASymbolCategory instance using the specified properties.
   * @function create
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {IProtoOASymbolCategory=} [properties] Properties to set
   * @returns {ProtoOASymbolCategory} ProtoOASymbolCategory instance
   */
  ProtoOASymbolCategory.create = function create(properties) {
    return new ProtoOASymbolCategory(properties);
  };

  /**
   * Encodes the specified ProtoOASymbolCategory message. Does not implicitly {@link ProtoOASymbolCategory.verify|verify} messages.
   * @function encode
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {IProtoOASymbolCategory} message ProtoOASymbolCategory message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolCategory.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.id);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.assetClassId);
    writer.uint32(/* id 3, wireType 2 =*/ 26).string(message.name);
    return writer;
  };

  /**
   * Encodes the specified ProtoOASymbolCategory message, length delimited. Does not implicitly {@link ProtoOASymbolCategory.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {IProtoOASymbolCategory} message ProtoOASymbolCategory message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOASymbolCategory.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOASymbolCategory message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOASymbolCategory} ProtoOASymbolCategory
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolCategory.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOASymbolCategory();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.int64();
          break;
        case 2:
          message.assetClassId = reader.int64();
          break;
        case 3:
          message.name = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("id"))
      throw $util.ProtocolError("missing required 'id'", { instance: message });
    if (!message.hasOwnProperty("assetClassId"))
      throw $util.ProtocolError("missing required 'assetClassId'", {
        instance: message
      });
    if (!message.hasOwnProperty("name"))
      throw $util.ProtocolError("missing required 'name'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOASymbolCategory message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOASymbolCategory} ProtoOASymbolCategory
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOASymbolCategory.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOASymbolCategory message.
   * @function verify
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOASymbolCategory.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.id) &&
      !(
        message.id &&
        $util.isInteger(message.id.low) &&
        $util.isInteger(message.id.high)
      )
    )
      return "id: integer|Long expected";
    if (
      !$util.isInteger(message.assetClassId) &&
      !(
        message.assetClassId &&
        $util.isInteger(message.assetClassId.low) &&
        $util.isInteger(message.assetClassId.high)
      )
    )
      return "assetClassId: integer|Long expected";
    if (!$util.isString(message.name)) return "name: string expected";
    return null;
  };

  /**
   * Creates a ProtoOASymbolCategory message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOASymbolCategory} ProtoOASymbolCategory
   */
  ProtoOASymbolCategory.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOASymbolCategory) return object;
    var message = new $root.ProtoOASymbolCategory();
    if (object.id != null)
      if ($util.Long)
        (message.id = $util.Long.fromValue(object.id)).unsigned = false;
      else if (typeof object.id === "string")
        message.id = parseInt(object.id, 10);
      else if (typeof object.id === "number") message.id = object.id;
      else if (typeof object.id === "object")
        message.id = new $util.LongBits(
          object.id.low >>> 0,
          object.id.high >>> 0
        ).toNumber();
    if (object.assetClassId != null)
      if ($util.Long)
        (message.assetClassId = $util.Long.fromValue(
          object.assetClassId
        )).unsigned = false;
      else if (typeof object.assetClassId === "string")
        message.assetClassId = parseInt(object.assetClassId, 10);
      else if (typeof object.assetClassId === "number")
        message.assetClassId = object.assetClassId;
      else if (typeof object.assetClassId === "object")
        message.assetClassId = new $util.LongBits(
          object.assetClassId.low >>> 0,
          object.assetClassId.high >>> 0
        ).toNumber();
    if (object.name != null) message.name = String(object.name);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOASymbolCategory message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOASymbolCategory
   * @static
   * @param {ProtoOASymbolCategory} message ProtoOASymbolCategory
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOASymbolCategory.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.id =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.id = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.assetClassId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.assetClassId = options.longs === String ? "0" : 0;
      object.name = "";
    }
    if (message.id != null && message.hasOwnProperty("id"))
      if (typeof message.id === "number")
        object.id = options.longs === String ? String(message.id) : message.id;
      else
        object.id =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.id)
            : options.longs === Number
            ? new $util.LongBits(
                message.id.low >>> 0,
                message.id.high >>> 0
              ).toNumber()
            : message.id;
    if (message.assetClassId != null && message.hasOwnProperty("assetClassId"))
      if (typeof message.assetClassId === "number")
        object.assetClassId =
          options.longs === String
            ? String(message.assetClassId)
            : message.assetClassId;
      else
        object.assetClassId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.assetClassId)
            : options.longs === Number
            ? new $util.LongBits(
                message.assetClassId.low >>> 0,
                message.assetClassId.high >>> 0
              ).toNumber()
            : message.assetClassId;
    if (message.name != null && message.hasOwnProperty("name"))
      object.name = message.name;
    return object;
  };

  /**
   * Converts this ProtoOASymbolCategory to JSON.
   * @function toJSON
   * @memberof ProtoOASymbolCategory
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOASymbolCategory.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOASymbolCategory;
})();

/**
 * ProtoOADayOfWeek enum.
 * @exports ProtoOADayOfWeek
 * @enum {string}
 * @property {number} NONE=0 NONE value
 * @property {number} MONDAY=1 MONDAY value
 * @property {number} TUESDAY=2 TUESDAY value
 * @property {number} WEDNESDAY=3 WEDNESDAY value
 * @property {number} THURSDAY=4 THURSDAY value
 * @property {number} FRIDAY=5 FRIDAY value
 * @property {number} SATURDAY=6 SATURDAY value
 * @property {number} SUNDAY=7 SUNDAY value
 */
$root.ProtoOADayOfWeek = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "NONE")] = 0;
  values[(valuesById[1] = "MONDAY")] = 1;
  values[(valuesById[2] = "TUESDAY")] = 2;
  values[(valuesById[3] = "WEDNESDAY")] = 3;
  values[(valuesById[4] = "THURSDAY")] = 4;
  values[(valuesById[5] = "FRIDAY")] = 5;
  values[(valuesById[6] = "SATURDAY")] = 6;
  values[(valuesById[7] = "SUNDAY")] = 7;
  return values;
})();

$root.ProtoOAInterval = (function() {
  /**
   * Properties of a ProtoOAInterval.
   * @exports IProtoOAInterval
   * @interface IProtoOAInterval
   * @property {number} startSecond ProtoOAInterval startSecond
   * @property {number} endSecond ProtoOAInterval endSecond
   */

  /**
   * Constructs a new ProtoOAInterval.
   * @exports ProtoOAInterval
   * @classdesc Symbol trading session entity.
   * @implements IProtoOAInterval
   * @constructor
   * @param {IProtoOAInterval=} [properties] Properties to set
   */
  function ProtoOAInterval(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAInterval startSecond.
   * @member {number} startSecond
   * @memberof ProtoOAInterval
   * @instance
   */
  ProtoOAInterval.prototype.startSecond = 0;

  /**
   * ProtoOAInterval endSecond.
   * @member {number} endSecond
   * @memberof ProtoOAInterval
   * @instance
   */
  ProtoOAInterval.prototype.endSecond = 0;

  /**
   * Creates a new ProtoOAInterval instance using the specified properties.
   * @function create
   * @memberof ProtoOAInterval
   * @static
   * @param {IProtoOAInterval=} [properties] Properties to set
   * @returns {ProtoOAInterval} ProtoOAInterval instance
   */
  ProtoOAInterval.create = function create(properties) {
    return new ProtoOAInterval(properties);
  };

  /**
   * Encodes the specified ProtoOAInterval message. Does not implicitly {@link ProtoOAInterval.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAInterval
   * @static
   * @param {IProtoOAInterval} message ProtoOAInterval message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAInterval.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 3, wireType 0 =*/ 24).uint32(message.startSecond);
    writer.uint32(/* id 4, wireType 0 =*/ 32).uint32(message.endSecond);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAInterval message, length delimited. Does not implicitly {@link ProtoOAInterval.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAInterval
   * @static
   * @param {IProtoOAInterval} message ProtoOAInterval message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAInterval.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAInterval message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAInterval
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAInterval} ProtoOAInterval
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAInterval.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAInterval();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 3:
          message.startSecond = reader.uint32();
          break;
        case 4:
          message.endSecond = reader.uint32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("startSecond"))
      throw $util.ProtocolError("missing required 'startSecond'", {
        instance: message
      });
    if (!message.hasOwnProperty("endSecond"))
      throw $util.ProtocolError("missing required 'endSecond'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAInterval message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAInterval
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAInterval} ProtoOAInterval
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAInterval.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAInterval message.
   * @function verify
   * @memberof ProtoOAInterval
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAInterval.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (!$util.isInteger(message.startSecond))
      return "startSecond: integer expected";
    if (!$util.isInteger(message.endSecond))
      return "endSecond: integer expected";
    return null;
  };

  /**
   * Creates a ProtoOAInterval message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAInterval
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAInterval} ProtoOAInterval
   */
  ProtoOAInterval.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAInterval) return object;
    var message = new $root.ProtoOAInterval();
    if (object.startSecond != null)
      message.startSecond = object.startSecond >>> 0;
    if (object.endSecond != null) message.endSecond = object.endSecond >>> 0;
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAInterval message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAInterval
   * @static
   * @param {ProtoOAInterval} message ProtoOAInterval
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAInterval.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.startSecond = 0;
      object.endSecond = 0;
    }
    if (message.startSecond != null && message.hasOwnProperty("startSecond"))
      object.startSecond = message.startSecond;
    if (message.endSecond != null && message.hasOwnProperty("endSecond"))
      object.endSecond = message.endSecond;
    return object;
  };

  /**
   * Converts this ProtoOAInterval to JSON.
   * @function toJSON
   * @memberof ProtoOAInterval
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAInterval.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAInterval;
})();

/**
 * Enum for specifying type of trading commission.
 * @exports ProtoOACommissionType
 * @enum {string}
 * @property {number} USD_PER_MIL_USD=1 USD_PER_MIL_USD value
 * @property {number} USD_PER_LOT=2 USD_PER_LOT value
 * @property {number} PERCENTAGE=3 PERCENTAGE value
 * @property {number} QUOTE_CCY_PER_LOT=4 QUOTE_CCY_PER_LOT value
 */
$root.ProtoOACommissionType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "USD_PER_MIL_USD")] = 1;
  values[(valuesById[2] = "USD_PER_LOT")] = 2;
  values[(valuesById[3] = "PERCENTAGE")] = 3;
  values[(valuesById[4] = "QUOTE_CCY_PER_LOT")] = 4;
  return values;
})();

/**
 * Enum for specifying stop loss and take profit distances.
 * @exports ProtoOASymbolDistanceType
 * @enum {string}
 * @property {number} SYMBOL_DISTANCE_IN_POINTS=1 SYMBOL_DISTANCE_IN_POINTS value
 * @property {number} SYMBOL_DISTANCE_IN_PERCENTAGE=2 SYMBOL_DISTANCE_IN_PERCENTAGE value
 */
$root.ProtoOASymbolDistanceType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "SYMBOL_DISTANCE_IN_POINTS")] = 1;
  values[(valuesById[2] = "SYMBOL_DISTANCE_IN_PERCENTAGE")] = 2;
  return values;
})();

/**
 * Enum for specifying type of minimum trading commission.
 * @exports ProtoOAMinCommissionType
 * @enum {string}
 * @property {number} CURRENCY=1 CURRENCY value
 * @property {number} QUOTE_CURRENCY=2 QUOTE_CURRENCY value
 */
$root.ProtoOAMinCommissionType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "CURRENCY")] = 1;
  values[(valuesById[2] = "QUOTE_CURRENCY")] = 2;
  return values;
})();

/**
 * Enum for specifying symbol trading mode.
 * @exports ProtoOATradingMode
 * @enum {string}
 * @property {number} ENABLED=0 ENABLED value
 * @property {number} DISABLED_WITHOUT_PENDINGS_EXECUTION=1 DISABLED_WITHOUT_PENDINGS_EXECUTION value
 * @property {number} DISABLED_WITH_PENDINGS_EXECUTION=2 DISABLED_WITH_PENDINGS_EXECUTION value
 * @property {number} CLOSE_ONLY_MODE=3 CLOSE_ONLY_MODE value
 */
$root.ProtoOATradingMode = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "ENABLED")] = 0;
  values[(valuesById[1] = "DISABLED_WITHOUT_PENDINGS_EXECUTION")] = 1;
  values[(valuesById[2] = "DISABLED_WITH_PENDINGS_EXECUTION")] = 2;
  values[(valuesById[3] = "CLOSE_ONLY_MODE")] = 3;
  return values;
})();

/**
 * Enum for specifying access right for a trader.
 * @exports ProtoOAAccessRights
 * @enum {string}
 * @property {number} FULL_ACCESS=0 FULL_ACCESS value
 * @property {number} CLOSE_ONLY=1 CLOSE_ONLY value
 * @property {number} NO_TRADING=2 NO_TRADING value
 * @property {number} NO_LOGIN=3 NO_LOGIN value
 */
$root.ProtoOAAccessRights = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "FULL_ACCESS")] = 0;
  values[(valuesById[1] = "CLOSE_ONLY")] = 1;
  values[(valuesById[2] = "NO_TRADING")] = 2;
  values[(valuesById[3] = "NO_LOGIN")] = 3;
  return values;
})();

/**
 * Enum for specifying margin calculation type for an account.
 * @exports ProtoOATotalMarginCalculationType
 * @enum {string}
 * @property {number} MAX=0 MAX value
 * @property {number} SUM=1 SUM value
 * @property {number} NET=2 NET value
 */
$root.ProtoOATotalMarginCalculationType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "MAX")] = 0;
  values[(valuesById[1] = "SUM")] = 1;
  values[(valuesById[2] = "NET")] = 2;
  return values;
})();

/**
 * Enum for specifying type of an account.
 * @exports ProtoOAAccountType
 * @enum {string}
 * @property {number} HEDGED=0 HEDGED value
 * @property {number} NETTED=1 NETTED value
 * @property {number} SPREAD_BETTING=2 SPREAD_BETTING value
 */
$root.ProtoOAAccountType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "HEDGED")] = 0;
  values[(valuesById[1] = "NETTED")] = 1;
  values[(valuesById[2] = "SPREAD_BETTING")] = 2;
  return values;
})();

$root.ProtoOATrader = (function() {
  /**
   * Properties of a ProtoOATrader.
   * @exports IProtoOATrader
   * @interface IProtoOATrader
   * @property {number|Long} ctidTraderAccountId ProtoOATrader ctidTraderAccountId
   * @property {number|Long} balance ProtoOATrader balance
   * @property {number|Long|null} [balanceVersion] ProtoOATrader balanceVersion
   * @property {number|Long|null} [managerBonus] ProtoOATrader managerBonus
   * @property {number|Long|null} [ibBonus] ProtoOATrader ibBonus
   * @property {number|Long|null} [nonWithdrawableBonus] ProtoOATrader nonWithdrawableBonus
   * @property {ProtoOAAccessRights|null} [accessRights] ProtoOATrader accessRights
   * @property {number|Long} depositAssetId ProtoOATrader depositAssetId
   * @property {boolean|null} [swapFree] ProtoOATrader swapFree
   * @property {number|null} [leverageInCents] ProtoOATrader leverageInCents
   * @property {ProtoOATotalMarginCalculationType|null} [totalMarginCalculationType] ProtoOATrader totalMarginCalculationType
   * @property {number|null} [maxLeverage] ProtoOATrader maxLeverage
   * @property {boolean|null} [frenchRisk] ProtoOATrader frenchRisk
   * @property {number|Long|null} [traderLogin] ProtoOATrader traderLogin
   * @property {ProtoOAAccountType|null} [accountType] ProtoOATrader accountType
   * @property {string|null} [brokerName] ProtoOATrader brokerName
   * @property {number|Long|null} [registrationTimestamp] ProtoOATrader registrationTimestamp
   */

  /**
   * Constructs a new ProtoOATrader.
   * @exports ProtoOATrader
   * @classdesc Trading account entity.
   * @implements IProtoOATrader
   * @constructor
   * @param {IProtoOATrader=} [properties] Properties to set
   */
  function ProtoOATrader(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATrader ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader balance.
   * @member {number|Long} balance
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.balance = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader balanceVersion.
   * @member {number|Long} balanceVersion
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.balanceVersion = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader managerBonus.
   * @member {number|Long} managerBonus
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.managerBonus = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader ibBonus.
   * @member {number|Long} ibBonus
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.ibBonus = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader nonWithdrawableBonus.
   * @member {number|Long} nonWithdrawableBonus
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.nonWithdrawableBonus = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader accessRights.
   * @member {ProtoOAAccessRights} accessRights
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.accessRights = 0;

  /**
   * ProtoOATrader depositAssetId.
   * @member {number|Long} depositAssetId
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.depositAssetId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader swapFree.
   * @member {boolean} swapFree
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.swapFree = false;

  /**
   * ProtoOATrader leverageInCents.
   * @member {number} leverageInCents
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.leverageInCents = 0;

  /**
   * ProtoOATrader totalMarginCalculationType.
   * @member {ProtoOATotalMarginCalculationType} totalMarginCalculationType
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.totalMarginCalculationType = 0;

  /**
   * ProtoOATrader maxLeverage.
   * @member {number} maxLeverage
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.maxLeverage = 0;

  /**
   * ProtoOATrader frenchRisk.
   * @member {boolean} frenchRisk
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.frenchRisk = false;

  /**
   * ProtoOATrader traderLogin.
   * @member {number|Long} traderLogin
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.traderLogin = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrader accountType.
   * @member {ProtoOAAccountType} accountType
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.accountType = 0;

  /**
   * ProtoOATrader brokerName.
   * @member {string} brokerName
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.brokerName = "";

  /**
   * ProtoOATrader registrationTimestamp.
   * @member {number|Long} registrationTimestamp
   * @memberof ProtoOATrader
   * @instance
   */
  ProtoOATrader.prototype.registrationTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOATrader instance using the specified properties.
   * @function create
   * @memberof ProtoOATrader
   * @static
   * @param {IProtoOATrader=} [properties] Properties to set
   * @returns {ProtoOATrader} ProtoOATrader instance
   */
  ProtoOATrader.create = function create(properties) {
    return new ProtoOATrader(properties);
  };

  /**
   * Encodes the specified ProtoOATrader message. Does not implicitly {@link ProtoOATrader.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATrader
   * @static
   * @param {IProtoOATrader} message ProtoOATrader message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATrader.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.ctidTraderAccountId);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.balance);
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.balanceVersion);
    if (message.managerBonus != null && message.hasOwnProperty("managerBonus"))
      writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.managerBonus);
    if (message.ibBonus != null && message.hasOwnProperty("ibBonus"))
      writer.uint32(/* id 5, wireType 0 =*/ 40).int64(message.ibBonus);
    if (
      message.nonWithdrawableBonus != null &&
      message.hasOwnProperty("nonWithdrawableBonus")
    )
      writer
        .uint32(/* id 6, wireType 0 =*/ 48)
        .int64(message.nonWithdrawableBonus);
    if (message.accessRights != null && message.hasOwnProperty("accessRights"))
      writer.uint32(/* id 7, wireType 0 =*/ 56).int32(message.accessRights);
    writer.uint32(/* id 8, wireType 0 =*/ 64).int64(message.depositAssetId);
    if (message.swapFree != null && message.hasOwnProperty("swapFree"))
      writer.uint32(/* id 9, wireType 0 =*/ 72).bool(message.swapFree);
    if (
      message.leverageInCents != null &&
      message.hasOwnProperty("leverageInCents")
    )
      writer
        .uint32(/* id 10, wireType 0 =*/ 80)
        .uint32(message.leverageInCents);
    if (
      message.totalMarginCalculationType != null &&
      message.hasOwnProperty("totalMarginCalculationType")
    )
      writer
        .uint32(/* id 11, wireType 0 =*/ 88)
        .int32(message.totalMarginCalculationType);
    if (message.maxLeverage != null && message.hasOwnProperty("maxLeverage"))
      writer.uint32(/* id 12, wireType 0 =*/ 96).uint32(message.maxLeverage);
    if (message.frenchRisk != null && message.hasOwnProperty("frenchRisk"))
      writer.uint32(/* id 13, wireType 0 =*/ 104).bool(message.frenchRisk);
    if (message.traderLogin != null && message.hasOwnProperty("traderLogin"))
      writer.uint32(/* id 14, wireType 0 =*/ 112).int64(message.traderLogin);
    if (message.accountType != null && message.hasOwnProperty("accountType"))
      writer.uint32(/* id 15, wireType 0 =*/ 120).int32(message.accountType);
    if (message.brokerName != null && message.hasOwnProperty("brokerName"))
      writer.uint32(/* id 16, wireType 2 =*/ 130).string(message.brokerName);
    if (
      message.registrationTimestamp != null &&
      message.hasOwnProperty("registrationTimestamp")
    )
      writer
        .uint32(/* id 17, wireType 0 =*/ 136)
        .int64(message.registrationTimestamp);
    return writer;
  };

  /**
   * Encodes the specified ProtoOATrader message, length delimited. Does not implicitly {@link ProtoOATrader.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATrader
   * @static
   * @param {IProtoOATrader} message ProtoOATrader message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATrader.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATrader message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATrader
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATrader} ProtoOATrader
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATrader.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATrader();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.ctidTraderAccountId = reader.int64();
          break;
        case 2:
          message.balance = reader.int64();
          break;
        case 3:
          message.balanceVersion = reader.int64();
          break;
        case 4:
          message.managerBonus = reader.int64();
          break;
        case 5:
          message.ibBonus = reader.int64();
          break;
        case 6:
          message.nonWithdrawableBonus = reader.int64();
          break;
        case 7:
          message.accessRights = reader.int32();
          break;
        case 8:
          message.depositAssetId = reader.int64();
          break;
        case 9:
          message.swapFree = reader.bool();
          break;
        case 10:
          message.leverageInCents = reader.uint32();
          break;
        case 11:
          message.totalMarginCalculationType = reader.int32();
          break;
        case 12:
          message.maxLeverage = reader.uint32();
          break;
        case 13:
          message.frenchRisk = reader.bool();
          break;
        case 14:
          message.traderLogin = reader.int64();
          break;
        case 15:
          message.accountType = reader.int32();
          break;
        case 16:
          message.brokerName = reader.string();
          break;
        case 17:
          message.registrationTimestamp = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    if (!message.hasOwnProperty("balance"))
      throw $util.ProtocolError("missing required 'balance'", {
        instance: message
      });
    if (!message.hasOwnProperty("depositAssetId"))
      throw $util.ProtocolError("missing required 'depositAssetId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATrader message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATrader
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATrader} ProtoOATrader
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATrader.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATrader message.
   * @function verify
   * @memberof ProtoOATrader
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATrader.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (
      !$util.isInteger(message.balance) &&
      !(
        message.balance &&
        $util.isInteger(message.balance.low) &&
        $util.isInteger(message.balance.high)
      )
    )
      return "balance: integer|Long expected";
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      if (
        !$util.isInteger(message.balanceVersion) &&
        !(
          message.balanceVersion &&
          $util.isInteger(message.balanceVersion.low) &&
          $util.isInteger(message.balanceVersion.high)
        )
      )
        return "balanceVersion: integer|Long expected";
    if (message.managerBonus != null && message.hasOwnProperty("managerBonus"))
      if (
        !$util.isInteger(message.managerBonus) &&
        !(
          message.managerBonus &&
          $util.isInteger(message.managerBonus.low) &&
          $util.isInteger(message.managerBonus.high)
        )
      )
        return "managerBonus: integer|Long expected";
    if (message.ibBonus != null && message.hasOwnProperty("ibBonus"))
      if (
        !$util.isInteger(message.ibBonus) &&
        !(
          message.ibBonus &&
          $util.isInteger(message.ibBonus.low) &&
          $util.isInteger(message.ibBonus.high)
        )
      )
        return "ibBonus: integer|Long expected";
    if (
      message.nonWithdrawableBonus != null &&
      message.hasOwnProperty("nonWithdrawableBonus")
    )
      if (
        !$util.isInteger(message.nonWithdrawableBonus) &&
        !(
          message.nonWithdrawableBonus &&
          $util.isInteger(message.nonWithdrawableBonus.low) &&
          $util.isInteger(message.nonWithdrawableBonus.high)
        )
      )
        return "nonWithdrawableBonus: integer|Long expected";
    if (message.accessRights != null && message.hasOwnProperty("accessRights"))
      switch (message.accessRights) {
        default:
          return "accessRights: enum value expected";
        case 0:
        case 1:
        case 2:
        case 3:
          break;
      }
    if (
      !$util.isInteger(message.depositAssetId) &&
      !(
        message.depositAssetId &&
        $util.isInteger(message.depositAssetId.low) &&
        $util.isInteger(message.depositAssetId.high)
      )
    )
      return "depositAssetId: integer|Long expected";
    if (message.swapFree != null && message.hasOwnProperty("swapFree"))
      if (typeof message.swapFree !== "boolean")
        return "swapFree: boolean expected";
    if (
      message.leverageInCents != null &&
      message.hasOwnProperty("leverageInCents")
    )
      if (!$util.isInteger(message.leverageInCents))
        return "leverageInCents: integer expected";
    if (
      message.totalMarginCalculationType != null &&
      message.hasOwnProperty("totalMarginCalculationType")
    )
      switch (message.totalMarginCalculationType) {
        default:
          return "totalMarginCalculationType: enum value expected";
        case 0:
        case 1:
        case 2:
          break;
      }
    if (message.maxLeverage != null && message.hasOwnProperty("maxLeverage"))
      if (!$util.isInteger(message.maxLeverage))
        return "maxLeverage: integer expected";
    if (message.frenchRisk != null && message.hasOwnProperty("frenchRisk"))
      if (typeof message.frenchRisk !== "boolean")
        return "frenchRisk: boolean expected";
    if (message.traderLogin != null && message.hasOwnProperty("traderLogin"))
      if (
        !$util.isInteger(message.traderLogin) &&
        !(
          message.traderLogin &&
          $util.isInteger(message.traderLogin.low) &&
          $util.isInteger(message.traderLogin.high)
        )
      )
        return "traderLogin: integer|Long expected";
    if (message.accountType != null && message.hasOwnProperty("accountType"))
      switch (message.accountType) {
        default:
          return "accountType: enum value expected";
        case 0:
        case 1:
        case 2:
          break;
      }
    if (message.brokerName != null && message.hasOwnProperty("brokerName"))
      if (!$util.isString(message.brokerName))
        return "brokerName: string expected";
    if (
      message.registrationTimestamp != null &&
      message.hasOwnProperty("registrationTimestamp")
    )
      if (
        !$util.isInteger(message.registrationTimestamp) &&
        !(
          message.registrationTimestamp &&
          $util.isInteger(message.registrationTimestamp.low) &&
          $util.isInteger(message.registrationTimestamp.high)
        )
      )
        return "registrationTimestamp: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOATrader message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATrader
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATrader} ProtoOATrader
   */
  ProtoOATrader.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATrader) return object;
    var message = new $root.ProtoOATrader();
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = false;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber();
    if (object.balance != null)
      if ($util.Long)
        (message.balance = $util.Long.fromValue(
          object.balance
        )).unsigned = false;
      else if (typeof object.balance === "string")
        message.balance = parseInt(object.balance, 10);
      else if (typeof object.balance === "number")
        message.balance = object.balance;
      else if (typeof object.balance === "object")
        message.balance = new $util.LongBits(
          object.balance.low >>> 0,
          object.balance.high >>> 0
        ).toNumber();
    if (object.balanceVersion != null)
      if ($util.Long)
        (message.balanceVersion = $util.Long.fromValue(
          object.balanceVersion
        )).unsigned = false;
      else if (typeof object.balanceVersion === "string")
        message.balanceVersion = parseInt(object.balanceVersion, 10);
      else if (typeof object.balanceVersion === "number")
        message.balanceVersion = object.balanceVersion;
      else if (typeof object.balanceVersion === "object")
        message.balanceVersion = new $util.LongBits(
          object.balanceVersion.low >>> 0,
          object.balanceVersion.high >>> 0
        ).toNumber();
    if (object.managerBonus != null)
      if ($util.Long)
        (message.managerBonus = $util.Long.fromValue(
          object.managerBonus
        )).unsigned = false;
      else if (typeof object.managerBonus === "string")
        message.managerBonus = parseInt(object.managerBonus, 10);
      else if (typeof object.managerBonus === "number")
        message.managerBonus = object.managerBonus;
      else if (typeof object.managerBonus === "object")
        message.managerBonus = new $util.LongBits(
          object.managerBonus.low >>> 0,
          object.managerBonus.high >>> 0
        ).toNumber();
    if (object.ibBonus != null)
      if ($util.Long)
        (message.ibBonus = $util.Long.fromValue(
          object.ibBonus
        )).unsigned = false;
      else if (typeof object.ibBonus === "string")
        message.ibBonus = parseInt(object.ibBonus, 10);
      else if (typeof object.ibBonus === "number")
        message.ibBonus = object.ibBonus;
      else if (typeof object.ibBonus === "object")
        message.ibBonus = new $util.LongBits(
          object.ibBonus.low >>> 0,
          object.ibBonus.high >>> 0
        ).toNumber();
    if (object.nonWithdrawableBonus != null)
      if ($util.Long)
        (message.nonWithdrawableBonus = $util.Long.fromValue(
          object.nonWithdrawableBonus
        )).unsigned = false;
      else if (typeof object.nonWithdrawableBonus === "string")
        message.nonWithdrawableBonus = parseInt(
          object.nonWithdrawableBonus,
          10
        );
      else if (typeof object.nonWithdrawableBonus === "number")
        message.nonWithdrawableBonus = object.nonWithdrawableBonus;
      else if (typeof object.nonWithdrawableBonus === "object")
        message.nonWithdrawableBonus = new $util.LongBits(
          object.nonWithdrawableBonus.low >>> 0,
          object.nonWithdrawableBonus.high >>> 0
        ).toNumber();
    switch (object.accessRights) {
      case "FULL_ACCESS":
      case 0:
        message.accessRights = 0;
        break;
      case "CLOSE_ONLY":
      case 1:
        message.accessRights = 1;
        break;
      case "NO_TRADING":
      case 2:
        message.accessRights = 2;
        break;
      case "NO_LOGIN":
      case 3:
        message.accessRights = 3;
        break;
    }
    if (object.depositAssetId != null)
      if ($util.Long)
        (message.depositAssetId = $util.Long.fromValue(
          object.depositAssetId
        )).unsigned = false;
      else if (typeof object.depositAssetId === "string")
        message.depositAssetId = parseInt(object.depositAssetId, 10);
      else if (typeof object.depositAssetId === "number")
        message.depositAssetId = object.depositAssetId;
      else if (typeof object.depositAssetId === "object")
        message.depositAssetId = new $util.LongBits(
          object.depositAssetId.low >>> 0,
          object.depositAssetId.high >>> 0
        ).toNumber();
    if (object.swapFree != null) message.swapFree = Boolean(object.swapFree);
    if (object.leverageInCents != null)
      message.leverageInCents = object.leverageInCents >>> 0;
    switch (object.totalMarginCalculationType) {
      case "MAX":
      case 0:
        message.totalMarginCalculationType = 0;
        break;
      case "SUM":
      case 1:
        message.totalMarginCalculationType = 1;
        break;
      case "NET":
      case 2:
        message.totalMarginCalculationType = 2;
        break;
    }
    if (object.maxLeverage != null)
      message.maxLeverage = object.maxLeverage >>> 0;
    if (object.frenchRisk != null)
      message.frenchRisk = Boolean(object.frenchRisk);
    if (object.traderLogin != null)
      if ($util.Long)
        (message.traderLogin = $util.Long.fromValue(
          object.traderLogin
        )).unsigned = false;
      else if (typeof object.traderLogin === "string")
        message.traderLogin = parseInt(object.traderLogin, 10);
      else if (typeof object.traderLogin === "number")
        message.traderLogin = object.traderLogin;
      else if (typeof object.traderLogin === "object")
        message.traderLogin = new $util.LongBits(
          object.traderLogin.low >>> 0,
          object.traderLogin.high >>> 0
        ).toNumber();
    switch (object.accountType) {
      case "HEDGED":
      case 0:
        message.accountType = 0;
        break;
      case "NETTED":
      case 1:
        message.accountType = 1;
        break;
      case "SPREAD_BETTING":
      case 2:
        message.accountType = 2;
        break;
    }
    if (object.brokerName != null)
      message.brokerName = String(object.brokerName);
    if (object.registrationTimestamp != null)
      if ($util.Long)
        (message.registrationTimestamp = $util.Long.fromValue(
          object.registrationTimestamp
        )).unsigned = false;
      else if (typeof object.registrationTimestamp === "string")
        message.registrationTimestamp = parseInt(
          object.registrationTimestamp,
          10
        );
      else if (typeof object.registrationTimestamp === "number")
        message.registrationTimestamp = object.registrationTimestamp;
      else if (typeof object.registrationTimestamp === "object")
        message.registrationTimestamp = new $util.LongBits(
          object.registrationTimestamp.low >>> 0,
          object.registrationTimestamp.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATrader message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATrader
   * @static
   * @param {ProtoOATrader} message ProtoOATrader
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATrader.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.balance =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.balance = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.balanceVersion =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.balanceVersion = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.managerBonus =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.managerBonus = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ibBonus =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ibBonus = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.nonWithdrawableBonus =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.nonWithdrawableBonus = options.longs === String ? "0" : 0;
      object.accessRights = options.enums === String ? "FULL_ACCESS" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.depositAssetId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.depositAssetId = options.longs === String ? "0" : 0;
      object.swapFree = false;
      object.leverageInCents = 0;
      object.totalMarginCalculationType = options.enums === String ? "MAX" : 0;
      object.maxLeverage = 0;
      object.frenchRisk = false;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.traderLogin =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.traderLogin = options.longs === String ? "0" : 0;
      object.accountType = options.enums === String ? "HEDGED" : 0;
      object.brokerName = "";
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.registrationTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.registrationTimestamp = options.longs === String ? "0" : 0;
    }
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber()
            : message.ctidTraderAccountId;
    if (message.balance != null && message.hasOwnProperty("balance"))
      if (typeof message.balance === "number")
        object.balance =
          options.longs === String ? String(message.balance) : message.balance;
      else
        object.balance =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.balance)
            : options.longs === Number
            ? new $util.LongBits(
                message.balance.low >>> 0,
                message.balance.high >>> 0
              ).toNumber()
            : message.balance;
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      if (typeof message.balanceVersion === "number")
        object.balanceVersion =
          options.longs === String
            ? String(message.balanceVersion)
            : message.balanceVersion;
      else
        object.balanceVersion =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.balanceVersion)
            : options.longs === Number
            ? new $util.LongBits(
                message.balanceVersion.low >>> 0,
                message.balanceVersion.high >>> 0
              ).toNumber()
            : message.balanceVersion;
    if (message.managerBonus != null && message.hasOwnProperty("managerBonus"))
      if (typeof message.managerBonus === "number")
        object.managerBonus =
          options.longs === String
            ? String(message.managerBonus)
            : message.managerBonus;
      else
        object.managerBonus =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.managerBonus)
            : options.longs === Number
            ? new $util.LongBits(
                message.managerBonus.low >>> 0,
                message.managerBonus.high >>> 0
              ).toNumber()
            : message.managerBonus;
    if (message.ibBonus != null && message.hasOwnProperty("ibBonus"))
      if (typeof message.ibBonus === "number")
        object.ibBonus =
          options.longs === String ? String(message.ibBonus) : message.ibBonus;
      else
        object.ibBonus =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ibBonus)
            : options.longs === Number
            ? new $util.LongBits(
                message.ibBonus.low >>> 0,
                message.ibBonus.high >>> 0
              ).toNumber()
            : message.ibBonus;
    if (
      message.nonWithdrawableBonus != null &&
      message.hasOwnProperty("nonWithdrawableBonus")
    )
      if (typeof message.nonWithdrawableBonus === "number")
        object.nonWithdrawableBonus =
          options.longs === String
            ? String(message.nonWithdrawableBonus)
            : message.nonWithdrawableBonus;
      else
        object.nonWithdrawableBonus =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.nonWithdrawableBonus)
            : options.longs === Number
            ? new $util.LongBits(
                message.nonWithdrawableBonus.low >>> 0,
                message.nonWithdrawableBonus.high >>> 0
              ).toNumber()
            : message.nonWithdrawableBonus;
    if (message.accessRights != null && message.hasOwnProperty("accessRights"))
      object.accessRights =
        options.enums === String
          ? $root.ProtoOAAccessRights[message.accessRights]
          : message.accessRights;
    if (
      message.depositAssetId != null &&
      message.hasOwnProperty("depositAssetId")
    )
      if (typeof message.depositAssetId === "number")
        object.depositAssetId =
          options.longs === String
            ? String(message.depositAssetId)
            : message.depositAssetId;
      else
        object.depositAssetId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.depositAssetId)
            : options.longs === Number
            ? new $util.LongBits(
                message.depositAssetId.low >>> 0,
                message.depositAssetId.high >>> 0
              ).toNumber()
            : message.depositAssetId;
    if (message.swapFree != null && message.hasOwnProperty("swapFree"))
      object.swapFree = message.swapFree;
    if (
      message.leverageInCents != null &&
      message.hasOwnProperty("leverageInCents")
    )
      object.leverageInCents = message.leverageInCents;
    if (
      message.totalMarginCalculationType != null &&
      message.hasOwnProperty("totalMarginCalculationType")
    )
      object.totalMarginCalculationType =
        options.enums === String
          ? $root.ProtoOATotalMarginCalculationType[
              message.totalMarginCalculationType
            ]
          : message.totalMarginCalculationType;
    if (message.maxLeverage != null && message.hasOwnProperty("maxLeverage"))
      object.maxLeverage = message.maxLeverage;
    if (message.frenchRisk != null && message.hasOwnProperty("frenchRisk"))
      object.frenchRisk = message.frenchRisk;
    if (message.traderLogin != null && message.hasOwnProperty("traderLogin"))
      if (typeof message.traderLogin === "number")
        object.traderLogin =
          options.longs === String
            ? String(message.traderLogin)
            : message.traderLogin;
      else
        object.traderLogin =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.traderLogin)
            : options.longs === Number
            ? new $util.LongBits(
                message.traderLogin.low >>> 0,
                message.traderLogin.high >>> 0
              ).toNumber()
            : message.traderLogin;
    if (message.accountType != null && message.hasOwnProperty("accountType"))
      object.accountType =
        options.enums === String
          ? $root.ProtoOAAccountType[message.accountType]
          : message.accountType;
    if (message.brokerName != null && message.hasOwnProperty("brokerName"))
      object.brokerName = message.brokerName;
    if (
      message.registrationTimestamp != null &&
      message.hasOwnProperty("registrationTimestamp")
    )
      if (typeof message.registrationTimestamp === "number")
        object.registrationTimestamp =
          options.longs === String
            ? String(message.registrationTimestamp)
            : message.registrationTimestamp;
      else
        object.registrationTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.registrationTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.registrationTimestamp.low >>> 0,
                message.registrationTimestamp.high >>> 0
              ).toNumber()
            : message.registrationTimestamp;
    return object;
  };

  /**
   * Converts this ProtoOATrader to JSON.
   * @function toJSON
   * @memberof ProtoOATrader
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATrader.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATrader;
})();

/**
 * Position status ENUM.
 * @exports ProtoOAPositionStatus
 * @enum {string}
 * @property {number} POSITION_STATUS_OPEN=1 POSITION_STATUS_OPEN value
 * @property {number} POSITION_STATUS_CLOSED=2 POSITION_STATUS_CLOSED value
 * @property {number} POSITION_STATUS_CREATED=3 POSITION_STATUS_CREATED value
 * @property {number} POSITION_STATUS_ERROR=4 POSITION_STATUS_ERROR value
 */
$root.ProtoOAPositionStatus = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "POSITION_STATUS_OPEN")] = 1;
  values[(valuesById[2] = "POSITION_STATUS_CLOSED")] = 2;
  values[(valuesById[3] = "POSITION_STATUS_CREATED")] = 3;
  values[(valuesById[4] = "POSITION_STATUS_ERROR")] = 4;
  return values;
})();

/**
 * Trader side ENUM. Used for order, position, deal.
 * @exports ProtoOATradeSide
 * @enum {string}
 * @property {number} BUY=1 BUY value
 * @property {number} SELL=2 SELL value
 */
$root.ProtoOATradeSide = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "BUY")] = 1;
  values[(valuesById[2] = "SELL")] = 2;
  return values;
})();

/**
 * Order type ENUM.
 * @exports ProtoOAOrderType
 * @enum {string}
 * @property {number} MARKET=1 MARKET value
 * @property {number} LIMIT=2 LIMIT value
 * @property {number} STOP=3 STOP value
 * @property {number} STOP_LOSS_TAKE_PROFIT=4 STOP_LOSS_TAKE_PROFIT value
 * @property {number} MARKET_RANGE=5 MARKET_RANGE value
 * @property {number} STOP_LIMIT=6 STOP_LIMIT value
 */
$root.ProtoOAOrderType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "MARKET")] = 1;
  values[(valuesById[2] = "LIMIT")] = 2;
  values[(valuesById[3] = "STOP")] = 3;
  values[(valuesById[4] = "STOP_LOSS_TAKE_PROFIT")] = 4;
  values[(valuesById[5] = "MARKET_RANGE")] = 5;
  values[(valuesById[6] = "STOP_LIMIT")] = 6;
  return values;
})();

/**
 * Order's time in force ENUM.
 * @exports ProtoOATimeInForce
 * @enum {string}
 * @property {number} GOOD_TILL_DATE=1 GOOD_TILL_DATE value
 * @property {number} GOOD_TILL_CANCEL=2 GOOD_TILL_CANCEL value
 * @property {number} IMMEDIATE_OR_CANCEL=3 IMMEDIATE_OR_CANCEL value
 * @property {number} FILL_OR_KILL=4 FILL_OR_KILL value
 * @property {number} MARKET_ON_OPEN=5 MARKET_ON_OPEN value
 */
$root.ProtoOATimeInForce = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "GOOD_TILL_DATE")] = 1;
  values[(valuesById[2] = "GOOD_TILL_CANCEL")] = 2;
  values[(valuesById[3] = "IMMEDIATE_OR_CANCEL")] = 3;
  values[(valuesById[4] = "FILL_OR_KILL")] = 4;
  values[(valuesById[5] = "MARKET_ON_OPEN")] = 5;
  return values;
})();

/**
 * Order status ENUM.
 * @exports ProtoOAOrderStatus
 * @enum {string}
 * @property {number} ORDER_STATUS_ACCEPTED=1 ORDER_STATUS_ACCEPTED value
 * @property {number} ORDER_STATUS_FILLED=2 ORDER_STATUS_FILLED value
 * @property {number} ORDER_STATUS_REJECTED=3 ORDER_STATUS_REJECTED value
 * @property {number} ORDER_STATUS_EXPIRED=4 ORDER_STATUS_EXPIRED value
 * @property {number} ORDER_STATUS_CANCELLED=5 ORDER_STATUS_CANCELLED value
 */
$root.ProtoOAOrderStatus = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "ORDER_STATUS_ACCEPTED")] = 1;
  values[(valuesById[2] = "ORDER_STATUS_FILLED")] = 2;
  values[(valuesById[3] = "ORDER_STATUS_REJECTED")] = 3;
  values[(valuesById[4] = "ORDER_STATUS_EXPIRED")] = 4;
  values[(valuesById[5] = "ORDER_STATUS_CANCELLED")] = 5;
  return values;
})();

/**
 * Stop Order and Stop Lost triggering method ENUM.
 * @exports ProtoOAOrderTriggerMethod
 * @enum {string}
 * @property {number} TRADE=1 TRADE value
 * @property {number} OPPOSITE=2 OPPOSITE value
 * @property {number} DOUBLE_TRADE=3 DOUBLE_TRADE value
 * @property {number} DOUBLE_OPPOSITE=4 DOUBLE_OPPOSITE value
 */
$root.ProtoOAOrderTriggerMethod = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "TRADE")] = 1;
  values[(valuesById[2] = "OPPOSITE")] = 2;
  values[(valuesById[3] = "DOUBLE_TRADE")] = 3;
  values[(valuesById[4] = "DOUBLE_OPPOSITE")] = 4;
  return values;
})();

$root.ProtoOAPosition = (function() {
  /**
   * Properties of a ProtoOAPosition.
   * @exports IProtoOAPosition
   * @interface IProtoOAPosition
   * @property {number|Long} positionId ProtoOAPosition positionId
   * @property {IProtoOATradeData} tradeData ProtoOAPosition tradeData
   * @property {ProtoOAPositionStatus} positionStatus ProtoOAPosition positionStatus
   * @property {number|Long} swap ProtoOAPosition swap
   * @property {number|null} [price] ProtoOAPosition price
   * @property {number|null} [stopLoss] ProtoOAPosition stopLoss
   * @property {number|null} [takeProfit] ProtoOAPosition takeProfit
   * @property {number|Long|null} [utcLastUpdateTimestamp] ProtoOAPosition utcLastUpdateTimestamp
   * @property {number|Long|null} [commission] ProtoOAPosition commission
   * @property {number|null} [marginRate] ProtoOAPosition marginRate
   * @property {number|Long|null} [mirroringCommission] ProtoOAPosition mirroringCommission
   * @property {boolean|null} [guaranteedStopLoss] ProtoOAPosition guaranteedStopLoss
   * @property {number|Long|null} [usedMargin] ProtoOAPosition usedMargin
   * @property {ProtoOAOrderTriggerMethod|null} [stopLossTriggerMethod] ProtoOAPosition stopLossTriggerMethod
   */

  /**
   * Constructs a new ProtoOAPosition.
   * @exports ProtoOAPosition
   * @classdesc Trade position entity.
   * @implements IProtoOAPosition
   * @constructor
   * @param {IProtoOAPosition=} [properties] Properties to set
   */
  function ProtoOAPosition(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAPosition positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAPosition tradeData.
   * @member {IProtoOATradeData} tradeData
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.tradeData = null;

  /**
   * ProtoOAPosition positionStatus.
   * @member {ProtoOAPositionStatus} positionStatus
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.positionStatus = 1;

  /**
   * ProtoOAPosition swap.
   * @member {number|Long} swap
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.swap = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAPosition price.
   * @member {number} price
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.price = 0;

  /**
   * ProtoOAPosition stopLoss.
   * @member {number} stopLoss
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.stopLoss = 0;

  /**
   * ProtoOAPosition takeProfit.
   * @member {number} takeProfit
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.takeProfit = 0;

  /**
   * ProtoOAPosition utcLastUpdateTimestamp.
   * @member {number|Long} utcLastUpdateTimestamp
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.utcLastUpdateTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAPosition commission.
   * @member {number|Long} commission
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.commission = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAPosition marginRate.
   * @member {number} marginRate
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.marginRate = 0;

  /**
   * ProtoOAPosition mirroringCommission.
   * @member {number|Long} mirroringCommission
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.mirroringCommission = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAPosition guaranteedStopLoss.
   * @member {boolean} guaranteedStopLoss
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.guaranteedStopLoss = false;

  /**
   * ProtoOAPosition usedMargin.
   * @member {number|Long} usedMargin
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.usedMargin = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOAPosition stopLossTriggerMethod.
   * @member {ProtoOAOrderTriggerMethod} stopLossTriggerMethod
   * @memberof ProtoOAPosition
   * @instance
   */
  ProtoOAPosition.prototype.stopLossTriggerMethod = 1;

  /**
   * Creates a new ProtoOAPosition instance using the specified properties.
   * @function create
   * @memberof ProtoOAPosition
   * @static
   * @param {IProtoOAPosition=} [properties] Properties to set
   * @returns {ProtoOAPosition} ProtoOAPosition instance
   */
  ProtoOAPosition.create = function create(properties) {
    return new ProtoOAPosition(properties);
  };

  /**
   * Encodes the specified ProtoOAPosition message. Does not implicitly {@link ProtoOAPosition.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAPosition
   * @static
   * @param {IProtoOAPosition} message ProtoOAPosition message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAPosition.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.positionId);
    $root.ProtoOATradeData.encode(
      message.tradeData,
      writer.uint32(/* id 2, wireType 2 =*/ 18).fork()
    ).ldelim();
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.positionStatus);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.swap);
    if (message.price != null && message.hasOwnProperty("price"))
      writer.uint32(/* id 5, wireType 1 =*/ 41).double(message.price);
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      writer.uint32(/* id 6, wireType 1 =*/ 49).double(message.stopLoss);
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      writer.uint32(/* id 7, wireType 1 =*/ 57).double(message.takeProfit);
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      writer
        .uint32(/* id 8, wireType 0 =*/ 64)
        .int64(message.utcLastUpdateTimestamp);
    if (message.commission != null && message.hasOwnProperty("commission"))
      writer.uint32(/* id 9, wireType 0 =*/ 72).int64(message.commission);
    if (message.marginRate != null && message.hasOwnProperty("marginRate"))
      writer.uint32(/* id 10, wireType 1 =*/ 81).double(message.marginRate);
    if (
      message.mirroringCommission != null &&
      message.hasOwnProperty("mirroringCommission")
    )
      writer
        .uint32(/* id 11, wireType 0 =*/ 88)
        .int64(message.mirroringCommission);
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      writer
        .uint32(/* id 12, wireType 0 =*/ 96)
        .bool(message.guaranteedStopLoss);
    if (message.usedMargin != null && message.hasOwnProperty("usedMargin"))
      writer.uint32(/* id 13, wireType 0 =*/ 104).uint64(message.usedMargin);
    if (
      message.stopLossTriggerMethod != null &&
      message.hasOwnProperty("stopLossTriggerMethod")
    )
      writer
        .uint32(/* id 14, wireType 0 =*/ 112)
        .int32(message.stopLossTriggerMethod);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAPosition message, length delimited. Does not implicitly {@link ProtoOAPosition.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAPosition
   * @static
   * @param {IProtoOAPosition} message ProtoOAPosition message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAPosition.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAPosition message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAPosition
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAPosition} ProtoOAPosition
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAPosition.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAPosition();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.positionId = reader.int64();
          break;
        case 2:
          message.tradeData = $root.ProtoOATradeData.decode(
            reader,
            reader.uint32()
          );
          break;
        case 3:
          message.positionStatus = reader.int32();
          break;
        case 4:
          message.swap = reader.int64();
          break;
        case 5:
          message.price = reader.double();
          break;
        case 6:
          message.stopLoss = reader.double();
          break;
        case 7:
          message.takeProfit = reader.double();
          break;
        case 8:
          message.utcLastUpdateTimestamp = reader.int64();
          break;
        case 9:
          message.commission = reader.int64();
          break;
        case 10:
          message.marginRate = reader.double();
          break;
        case 11:
          message.mirroringCommission = reader.int64();
          break;
        case 12:
          message.guaranteedStopLoss = reader.bool();
          break;
        case 13:
          message.usedMargin = reader.uint64();
          break;
        case 14:
          message.stopLossTriggerMethod = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("positionId"))
      throw $util.ProtocolError("missing required 'positionId'", {
        instance: message
      });
    if (!message.hasOwnProperty("tradeData"))
      throw $util.ProtocolError("missing required 'tradeData'", {
        instance: message
      });
    if (!message.hasOwnProperty("positionStatus"))
      throw $util.ProtocolError("missing required 'positionStatus'", {
        instance: message
      });
    if (!message.hasOwnProperty("swap"))
      throw $util.ProtocolError("missing required 'swap'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAPosition message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAPosition
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAPosition} ProtoOAPosition
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAPosition.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAPosition message.
   * @function verify
   * @memberof ProtoOAPosition
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAPosition.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.positionId) &&
      !(
        message.positionId &&
        $util.isInteger(message.positionId.low) &&
        $util.isInteger(message.positionId.high)
      )
    )
      return "positionId: integer|Long expected";
    {
      var error = $root.ProtoOATradeData.verify(message.tradeData);
      if (error) return "tradeData." + error;
    }
    switch (message.positionStatus) {
      default:
        return "positionStatus: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
        break;
    }
    if (
      !$util.isInteger(message.swap) &&
      !(
        message.swap &&
        $util.isInteger(message.swap.low) &&
        $util.isInteger(message.swap.high)
      )
    )
      return "swap: integer|Long expected";
    if (message.price != null && message.hasOwnProperty("price"))
      if (typeof message.price !== "number") return "price: number expected";
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      if (typeof message.stopLoss !== "number")
        return "stopLoss: number expected";
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      if (typeof message.takeProfit !== "number")
        return "takeProfit: number expected";
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      if (
        !$util.isInteger(message.utcLastUpdateTimestamp) &&
        !(
          message.utcLastUpdateTimestamp &&
          $util.isInteger(message.utcLastUpdateTimestamp.low) &&
          $util.isInteger(message.utcLastUpdateTimestamp.high)
        )
      )
        return "utcLastUpdateTimestamp: integer|Long expected";
    if (message.commission != null && message.hasOwnProperty("commission"))
      if (
        !$util.isInteger(message.commission) &&
        !(
          message.commission &&
          $util.isInteger(message.commission.low) &&
          $util.isInteger(message.commission.high)
        )
      )
        return "commission: integer|Long expected";
    if (message.marginRate != null && message.hasOwnProperty("marginRate"))
      if (typeof message.marginRate !== "number")
        return "marginRate: number expected";
    if (
      message.mirroringCommission != null &&
      message.hasOwnProperty("mirroringCommission")
    )
      if (
        !$util.isInteger(message.mirroringCommission) &&
        !(
          message.mirroringCommission &&
          $util.isInteger(message.mirroringCommission.low) &&
          $util.isInteger(message.mirroringCommission.high)
        )
      )
        return "mirroringCommission: integer|Long expected";
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      if (typeof message.guaranteedStopLoss !== "boolean")
        return "guaranteedStopLoss: boolean expected";
    if (message.usedMargin != null && message.hasOwnProperty("usedMargin"))
      if (
        !$util.isInteger(message.usedMargin) &&
        !(
          message.usedMargin &&
          $util.isInteger(message.usedMargin.low) &&
          $util.isInteger(message.usedMargin.high)
        )
      )
        return "usedMargin: integer|Long expected";
    if (
      message.stopLossTriggerMethod != null &&
      message.hasOwnProperty("stopLossTriggerMethod")
    )
      switch (message.stopLossTriggerMethod) {
        default:
          return "stopLossTriggerMethod: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOAPosition message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAPosition
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAPosition} ProtoOAPosition
   */
  ProtoOAPosition.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAPosition) return object;
    var message = new $root.ProtoOAPosition();
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.tradeData != null) {
      if (typeof object.tradeData !== "object")
        throw TypeError(".ProtoOAPosition.tradeData: object expected");
      message.tradeData = $root.ProtoOATradeData.fromObject(object.tradeData);
    }
    switch (object.positionStatus) {
      case "POSITION_STATUS_OPEN":
      case 1:
        message.positionStatus = 1;
        break;
      case "POSITION_STATUS_CLOSED":
      case 2:
        message.positionStatus = 2;
        break;
      case "POSITION_STATUS_CREATED":
      case 3:
        message.positionStatus = 3;
        break;
      case "POSITION_STATUS_ERROR":
      case 4:
        message.positionStatus = 4;
        break;
    }
    if (object.swap != null)
      if ($util.Long)
        (message.swap = $util.Long.fromValue(object.swap)).unsigned = false;
      else if (typeof object.swap === "string")
        message.swap = parseInt(object.swap, 10);
      else if (typeof object.swap === "number") message.swap = object.swap;
      else if (typeof object.swap === "object")
        message.swap = new $util.LongBits(
          object.swap.low >>> 0,
          object.swap.high >>> 0
        ).toNumber();
    if (object.price != null) message.price = Number(object.price);
    if (object.stopLoss != null) message.stopLoss = Number(object.stopLoss);
    if (object.takeProfit != null)
      message.takeProfit = Number(object.takeProfit);
    if (object.utcLastUpdateTimestamp != null)
      if ($util.Long)
        (message.utcLastUpdateTimestamp = $util.Long.fromValue(
          object.utcLastUpdateTimestamp
        )).unsigned = false;
      else if (typeof object.utcLastUpdateTimestamp === "string")
        message.utcLastUpdateTimestamp = parseInt(
          object.utcLastUpdateTimestamp,
          10
        );
      else if (typeof object.utcLastUpdateTimestamp === "number")
        message.utcLastUpdateTimestamp = object.utcLastUpdateTimestamp;
      else if (typeof object.utcLastUpdateTimestamp === "object")
        message.utcLastUpdateTimestamp = new $util.LongBits(
          object.utcLastUpdateTimestamp.low >>> 0,
          object.utcLastUpdateTimestamp.high >>> 0
        ).toNumber();
    if (object.commission != null)
      if ($util.Long)
        (message.commission = $util.Long.fromValue(
          object.commission
        )).unsigned = false;
      else if (typeof object.commission === "string")
        message.commission = parseInt(object.commission, 10);
      else if (typeof object.commission === "number")
        message.commission = object.commission;
      else if (typeof object.commission === "object")
        message.commission = new $util.LongBits(
          object.commission.low >>> 0,
          object.commission.high >>> 0
        ).toNumber();
    if (object.marginRate != null)
      message.marginRate = Number(object.marginRate);
    if (object.mirroringCommission != null)
      if ($util.Long)
        (message.mirroringCommission = $util.Long.fromValue(
          object.mirroringCommission
        )).unsigned = false;
      else if (typeof object.mirroringCommission === "string")
        message.mirroringCommission = parseInt(object.mirroringCommission, 10);
      else if (typeof object.mirroringCommission === "number")
        message.mirroringCommission = object.mirroringCommission;
      else if (typeof object.mirroringCommission === "object")
        message.mirroringCommission = new $util.LongBits(
          object.mirroringCommission.low >>> 0,
          object.mirroringCommission.high >>> 0
        ).toNumber();
    if (object.guaranteedStopLoss != null)
      message.guaranteedStopLoss = Boolean(object.guaranteedStopLoss);
    if (object.usedMargin != null)
      if ($util.Long)
        (message.usedMargin = $util.Long.fromValue(
          object.usedMargin
        )).unsigned = true;
      else if (typeof object.usedMargin === "string")
        message.usedMargin = parseInt(object.usedMargin, 10);
      else if (typeof object.usedMargin === "number")
        message.usedMargin = object.usedMargin;
      else if (typeof object.usedMargin === "object")
        message.usedMargin = new $util.LongBits(
          object.usedMargin.low >>> 0,
          object.usedMargin.high >>> 0
        ).toNumber(true);
    switch (object.stopLossTriggerMethod) {
      case "TRADE":
      case 1:
        message.stopLossTriggerMethod = 1;
        break;
      case "OPPOSITE":
      case 2:
        message.stopLossTriggerMethod = 2;
        break;
      case "DOUBLE_TRADE":
      case 3:
        message.stopLossTriggerMethod = 3;
        break;
      case "DOUBLE_OPPOSITE":
      case 4:
        message.stopLossTriggerMethod = 4;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAPosition message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAPosition
   * @static
   * @param {ProtoOAPosition} message ProtoOAPosition
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAPosition.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      object.tradeData = null;
      object.positionStatus =
        options.enums === String ? "POSITION_STATUS_OPEN" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.swap =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.swap = options.longs === String ? "0" : 0;
      object.price = 0;
      object.stopLoss = 0;
      object.takeProfit = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.utcLastUpdateTimestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.commission =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.commission = options.longs === String ? "0" : 0;
      object.marginRate = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.mirroringCommission =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.mirroringCommission = options.longs === String ? "0" : 0;
      object.guaranteedStopLoss = false;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.usedMargin =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.usedMargin = options.longs === String ? "0" : 0;
      object.stopLossTriggerMethod = options.enums === String ? "TRADE" : 1;
    }
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (message.tradeData != null && message.hasOwnProperty("tradeData"))
      object.tradeData = $root.ProtoOATradeData.toObject(
        message.tradeData,
        options
      );
    if (
      message.positionStatus != null &&
      message.hasOwnProperty("positionStatus")
    )
      object.positionStatus =
        options.enums === String
          ? $root.ProtoOAPositionStatus[message.positionStatus]
          : message.positionStatus;
    if (message.swap != null && message.hasOwnProperty("swap"))
      if (typeof message.swap === "number")
        object.swap =
          options.longs === String ? String(message.swap) : message.swap;
      else
        object.swap =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.swap)
            : options.longs === Number
            ? new $util.LongBits(
                message.swap.low >>> 0,
                message.swap.high >>> 0
              ).toNumber()
            : message.swap;
    if (message.price != null && message.hasOwnProperty("price"))
      object.price =
        options.json && !isFinite(message.price)
          ? String(message.price)
          : message.price;
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      object.stopLoss =
        options.json && !isFinite(message.stopLoss)
          ? String(message.stopLoss)
          : message.stopLoss;
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      object.takeProfit =
        options.json && !isFinite(message.takeProfit)
          ? String(message.takeProfit)
          : message.takeProfit;
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      if (typeof message.utcLastUpdateTimestamp === "number")
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? String(message.utcLastUpdateTimestamp)
            : message.utcLastUpdateTimestamp;
      else
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.utcLastUpdateTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.utcLastUpdateTimestamp.low >>> 0,
                message.utcLastUpdateTimestamp.high >>> 0
              ).toNumber()
            : message.utcLastUpdateTimestamp;
    if (message.commission != null && message.hasOwnProperty("commission"))
      if (typeof message.commission === "number")
        object.commission =
          options.longs === String
            ? String(message.commission)
            : message.commission;
      else
        object.commission =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.commission)
            : options.longs === Number
            ? new $util.LongBits(
                message.commission.low >>> 0,
                message.commission.high >>> 0
              ).toNumber()
            : message.commission;
    if (message.marginRate != null && message.hasOwnProperty("marginRate"))
      object.marginRate =
        options.json && !isFinite(message.marginRate)
          ? String(message.marginRate)
          : message.marginRate;
    if (
      message.mirroringCommission != null &&
      message.hasOwnProperty("mirroringCommission")
    )
      if (typeof message.mirroringCommission === "number")
        object.mirroringCommission =
          options.longs === String
            ? String(message.mirroringCommission)
            : message.mirroringCommission;
      else
        object.mirroringCommission =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.mirroringCommission)
            : options.longs === Number
            ? new $util.LongBits(
                message.mirroringCommission.low >>> 0,
                message.mirroringCommission.high >>> 0
              ).toNumber()
            : message.mirroringCommission;
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      object.guaranteedStopLoss = message.guaranteedStopLoss;
    if (message.usedMargin != null && message.hasOwnProperty("usedMargin"))
      if (typeof message.usedMargin === "number")
        object.usedMargin =
          options.longs === String
            ? String(message.usedMargin)
            : message.usedMargin;
      else
        object.usedMargin =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.usedMargin)
            : options.longs === Number
            ? new $util.LongBits(
                message.usedMargin.low >>> 0,
                message.usedMargin.high >>> 0
              ).toNumber(true)
            : message.usedMargin;
    if (
      message.stopLossTriggerMethod != null &&
      message.hasOwnProperty("stopLossTriggerMethod")
    )
      object.stopLossTriggerMethod =
        options.enums === String
          ? $root.ProtoOAOrderTriggerMethod[message.stopLossTriggerMethod]
          : message.stopLossTriggerMethod;
    return object;
  };

  /**
   * Converts this ProtoOAPosition to JSON.
   * @function toJSON
   * @memberof ProtoOAPosition
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAPosition.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAPosition;
})();

$root.ProtoOATradeData = (function() {
  /**
   * Properties of a ProtoOATradeData.
   * @exports IProtoOATradeData
   * @interface IProtoOATradeData
   * @property {number|Long} symbolId ProtoOATradeData symbolId
   * @property {number|Long} volume ProtoOATradeData volume
   * @property {ProtoOATradeSide} tradeSide ProtoOATradeData tradeSide
   * @property {number|Long|null} [openTimestamp] ProtoOATradeData openTimestamp
   * @property {string|null} [label] ProtoOATradeData label
   * @property {boolean|null} [guaranteedStopLoss] ProtoOATradeData guaranteedStopLoss
   */

  /**
   * Constructs a new ProtoOATradeData.
   * @exports ProtoOATradeData
   * @classdesc Position/order trading details entity.
   * @implements IProtoOATradeData
   * @constructor
   * @param {IProtoOATradeData=} [properties] Properties to set
   */
  function ProtoOATradeData(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATradeData symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOATradeData
   * @instance
   */
  ProtoOATradeData.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATradeData volume.
   * @member {number|Long} volume
   * @memberof ProtoOATradeData
   * @instance
   */
  ProtoOATradeData.prototype.volume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATradeData tradeSide.
   * @member {ProtoOATradeSide} tradeSide
   * @memberof ProtoOATradeData
   * @instance
   */
  ProtoOATradeData.prototype.tradeSide = 1;

  /**
   * ProtoOATradeData openTimestamp.
   * @member {number|Long} openTimestamp
   * @memberof ProtoOATradeData
   * @instance
   */
  ProtoOATradeData.prototype.openTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATradeData label.
   * @member {string} label
   * @memberof ProtoOATradeData
   * @instance
   */
  ProtoOATradeData.prototype.label = "";

  /**
   * ProtoOATradeData guaranteedStopLoss.
   * @member {boolean} guaranteedStopLoss
   * @memberof ProtoOATradeData
   * @instance
   */
  ProtoOATradeData.prototype.guaranteedStopLoss = false;

  /**
   * Creates a new ProtoOATradeData instance using the specified properties.
   * @function create
   * @memberof ProtoOATradeData
   * @static
   * @param {IProtoOATradeData=} [properties] Properties to set
   * @returns {ProtoOATradeData} ProtoOATradeData instance
   */
  ProtoOATradeData.create = function create(properties) {
    return new ProtoOATradeData(properties);
  };

  /**
   * Encodes the specified ProtoOATradeData message. Does not implicitly {@link ProtoOATradeData.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATradeData
   * @static
   * @param {IProtoOATradeData} message ProtoOATradeData message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATradeData.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.symbolId);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.volume);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.tradeSide);
    if (
      message.openTimestamp != null &&
      message.hasOwnProperty("openTimestamp")
    )
      writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.openTimestamp);
    if (message.label != null && message.hasOwnProperty("label"))
      writer.uint32(/* id 5, wireType 2 =*/ 42).string(message.label);
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      writer
        .uint32(/* id 6, wireType 0 =*/ 48)
        .bool(message.guaranteedStopLoss);
    return writer;
  };

  /**
   * Encodes the specified ProtoOATradeData message, length delimited. Does not implicitly {@link ProtoOATradeData.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATradeData
   * @static
   * @param {IProtoOATradeData} message ProtoOATradeData message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATradeData.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATradeData message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATradeData
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATradeData} ProtoOATradeData
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATradeData.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATradeData();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.symbolId = reader.int64();
          break;
        case 2:
          message.volume = reader.int64();
          break;
        case 3:
          message.tradeSide = reader.int32();
          break;
        case 4:
          message.openTimestamp = reader.int64();
          break;
        case 5:
          message.label = reader.string();
          break;
        case 6:
          message.guaranteedStopLoss = reader.bool();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    if (!message.hasOwnProperty("volume"))
      throw $util.ProtocolError("missing required 'volume'", {
        instance: message
      });
    if (!message.hasOwnProperty("tradeSide"))
      throw $util.ProtocolError("missing required 'tradeSide'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATradeData message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATradeData
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATradeData} ProtoOATradeData
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATradeData.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATradeData message.
   * @function verify
   * @memberof ProtoOATradeData
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATradeData.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    if (
      !$util.isInteger(message.volume) &&
      !(
        message.volume &&
        $util.isInteger(message.volume.low) &&
        $util.isInteger(message.volume.high)
      )
    )
      return "volume: integer|Long expected";
    switch (message.tradeSide) {
      default:
        return "tradeSide: enum value expected";
      case 1:
      case 2:
        break;
    }
    if (
      message.openTimestamp != null &&
      message.hasOwnProperty("openTimestamp")
    )
      if (
        !$util.isInteger(message.openTimestamp) &&
        !(
          message.openTimestamp &&
          $util.isInteger(message.openTimestamp.low) &&
          $util.isInteger(message.openTimestamp.high)
        )
      )
        return "openTimestamp: integer|Long expected";
    if (message.label != null && message.hasOwnProperty("label"))
      if (!$util.isString(message.label)) return "label: string expected";
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      if (typeof message.guaranteedStopLoss !== "boolean")
        return "guaranteedStopLoss: boolean expected";
    return null;
  };

  /**
   * Creates a ProtoOATradeData message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATradeData
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATradeData} ProtoOATradeData
   */
  ProtoOATradeData.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATradeData) return object;
    var message = new $root.ProtoOATradeData();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    if (object.volume != null)
      if ($util.Long)
        (message.volume = $util.Long.fromValue(object.volume)).unsigned = false;
      else if (typeof object.volume === "string")
        message.volume = parseInt(object.volume, 10);
      else if (typeof object.volume === "number")
        message.volume = object.volume;
      else if (typeof object.volume === "object")
        message.volume = new $util.LongBits(
          object.volume.low >>> 0,
          object.volume.high >>> 0
        ).toNumber();
    switch (object.tradeSide) {
      case "BUY":
      case 1:
        message.tradeSide = 1;
        break;
      case "SELL":
      case 2:
        message.tradeSide = 2;
        break;
    }
    if (object.openTimestamp != null)
      if ($util.Long)
        (message.openTimestamp = $util.Long.fromValue(
          object.openTimestamp
        )).unsigned = false;
      else if (typeof object.openTimestamp === "string")
        message.openTimestamp = parseInt(object.openTimestamp, 10);
      else if (typeof object.openTimestamp === "number")
        message.openTimestamp = object.openTimestamp;
      else if (typeof object.openTimestamp === "object")
        message.openTimestamp = new $util.LongBits(
          object.openTimestamp.low >>> 0,
          object.openTimestamp.high >>> 0
        ).toNumber();
    if (object.label != null) message.label = String(object.label);
    if (object.guaranteedStopLoss != null)
      message.guaranteedStopLoss = Boolean(object.guaranteedStopLoss);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATradeData message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATradeData
   * @static
   * @param {ProtoOATradeData} message ProtoOATradeData
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATradeData.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.volume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.volume = options.longs === String ? "0" : 0;
      object.tradeSide = options.enums === String ? "BUY" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.openTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.openTimestamp = options.longs === String ? "0" : 0;
      object.label = "";
      object.guaranteedStopLoss = false;
    }
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (typeof message.volume === "number")
        object.volume =
          options.longs === String ? String(message.volume) : message.volume;
      else
        object.volume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.volume)
            : options.longs === Number
            ? new $util.LongBits(
                message.volume.low >>> 0,
                message.volume.high >>> 0
              ).toNumber()
            : message.volume;
    if (message.tradeSide != null && message.hasOwnProperty("tradeSide"))
      object.tradeSide =
        options.enums === String
          ? $root.ProtoOATradeSide[message.tradeSide]
          : message.tradeSide;
    if (
      message.openTimestamp != null &&
      message.hasOwnProperty("openTimestamp")
    )
      if (typeof message.openTimestamp === "number")
        object.openTimestamp =
          options.longs === String
            ? String(message.openTimestamp)
            : message.openTimestamp;
      else
        object.openTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.openTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.openTimestamp.low >>> 0,
                message.openTimestamp.high >>> 0
              ).toNumber()
            : message.openTimestamp;
    if (message.label != null && message.hasOwnProperty("label"))
      object.label = message.label;
    if (
      message.guaranteedStopLoss != null &&
      message.hasOwnProperty("guaranteedStopLoss")
    )
      object.guaranteedStopLoss = message.guaranteedStopLoss;
    return object;
  };

  /**
   * Converts this ProtoOATradeData to JSON.
   * @function toJSON
   * @memberof ProtoOATradeData
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATradeData.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATradeData;
})();

$root.ProtoOAOrder = (function() {
  /**
   * Properties of a ProtoOAOrder.
   * @exports IProtoOAOrder
   * @interface IProtoOAOrder
   * @property {number|Long} orderId ProtoOAOrder orderId
   * @property {IProtoOATradeData} tradeData ProtoOAOrder tradeData
   * @property {ProtoOAOrderType} orderType ProtoOAOrder orderType
   * @property {ProtoOAOrderStatus} orderStatus ProtoOAOrder orderStatus
   * @property {number|Long|null} [expirationTimestamp] ProtoOAOrder expirationTimestamp
   * @property {number|null} [executionPrice] ProtoOAOrder executionPrice
   * @property {number|Long|null} [executedVolume] ProtoOAOrder executedVolume
   * @property {number|Long|null} [utcLastUpdateTimestamp] ProtoOAOrder utcLastUpdateTimestamp
   * @property {number|null} [baseSlippagePrice] ProtoOAOrder baseSlippagePrice
   * @property {number|Long|null} [slippageInPoints] ProtoOAOrder slippageInPoints
   * @property {boolean|null} [closingOrder] ProtoOAOrder closingOrder
   * @property {number|null} [limitPrice] ProtoOAOrder limitPrice
   * @property {number|null} [stopPrice] ProtoOAOrder stopPrice
   * @property {number|null} [stopLoss] ProtoOAOrder stopLoss
   * @property {number|null} [takeProfit] ProtoOAOrder takeProfit
   * @property {string|null} [clientOrderId] ProtoOAOrder clientOrderId
   * @property {ProtoOATimeInForce|null} [timeInForce] ProtoOAOrder timeInForce
   * @property {number|Long|null} [positionId] ProtoOAOrder positionId
   * @property {number|Long|null} [relativeStopLoss] ProtoOAOrder relativeStopLoss
   * @property {number|Long|null} [relativeTakeProfit] ProtoOAOrder relativeTakeProfit
   * @property {boolean|null} [isStopOut] ProtoOAOrder isStopOut
   * @property {boolean|null} [trailingStopLoss] ProtoOAOrder trailingStopLoss
   * @property {ProtoOAOrderTriggerMethod|null} [stopTriggerMethod] ProtoOAOrder stopTriggerMethod
   */

  /**
   * Constructs a new ProtoOAOrder.
   * @exports ProtoOAOrder
   * @classdesc Trade order entity.
   * @implements IProtoOAOrder
   * @constructor
   * @param {IProtoOAOrder=} [properties] Properties to set
   */
  function ProtoOAOrder(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAOrder orderId.
   * @member {number|Long} orderId
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.orderId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder tradeData.
   * @member {IProtoOATradeData} tradeData
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.tradeData = null;

  /**
   * ProtoOAOrder orderType.
   * @member {ProtoOAOrderType} orderType
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.orderType = 1;

  /**
   * ProtoOAOrder orderStatus.
   * @member {ProtoOAOrderStatus} orderStatus
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.orderStatus = 1;

  /**
   * ProtoOAOrder expirationTimestamp.
   * @member {number|Long} expirationTimestamp
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.expirationTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder executionPrice.
   * @member {number} executionPrice
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.executionPrice = 0;

  /**
   * ProtoOAOrder executedVolume.
   * @member {number|Long} executedVolume
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.executedVolume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder utcLastUpdateTimestamp.
   * @member {number|Long} utcLastUpdateTimestamp
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.utcLastUpdateTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder baseSlippagePrice.
   * @member {number} baseSlippagePrice
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.baseSlippagePrice = 0;

  /**
   * ProtoOAOrder slippageInPoints.
   * @member {number|Long} slippageInPoints
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.slippageInPoints = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder closingOrder.
   * @member {boolean} closingOrder
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.closingOrder = false;

  /**
   * ProtoOAOrder limitPrice.
   * @member {number} limitPrice
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.limitPrice = 0;

  /**
   * ProtoOAOrder stopPrice.
   * @member {number} stopPrice
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.stopPrice = 0;

  /**
   * ProtoOAOrder stopLoss.
   * @member {number} stopLoss
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.stopLoss = 0;

  /**
   * ProtoOAOrder takeProfit.
   * @member {number} takeProfit
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.takeProfit = 0;

  /**
   * ProtoOAOrder clientOrderId.
   * @member {string} clientOrderId
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.clientOrderId = "";

  /**
   * ProtoOAOrder timeInForce.
   * @member {ProtoOATimeInForce} timeInForce
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.timeInForce = 3;

  /**
   * ProtoOAOrder positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder relativeStopLoss.
   * @member {number|Long} relativeStopLoss
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.relativeStopLoss = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder relativeTakeProfit.
   * @member {number|Long} relativeTakeProfit
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.relativeTakeProfit = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAOrder isStopOut.
   * @member {boolean} isStopOut
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.isStopOut = false;

  /**
   * ProtoOAOrder trailingStopLoss.
   * @member {boolean} trailingStopLoss
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.trailingStopLoss = false;

  /**
   * ProtoOAOrder stopTriggerMethod.
   * @member {ProtoOAOrderTriggerMethod} stopTriggerMethod
   * @memberof ProtoOAOrder
   * @instance
   */
  ProtoOAOrder.prototype.stopTriggerMethod = 1;

  /**
   * Creates a new ProtoOAOrder instance using the specified properties.
   * @function create
   * @memberof ProtoOAOrder
   * @static
   * @param {IProtoOAOrder=} [properties] Properties to set
   * @returns {ProtoOAOrder} ProtoOAOrder instance
   */
  ProtoOAOrder.create = function create(properties) {
    return new ProtoOAOrder(properties);
  };

  /**
   * Encodes the specified ProtoOAOrder message. Does not implicitly {@link ProtoOAOrder.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAOrder
   * @static
   * @param {IProtoOAOrder} message ProtoOAOrder message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAOrder.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.orderId);
    $root.ProtoOATradeData.encode(
      message.tradeData,
      writer.uint32(/* id 2, wireType 2 =*/ 18).fork()
    ).ldelim();
    writer.uint32(/* id 3, wireType 0 =*/ 24).int32(message.orderType);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.orderStatus);
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      writer
        .uint32(/* id 6, wireType 0 =*/ 48)
        .int64(message.expirationTimestamp);
    if (
      message.executionPrice != null &&
      message.hasOwnProperty("executionPrice")
    )
      writer.uint32(/* id 7, wireType 1 =*/ 57).double(message.executionPrice);
    if (
      message.executedVolume != null &&
      message.hasOwnProperty("executedVolume")
    )
      writer.uint32(/* id 8, wireType 0 =*/ 64).int64(message.executedVolume);
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      writer
        .uint32(/* id 9, wireType 0 =*/ 72)
        .int64(message.utcLastUpdateTimestamp);
    if (
      message.baseSlippagePrice != null &&
      message.hasOwnProperty("baseSlippagePrice")
    )
      writer
        .uint32(/* id 10, wireType 1 =*/ 81)
        .double(message.baseSlippagePrice);
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      writer
        .uint32(/* id 11, wireType 0 =*/ 88)
        .int64(message.slippageInPoints);
    if (message.closingOrder != null && message.hasOwnProperty("closingOrder"))
      writer.uint32(/* id 12, wireType 0 =*/ 96).bool(message.closingOrder);
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      writer.uint32(/* id 13, wireType 1 =*/ 105).double(message.limitPrice);
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      writer.uint32(/* id 14, wireType 1 =*/ 113).double(message.stopPrice);
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      writer.uint32(/* id 15, wireType 1 =*/ 121).double(message.stopLoss);
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      writer.uint32(/* id 16, wireType 1 =*/ 129).double(message.takeProfit);
    if (
      message.clientOrderId != null &&
      message.hasOwnProperty("clientOrderId")
    )
      writer.uint32(/* id 17, wireType 2 =*/ 138).string(message.clientOrderId);
    if (message.timeInForce != null && message.hasOwnProperty("timeInForce"))
      writer.uint32(/* id 18, wireType 0 =*/ 144).int32(message.timeInForce);
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      writer.uint32(/* id 19, wireType 0 =*/ 152).int64(message.positionId);
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      writer
        .uint32(/* id 20, wireType 0 =*/ 160)
        .int64(message.relativeStopLoss);
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      writer
        .uint32(/* id 21, wireType 0 =*/ 168)
        .int64(message.relativeTakeProfit);
    if (message.isStopOut != null && message.hasOwnProperty("isStopOut"))
      writer.uint32(/* id 22, wireType 0 =*/ 176).bool(message.isStopOut);
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      writer
        .uint32(/* id 23, wireType 0 =*/ 184)
        .bool(message.trailingStopLoss);
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      writer
        .uint32(/* id 24, wireType 0 =*/ 192)
        .int32(message.stopTriggerMethod);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAOrder message, length delimited. Does not implicitly {@link ProtoOAOrder.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAOrder
   * @static
   * @param {IProtoOAOrder} message ProtoOAOrder message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAOrder.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAOrder message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAOrder
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAOrder} ProtoOAOrder
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAOrder.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAOrder();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.orderId = reader.int64();
          break;
        case 2:
          message.tradeData = $root.ProtoOATradeData.decode(
            reader,
            reader.uint32()
          );
          break;
        case 3:
          message.orderType = reader.int32();
          break;
        case 4:
          message.orderStatus = reader.int32();
          break;
        case 6:
          message.expirationTimestamp = reader.int64();
          break;
        case 7:
          message.executionPrice = reader.double();
          break;
        case 8:
          message.executedVolume = reader.int64();
          break;
        case 9:
          message.utcLastUpdateTimestamp = reader.int64();
          break;
        case 10:
          message.baseSlippagePrice = reader.double();
          break;
        case 11:
          message.slippageInPoints = reader.int64();
          break;
        case 12:
          message.closingOrder = reader.bool();
          break;
        case 13:
          message.limitPrice = reader.double();
          break;
        case 14:
          message.stopPrice = reader.double();
          break;
        case 15:
          message.stopLoss = reader.double();
          break;
        case 16:
          message.takeProfit = reader.double();
          break;
        case 17:
          message.clientOrderId = reader.string();
          break;
        case 18:
          message.timeInForce = reader.int32();
          break;
        case 19:
          message.positionId = reader.int64();
          break;
        case 20:
          message.relativeStopLoss = reader.int64();
          break;
        case 21:
          message.relativeTakeProfit = reader.int64();
          break;
        case 22:
          message.isStopOut = reader.bool();
          break;
        case 23:
          message.trailingStopLoss = reader.bool();
          break;
        case 24:
          message.stopTriggerMethod = reader.int32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("orderId"))
      throw $util.ProtocolError("missing required 'orderId'", {
        instance: message
      });
    if (!message.hasOwnProperty("tradeData"))
      throw $util.ProtocolError("missing required 'tradeData'", {
        instance: message
      });
    if (!message.hasOwnProperty("orderType"))
      throw $util.ProtocolError("missing required 'orderType'", {
        instance: message
      });
    if (!message.hasOwnProperty("orderStatus"))
      throw $util.ProtocolError("missing required 'orderStatus'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAOrder message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAOrder
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAOrder} ProtoOAOrder
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAOrder.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAOrder message.
   * @function verify
   * @memberof ProtoOAOrder
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAOrder.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.orderId) &&
      !(
        message.orderId &&
        $util.isInteger(message.orderId.low) &&
        $util.isInteger(message.orderId.high)
      )
    )
      return "orderId: integer|Long expected";
    {
      var error = $root.ProtoOATradeData.verify(message.tradeData);
      if (error) return "tradeData." + error;
    }
    switch (message.orderType) {
      default:
        return "orderType: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
        break;
    }
    switch (message.orderStatus) {
      default:
        return "orderStatus: enum value expected";
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        break;
    }
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      if (
        !$util.isInteger(message.expirationTimestamp) &&
        !(
          message.expirationTimestamp &&
          $util.isInteger(message.expirationTimestamp.low) &&
          $util.isInteger(message.expirationTimestamp.high)
        )
      )
        return "expirationTimestamp: integer|Long expected";
    if (
      message.executionPrice != null &&
      message.hasOwnProperty("executionPrice")
    )
      if (typeof message.executionPrice !== "number")
        return "executionPrice: number expected";
    if (
      message.executedVolume != null &&
      message.hasOwnProperty("executedVolume")
    )
      if (
        !$util.isInteger(message.executedVolume) &&
        !(
          message.executedVolume &&
          $util.isInteger(message.executedVolume.low) &&
          $util.isInteger(message.executedVolume.high)
        )
      )
        return "executedVolume: integer|Long expected";
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      if (
        !$util.isInteger(message.utcLastUpdateTimestamp) &&
        !(
          message.utcLastUpdateTimestamp &&
          $util.isInteger(message.utcLastUpdateTimestamp.low) &&
          $util.isInteger(message.utcLastUpdateTimestamp.high)
        )
      )
        return "utcLastUpdateTimestamp: integer|Long expected";
    if (
      message.baseSlippagePrice != null &&
      message.hasOwnProperty("baseSlippagePrice")
    )
      if (typeof message.baseSlippagePrice !== "number")
        return "baseSlippagePrice: number expected";
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      if (
        !$util.isInteger(message.slippageInPoints) &&
        !(
          message.slippageInPoints &&
          $util.isInteger(message.slippageInPoints.low) &&
          $util.isInteger(message.slippageInPoints.high)
        )
      )
        return "slippageInPoints: integer|Long expected";
    if (message.closingOrder != null && message.hasOwnProperty("closingOrder"))
      if (typeof message.closingOrder !== "boolean")
        return "closingOrder: boolean expected";
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      if (typeof message.limitPrice !== "number")
        return "limitPrice: number expected";
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      if (typeof message.stopPrice !== "number")
        return "stopPrice: number expected";
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      if (typeof message.stopLoss !== "number")
        return "stopLoss: number expected";
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      if (typeof message.takeProfit !== "number")
        return "takeProfit: number expected";
    if (
      message.clientOrderId != null &&
      message.hasOwnProperty("clientOrderId")
    )
      if (!$util.isString(message.clientOrderId))
        return "clientOrderId: string expected";
    if (message.timeInForce != null && message.hasOwnProperty("timeInForce"))
      switch (message.timeInForce) {
        default:
          return "timeInForce: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
      }
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (
        !$util.isInteger(message.positionId) &&
        !(
          message.positionId &&
          $util.isInteger(message.positionId.low) &&
          $util.isInteger(message.positionId.high)
        )
      )
        return "positionId: integer|Long expected";
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      if (
        !$util.isInteger(message.relativeStopLoss) &&
        !(
          message.relativeStopLoss &&
          $util.isInteger(message.relativeStopLoss.low) &&
          $util.isInteger(message.relativeStopLoss.high)
        )
      )
        return "relativeStopLoss: integer|Long expected";
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      if (
        !$util.isInteger(message.relativeTakeProfit) &&
        !(
          message.relativeTakeProfit &&
          $util.isInteger(message.relativeTakeProfit.low) &&
          $util.isInteger(message.relativeTakeProfit.high)
        )
      )
        return "relativeTakeProfit: integer|Long expected";
    if (message.isStopOut != null && message.hasOwnProperty("isStopOut"))
      if (typeof message.isStopOut !== "boolean")
        return "isStopOut: boolean expected";
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      if (typeof message.trailingStopLoss !== "boolean")
        return "trailingStopLoss: boolean expected";
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      switch (message.stopTriggerMethod) {
        default:
          return "stopTriggerMethod: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
          break;
      }
    return null;
  };

  /**
   * Creates a ProtoOAOrder message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAOrder
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAOrder} ProtoOAOrder
   */
  ProtoOAOrder.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAOrder) return object;
    var message = new $root.ProtoOAOrder();
    if (object.orderId != null)
      if ($util.Long)
        (message.orderId = $util.Long.fromValue(
          object.orderId
        )).unsigned = false;
      else if (typeof object.orderId === "string")
        message.orderId = parseInt(object.orderId, 10);
      else if (typeof object.orderId === "number")
        message.orderId = object.orderId;
      else if (typeof object.orderId === "object")
        message.orderId = new $util.LongBits(
          object.orderId.low >>> 0,
          object.orderId.high >>> 0
        ).toNumber();
    if (object.tradeData != null) {
      if (typeof object.tradeData !== "object")
        throw TypeError(".ProtoOAOrder.tradeData: object expected");
      message.tradeData = $root.ProtoOATradeData.fromObject(object.tradeData);
    }
    switch (object.orderType) {
      case "MARKET":
      case 1:
        message.orderType = 1;
        break;
      case "LIMIT":
      case 2:
        message.orderType = 2;
        break;
      case "STOP":
      case 3:
        message.orderType = 3;
        break;
      case "STOP_LOSS_TAKE_PROFIT":
      case 4:
        message.orderType = 4;
        break;
      case "MARKET_RANGE":
      case 5:
        message.orderType = 5;
        break;
      case "STOP_LIMIT":
      case 6:
        message.orderType = 6;
        break;
    }
    switch (object.orderStatus) {
      case "ORDER_STATUS_ACCEPTED":
      case 1:
        message.orderStatus = 1;
        break;
      case "ORDER_STATUS_FILLED":
      case 2:
        message.orderStatus = 2;
        break;
      case "ORDER_STATUS_REJECTED":
      case 3:
        message.orderStatus = 3;
        break;
      case "ORDER_STATUS_EXPIRED":
      case 4:
        message.orderStatus = 4;
        break;
      case "ORDER_STATUS_CANCELLED":
      case 5:
        message.orderStatus = 5;
        break;
    }
    if (object.expirationTimestamp != null)
      if ($util.Long)
        (message.expirationTimestamp = $util.Long.fromValue(
          object.expirationTimestamp
        )).unsigned = false;
      else if (typeof object.expirationTimestamp === "string")
        message.expirationTimestamp = parseInt(object.expirationTimestamp, 10);
      else if (typeof object.expirationTimestamp === "number")
        message.expirationTimestamp = object.expirationTimestamp;
      else if (typeof object.expirationTimestamp === "object")
        message.expirationTimestamp = new $util.LongBits(
          object.expirationTimestamp.low >>> 0,
          object.expirationTimestamp.high >>> 0
        ).toNumber();
    if (object.executionPrice != null)
      message.executionPrice = Number(object.executionPrice);
    if (object.executedVolume != null)
      if ($util.Long)
        (message.executedVolume = $util.Long.fromValue(
          object.executedVolume
        )).unsigned = false;
      else if (typeof object.executedVolume === "string")
        message.executedVolume = parseInt(object.executedVolume, 10);
      else if (typeof object.executedVolume === "number")
        message.executedVolume = object.executedVolume;
      else if (typeof object.executedVolume === "object")
        message.executedVolume = new $util.LongBits(
          object.executedVolume.low >>> 0,
          object.executedVolume.high >>> 0
        ).toNumber();
    if (object.utcLastUpdateTimestamp != null)
      if ($util.Long)
        (message.utcLastUpdateTimestamp = $util.Long.fromValue(
          object.utcLastUpdateTimestamp
        )).unsigned = false;
      else if (typeof object.utcLastUpdateTimestamp === "string")
        message.utcLastUpdateTimestamp = parseInt(
          object.utcLastUpdateTimestamp,
          10
        );
      else if (typeof object.utcLastUpdateTimestamp === "number")
        message.utcLastUpdateTimestamp = object.utcLastUpdateTimestamp;
      else if (typeof object.utcLastUpdateTimestamp === "object")
        message.utcLastUpdateTimestamp = new $util.LongBits(
          object.utcLastUpdateTimestamp.low >>> 0,
          object.utcLastUpdateTimestamp.high >>> 0
        ).toNumber();
    if (object.baseSlippagePrice != null)
      message.baseSlippagePrice = Number(object.baseSlippagePrice);
    if (object.slippageInPoints != null)
      if ($util.Long)
        (message.slippageInPoints = $util.Long.fromValue(
          object.slippageInPoints
        )).unsigned = false;
      else if (typeof object.slippageInPoints === "string")
        message.slippageInPoints = parseInt(object.slippageInPoints, 10);
      else if (typeof object.slippageInPoints === "number")
        message.slippageInPoints = object.slippageInPoints;
      else if (typeof object.slippageInPoints === "object")
        message.slippageInPoints = new $util.LongBits(
          object.slippageInPoints.low >>> 0,
          object.slippageInPoints.high >>> 0
        ).toNumber();
    if (object.closingOrder != null)
      message.closingOrder = Boolean(object.closingOrder);
    if (object.limitPrice != null)
      message.limitPrice = Number(object.limitPrice);
    if (object.stopPrice != null) message.stopPrice = Number(object.stopPrice);
    if (object.stopLoss != null) message.stopLoss = Number(object.stopLoss);
    if (object.takeProfit != null)
      message.takeProfit = Number(object.takeProfit);
    if (object.clientOrderId != null)
      message.clientOrderId = String(object.clientOrderId);
    switch (object.timeInForce) {
      case "GOOD_TILL_DATE":
      case 1:
        message.timeInForce = 1;
        break;
      case "GOOD_TILL_CANCEL":
      case 2:
        message.timeInForce = 2;
        break;
      case "IMMEDIATE_OR_CANCEL":
      case 3:
        message.timeInForce = 3;
        break;
      case "FILL_OR_KILL":
      case 4:
        message.timeInForce = 4;
        break;
      case "MARKET_ON_OPEN":
      case 5:
        message.timeInForce = 5;
        break;
    }
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.relativeStopLoss != null)
      if ($util.Long)
        (message.relativeStopLoss = $util.Long.fromValue(
          object.relativeStopLoss
        )).unsigned = false;
      else if (typeof object.relativeStopLoss === "string")
        message.relativeStopLoss = parseInt(object.relativeStopLoss, 10);
      else if (typeof object.relativeStopLoss === "number")
        message.relativeStopLoss = object.relativeStopLoss;
      else if (typeof object.relativeStopLoss === "object")
        message.relativeStopLoss = new $util.LongBits(
          object.relativeStopLoss.low >>> 0,
          object.relativeStopLoss.high >>> 0
        ).toNumber();
    if (object.relativeTakeProfit != null)
      if ($util.Long)
        (message.relativeTakeProfit = $util.Long.fromValue(
          object.relativeTakeProfit
        )).unsigned = false;
      else if (typeof object.relativeTakeProfit === "string")
        message.relativeTakeProfit = parseInt(object.relativeTakeProfit, 10);
      else if (typeof object.relativeTakeProfit === "number")
        message.relativeTakeProfit = object.relativeTakeProfit;
      else if (typeof object.relativeTakeProfit === "object")
        message.relativeTakeProfit = new $util.LongBits(
          object.relativeTakeProfit.low >>> 0,
          object.relativeTakeProfit.high >>> 0
        ).toNumber();
    if (object.isStopOut != null) message.isStopOut = Boolean(object.isStopOut);
    if (object.trailingStopLoss != null)
      message.trailingStopLoss = Boolean(object.trailingStopLoss);
    switch (object.stopTriggerMethod) {
      case "TRADE":
      case 1:
        message.stopTriggerMethod = 1;
        break;
      case "OPPOSITE":
      case 2:
        message.stopTriggerMethod = 2;
        break;
      case "DOUBLE_TRADE":
      case 3:
        message.stopTriggerMethod = 3;
        break;
      case "DOUBLE_OPPOSITE":
      case 4:
        message.stopTriggerMethod = 4;
        break;
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAOrder message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAOrder
   * @static
   * @param {ProtoOAOrder} message ProtoOAOrder
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAOrder.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.orderId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.orderId = options.longs === String ? "0" : 0;
      object.tradeData = null;
      object.orderType = options.enums === String ? "MARKET" : 1;
      object.orderStatus =
        options.enums === String ? "ORDER_STATUS_ACCEPTED" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.expirationTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.expirationTimestamp = options.longs === String ? "0" : 0;
      object.executionPrice = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.executedVolume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.executedVolume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.utcLastUpdateTimestamp = options.longs === String ? "0" : 0;
      object.baseSlippagePrice = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.slippageInPoints =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.slippageInPoints = options.longs === String ? "0" : 0;
      object.closingOrder = false;
      object.limitPrice = 0;
      object.stopPrice = 0;
      object.stopLoss = 0;
      object.takeProfit = 0;
      object.clientOrderId = "";
      object.timeInForce = options.enums === String ? "IMMEDIATE_OR_CANCEL" : 3;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.relativeStopLoss =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.relativeStopLoss = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.relativeTakeProfit =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.relativeTakeProfit = options.longs === String ? "0" : 0;
      object.isStopOut = false;
      object.trailingStopLoss = false;
      object.stopTriggerMethod = options.enums === String ? "TRADE" : 1;
    }
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      if (typeof message.orderId === "number")
        object.orderId =
          options.longs === String ? String(message.orderId) : message.orderId;
      else
        object.orderId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.orderId)
            : options.longs === Number
            ? new $util.LongBits(
                message.orderId.low >>> 0,
                message.orderId.high >>> 0
              ).toNumber()
            : message.orderId;
    if (message.tradeData != null && message.hasOwnProperty("tradeData"))
      object.tradeData = $root.ProtoOATradeData.toObject(
        message.tradeData,
        options
      );
    if (message.orderType != null && message.hasOwnProperty("orderType"))
      object.orderType =
        options.enums === String
          ? $root.ProtoOAOrderType[message.orderType]
          : message.orderType;
    if (message.orderStatus != null && message.hasOwnProperty("orderStatus"))
      object.orderStatus =
        options.enums === String
          ? $root.ProtoOAOrderStatus[message.orderStatus]
          : message.orderStatus;
    if (
      message.expirationTimestamp != null &&
      message.hasOwnProperty("expirationTimestamp")
    )
      if (typeof message.expirationTimestamp === "number")
        object.expirationTimestamp =
          options.longs === String
            ? String(message.expirationTimestamp)
            : message.expirationTimestamp;
      else
        object.expirationTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.expirationTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.expirationTimestamp.low >>> 0,
                message.expirationTimestamp.high >>> 0
              ).toNumber()
            : message.expirationTimestamp;
    if (
      message.executionPrice != null &&
      message.hasOwnProperty("executionPrice")
    )
      object.executionPrice =
        options.json && !isFinite(message.executionPrice)
          ? String(message.executionPrice)
          : message.executionPrice;
    if (
      message.executedVolume != null &&
      message.hasOwnProperty("executedVolume")
    )
      if (typeof message.executedVolume === "number")
        object.executedVolume =
          options.longs === String
            ? String(message.executedVolume)
            : message.executedVolume;
      else
        object.executedVolume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.executedVolume)
            : options.longs === Number
            ? new $util.LongBits(
                message.executedVolume.low >>> 0,
                message.executedVolume.high >>> 0
              ).toNumber()
            : message.executedVolume;
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      if (typeof message.utcLastUpdateTimestamp === "number")
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? String(message.utcLastUpdateTimestamp)
            : message.utcLastUpdateTimestamp;
      else
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.utcLastUpdateTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.utcLastUpdateTimestamp.low >>> 0,
                message.utcLastUpdateTimestamp.high >>> 0
              ).toNumber()
            : message.utcLastUpdateTimestamp;
    if (
      message.baseSlippagePrice != null &&
      message.hasOwnProperty("baseSlippagePrice")
    )
      object.baseSlippagePrice =
        options.json && !isFinite(message.baseSlippagePrice)
          ? String(message.baseSlippagePrice)
          : message.baseSlippagePrice;
    if (
      message.slippageInPoints != null &&
      message.hasOwnProperty("slippageInPoints")
    )
      if (typeof message.slippageInPoints === "number")
        object.slippageInPoints =
          options.longs === String
            ? String(message.slippageInPoints)
            : message.slippageInPoints;
      else
        object.slippageInPoints =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.slippageInPoints)
            : options.longs === Number
            ? new $util.LongBits(
                message.slippageInPoints.low >>> 0,
                message.slippageInPoints.high >>> 0
              ).toNumber()
            : message.slippageInPoints;
    if (message.closingOrder != null && message.hasOwnProperty("closingOrder"))
      object.closingOrder = message.closingOrder;
    if (message.limitPrice != null && message.hasOwnProperty("limitPrice"))
      object.limitPrice =
        options.json && !isFinite(message.limitPrice)
          ? String(message.limitPrice)
          : message.limitPrice;
    if (message.stopPrice != null && message.hasOwnProperty("stopPrice"))
      object.stopPrice =
        options.json && !isFinite(message.stopPrice)
          ? String(message.stopPrice)
          : message.stopPrice;
    if (message.stopLoss != null && message.hasOwnProperty("stopLoss"))
      object.stopLoss =
        options.json && !isFinite(message.stopLoss)
          ? String(message.stopLoss)
          : message.stopLoss;
    if (message.takeProfit != null && message.hasOwnProperty("takeProfit"))
      object.takeProfit =
        options.json && !isFinite(message.takeProfit)
          ? String(message.takeProfit)
          : message.takeProfit;
    if (
      message.clientOrderId != null &&
      message.hasOwnProperty("clientOrderId")
    )
      object.clientOrderId = message.clientOrderId;
    if (message.timeInForce != null && message.hasOwnProperty("timeInForce"))
      object.timeInForce =
        options.enums === String
          ? $root.ProtoOATimeInForce[message.timeInForce]
          : message.timeInForce;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (
      message.relativeStopLoss != null &&
      message.hasOwnProperty("relativeStopLoss")
    )
      if (typeof message.relativeStopLoss === "number")
        object.relativeStopLoss =
          options.longs === String
            ? String(message.relativeStopLoss)
            : message.relativeStopLoss;
      else
        object.relativeStopLoss =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.relativeStopLoss)
            : options.longs === Number
            ? new $util.LongBits(
                message.relativeStopLoss.low >>> 0,
                message.relativeStopLoss.high >>> 0
              ).toNumber()
            : message.relativeStopLoss;
    if (
      message.relativeTakeProfit != null &&
      message.hasOwnProperty("relativeTakeProfit")
    )
      if (typeof message.relativeTakeProfit === "number")
        object.relativeTakeProfit =
          options.longs === String
            ? String(message.relativeTakeProfit)
            : message.relativeTakeProfit;
      else
        object.relativeTakeProfit =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.relativeTakeProfit)
            : options.longs === Number
            ? new $util.LongBits(
                message.relativeTakeProfit.low >>> 0,
                message.relativeTakeProfit.high >>> 0
              ).toNumber()
            : message.relativeTakeProfit;
    if (message.isStopOut != null && message.hasOwnProperty("isStopOut"))
      object.isStopOut = message.isStopOut;
    if (
      message.trailingStopLoss != null &&
      message.hasOwnProperty("trailingStopLoss")
    )
      object.trailingStopLoss = message.trailingStopLoss;
    if (
      message.stopTriggerMethod != null &&
      message.hasOwnProperty("stopTriggerMethod")
    )
      object.stopTriggerMethod =
        options.enums === String
          ? $root.ProtoOAOrderTriggerMethod[message.stopTriggerMethod]
          : message.stopTriggerMethod;
    return object;
  };

  /**
   * Converts this ProtoOAOrder to JSON.
   * @function toJSON
   * @memberof ProtoOAOrder
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAOrder.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAOrder;
})();

/**
 * Execution event type ENUM.
 * @exports ProtoOAExecutionType
 * @enum {string}
 * @property {number} ORDER_ACCEPTED=2 ORDER_ACCEPTED value
 * @property {number} ORDER_FILLED=3 ORDER_FILLED value
 * @property {number} ORDER_REPLACED=4 ORDER_REPLACED value
 * @property {number} ORDER_CANCELLED=5 ORDER_CANCELLED value
 * @property {number} ORDER_EXPIRED=6 ORDER_EXPIRED value
 * @property {number} ORDER_REJECTED=7 ORDER_REJECTED value
 * @property {number} ORDER_CANCEL_REJECTED=8 ORDER_CANCEL_REJECTED value
 * @property {number} SWAP=9 SWAP value
 * @property {number} DEPOSIT_WITHDRAW=10 DEPOSIT_WITHDRAW value
 * @property {number} ORDER_PARTIAL_FILL=11 ORDER_PARTIAL_FILL value
 * @property {number} BONUS_DEPOSIT_WITHDRAW=12 BONUS_DEPOSIT_WITHDRAW value
 */
$root.ProtoOAExecutionType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[2] = "ORDER_ACCEPTED")] = 2;
  values[(valuesById[3] = "ORDER_FILLED")] = 3;
  values[(valuesById[4] = "ORDER_REPLACED")] = 4;
  values[(valuesById[5] = "ORDER_CANCELLED")] = 5;
  values[(valuesById[6] = "ORDER_EXPIRED")] = 6;
  values[(valuesById[7] = "ORDER_REJECTED")] = 7;
  values[(valuesById[8] = "ORDER_CANCEL_REJECTED")] = 8;
  values[(valuesById[9] = "SWAP")] = 9;
  values[(valuesById[10] = "DEPOSIT_WITHDRAW")] = 10;
  values[(valuesById[11] = "ORDER_PARTIAL_FILL")] = 11;
  values[(valuesById[12] = "BONUS_DEPOSIT_WITHDRAW")] = 12;
  return values;
})();

$root.ProtoOABonusDepositWithdraw = (function() {
  /**
   * Properties of a ProtoOABonusDepositWithdraw.
   * @exports IProtoOABonusDepositWithdraw
   * @interface IProtoOABonusDepositWithdraw
   * @property {ProtoOAChangeBonusType} operationType ProtoOABonusDepositWithdraw operationType
   * @property {number|Long} bonusHistoryId ProtoOABonusDepositWithdraw bonusHistoryId
   * @property {number|Long} managerBonus ProtoOABonusDepositWithdraw managerBonus
   * @property {number|Long} managerDelta ProtoOABonusDepositWithdraw managerDelta
   * @property {number|Long} ibBonus ProtoOABonusDepositWithdraw ibBonus
   * @property {number|Long} ibDelta ProtoOABonusDepositWithdraw ibDelta
   * @property {number|Long} changeBonusTimestamp ProtoOABonusDepositWithdraw changeBonusTimestamp
   * @property {string|null} [externalNote] ProtoOABonusDepositWithdraw externalNote
   * @property {number|Long|null} [introducingBrokerId] ProtoOABonusDepositWithdraw introducingBrokerId
   */

  /**
   * Constructs a new ProtoOABonusDepositWithdraw.
   * @exports ProtoOABonusDepositWithdraw
   * @classdesc Bonus deposit/withdrawal entity.
   * @implements IProtoOABonusDepositWithdraw
   * @constructor
   * @param {IProtoOABonusDepositWithdraw=} [properties] Properties to set
   */
  function ProtoOABonusDepositWithdraw(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOABonusDepositWithdraw operationType.
   * @member {ProtoOAChangeBonusType} operationType
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.operationType = 0;

  /**
   * ProtoOABonusDepositWithdraw bonusHistoryId.
   * @member {number|Long} bonusHistoryId
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.bonusHistoryId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOABonusDepositWithdraw managerBonus.
   * @member {number|Long} managerBonus
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.managerBonus = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOABonusDepositWithdraw managerDelta.
   * @member {number|Long} managerDelta
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.managerDelta = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOABonusDepositWithdraw ibBonus.
   * @member {number|Long} ibBonus
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.ibBonus = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOABonusDepositWithdraw ibDelta.
   * @member {number|Long} ibDelta
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.ibDelta = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOABonusDepositWithdraw changeBonusTimestamp.
   * @member {number|Long} changeBonusTimestamp
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.changeBonusTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOABonusDepositWithdraw externalNote.
   * @member {string} externalNote
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.externalNote = "";

  /**
   * ProtoOABonusDepositWithdraw introducingBrokerId.
   * @member {number|Long} introducingBrokerId
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   */
  ProtoOABonusDepositWithdraw.prototype.introducingBrokerId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOABonusDepositWithdraw instance using the specified properties.
   * @function create
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {IProtoOABonusDepositWithdraw=} [properties] Properties to set
   * @returns {ProtoOABonusDepositWithdraw} ProtoOABonusDepositWithdraw instance
   */
  ProtoOABonusDepositWithdraw.create = function create(properties) {
    return new ProtoOABonusDepositWithdraw(properties);
  };

  /**
   * Encodes the specified ProtoOABonusDepositWithdraw message. Does not implicitly {@link ProtoOABonusDepositWithdraw.verify|verify} messages.
   * @function encode
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {IProtoOABonusDepositWithdraw} message ProtoOABonusDepositWithdraw message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOABonusDepositWithdraw.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.operationType);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.bonusHistoryId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.managerBonus);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.managerDelta);
    writer.uint32(/* id 5, wireType 0 =*/ 40).int64(message.ibBonus);
    writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.ibDelta);
    writer
      .uint32(/* id 7, wireType 0 =*/ 56)
      .int64(message.changeBonusTimestamp);
    if (message.externalNote != null && message.hasOwnProperty("externalNote"))
      writer.uint32(/* id 8, wireType 2 =*/ 66).string(message.externalNote);
    if (
      message.introducingBrokerId != null &&
      message.hasOwnProperty("introducingBrokerId")
    )
      writer
        .uint32(/* id 9, wireType 0 =*/ 72)
        .int64(message.introducingBrokerId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOABonusDepositWithdraw message, length delimited. Does not implicitly {@link ProtoOABonusDepositWithdraw.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {IProtoOABonusDepositWithdraw} message ProtoOABonusDepositWithdraw message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOABonusDepositWithdraw.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOABonusDepositWithdraw message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOABonusDepositWithdraw} ProtoOABonusDepositWithdraw
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOABonusDepositWithdraw.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOABonusDepositWithdraw();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.operationType = reader.int32();
          break;
        case 2:
          message.bonusHistoryId = reader.int64();
          break;
        case 3:
          message.managerBonus = reader.int64();
          break;
        case 4:
          message.managerDelta = reader.int64();
          break;
        case 5:
          message.ibBonus = reader.int64();
          break;
        case 6:
          message.ibDelta = reader.int64();
          break;
        case 7:
          message.changeBonusTimestamp = reader.int64();
          break;
        case 8:
          message.externalNote = reader.string();
          break;
        case 9:
          message.introducingBrokerId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("operationType"))
      throw $util.ProtocolError("missing required 'operationType'", {
        instance: message
      });
    if (!message.hasOwnProperty("bonusHistoryId"))
      throw $util.ProtocolError("missing required 'bonusHistoryId'", {
        instance: message
      });
    if (!message.hasOwnProperty("managerBonus"))
      throw $util.ProtocolError("missing required 'managerBonus'", {
        instance: message
      });
    if (!message.hasOwnProperty("managerDelta"))
      throw $util.ProtocolError("missing required 'managerDelta'", {
        instance: message
      });
    if (!message.hasOwnProperty("ibBonus"))
      throw $util.ProtocolError("missing required 'ibBonus'", {
        instance: message
      });
    if (!message.hasOwnProperty("ibDelta"))
      throw $util.ProtocolError("missing required 'ibDelta'", {
        instance: message
      });
    if (!message.hasOwnProperty("changeBonusTimestamp"))
      throw $util.ProtocolError("missing required 'changeBonusTimestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOABonusDepositWithdraw message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOABonusDepositWithdraw} ProtoOABonusDepositWithdraw
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOABonusDepositWithdraw.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOABonusDepositWithdraw message.
   * @function verify
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOABonusDepositWithdraw.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    switch (message.operationType) {
      default:
        return "operationType: enum value expected";
      case 0:
      case 1:
        break;
    }
    if (
      !$util.isInteger(message.bonusHistoryId) &&
      !(
        message.bonusHistoryId &&
        $util.isInteger(message.bonusHistoryId.low) &&
        $util.isInteger(message.bonusHistoryId.high)
      )
    )
      return "bonusHistoryId: integer|Long expected";
    if (
      !$util.isInteger(message.managerBonus) &&
      !(
        message.managerBonus &&
        $util.isInteger(message.managerBonus.low) &&
        $util.isInteger(message.managerBonus.high)
      )
    )
      return "managerBonus: integer|Long expected";
    if (
      !$util.isInteger(message.managerDelta) &&
      !(
        message.managerDelta &&
        $util.isInteger(message.managerDelta.low) &&
        $util.isInteger(message.managerDelta.high)
      )
    )
      return "managerDelta: integer|Long expected";
    if (
      !$util.isInteger(message.ibBonus) &&
      !(
        message.ibBonus &&
        $util.isInteger(message.ibBonus.low) &&
        $util.isInteger(message.ibBonus.high)
      )
    )
      return "ibBonus: integer|Long expected";
    if (
      !$util.isInteger(message.ibDelta) &&
      !(
        message.ibDelta &&
        $util.isInteger(message.ibDelta.low) &&
        $util.isInteger(message.ibDelta.high)
      )
    )
      return "ibDelta: integer|Long expected";
    if (
      !$util.isInteger(message.changeBonusTimestamp) &&
      !(
        message.changeBonusTimestamp &&
        $util.isInteger(message.changeBonusTimestamp.low) &&
        $util.isInteger(message.changeBonusTimestamp.high)
      )
    )
      return "changeBonusTimestamp: integer|Long expected";
    if (message.externalNote != null && message.hasOwnProperty("externalNote"))
      if (!$util.isString(message.externalNote))
        return "externalNote: string expected";
    if (
      message.introducingBrokerId != null &&
      message.hasOwnProperty("introducingBrokerId")
    )
      if (
        !$util.isInteger(message.introducingBrokerId) &&
        !(
          message.introducingBrokerId &&
          $util.isInteger(message.introducingBrokerId.low) &&
          $util.isInteger(message.introducingBrokerId.high)
        )
      )
        return "introducingBrokerId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOABonusDepositWithdraw message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOABonusDepositWithdraw} ProtoOABonusDepositWithdraw
   */
  ProtoOABonusDepositWithdraw.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOABonusDepositWithdraw) return object;
    var message = new $root.ProtoOABonusDepositWithdraw();
    switch (object.operationType) {
      case "BONUS_DEPOSIT":
      case 0:
        message.operationType = 0;
        break;
      case "BONUS_WITHDRAW":
      case 1:
        message.operationType = 1;
        break;
    }
    if (object.bonusHistoryId != null)
      if ($util.Long)
        (message.bonusHistoryId = $util.Long.fromValue(
          object.bonusHistoryId
        )).unsigned = false;
      else if (typeof object.bonusHistoryId === "string")
        message.bonusHistoryId = parseInt(object.bonusHistoryId, 10);
      else if (typeof object.bonusHistoryId === "number")
        message.bonusHistoryId = object.bonusHistoryId;
      else if (typeof object.bonusHistoryId === "object")
        message.bonusHistoryId = new $util.LongBits(
          object.bonusHistoryId.low >>> 0,
          object.bonusHistoryId.high >>> 0
        ).toNumber();
    if (object.managerBonus != null)
      if ($util.Long)
        (message.managerBonus = $util.Long.fromValue(
          object.managerBonus
        )).unsigned = false;
      else if (typeof object.managerBonus === "string")
        message.managerBonus = parseInt(object.managerBonus, 10);
      else if (typeof object.managerBonus === "number")
        message.managerBonus = object.managerBonus;
      else if (typeof object.managerBonus === "object")
        message.managerBonus = new $util.LongBits(
          object.managerBonus.low >>> 0,
          object.managerBonus.high >>> 0
        ).toNumber();
    if (object.managerDelta != null)
      if ($util.Long)
        (message.managerDelta = $util.Long.fromValue(
          object.managerDelta
        )).unsigned = false;
      else if (typeof object.managerDelta === "string")
        message.managerDelta = parseInt(object.managerDelta, 10);
      else if (typeof object.managerDelta === "number")
        message.managerDelta = object.managerDelta;
      else if (typeof object.managerDelta === "object")
        message.managerDelta = new $util.LongBits(
          object.managerDelta.low >>> 0,
          object.managerDelta.high >>> 0
        ).toNumber();
    if (object.ibBonus != null)
      if ($util.Long)
        (message.ibBonus = $util.Long.fromValue(
          object.ibBonus
        )).unsigned = false;
      else if (typeof object.ibBonus === "string")
        message.ibBonus = parseInt(object.ibBonus, 10);
      else if (typeof object.ibBonus === "number")
        message.ibBonus = object.ibBonus;
      else if (typeof object.ibBonus === "object")
        message.ibBonus = new $util.LongBits(
          object.ibBonus.low >>> 0,
          object.ibBonus.high >>> 0
        ).toNumber();
    if (object.ibDelta != null)
      if ($util.Long)
        (message.ibDelta = $util.Long.fromValue(
          object.ibDelta
        )).unsigned = false;
      else if (typeof object.ibDelta === "string")
        message.ibDelta = parseInt(object.ibDelta, 10);
      else if (typeof object.ibDelta === "number")
        message.ibDelta = object.ibDelta;
      else if (typeof object.ibDelta === "object")
        message.ibDelta = new $util.LongBits(
          object.ibDelta.low >>> 0,
          object.ibDelta.high >>> 0
        ).toNumber();
    if (object.changeBonusTimestamp != null)
      if ($util.Long)
        (message.changeBonusTimestamp = $util.Long.fromValue(
          object.changeBonusTimestamp
        )).unsigned = false;
      else if (typeof object.changeBonusTimestamp === "string")
        message.changeBonusTimestamp = parseInt(
          object.changeBonusTimestamp,
          10
        );
      else if (typeof object.changeBonusTimestamp === "number")
        message.changeBonusTimestamp = object.changeBonusTimestamp;
      else if (typeof object.changeBonusTimestamp === "object")
        message.changeBonusTimestamp = new $util.LongBits(
          object.changeBonusTimestamp.low >>> 0,
          object.changeBonusTimestamp.high >>> 0
        ).toNumber();
    if (object.externalNote != null)
      message.externalNote = String(object.externalNote);
    if (object.introducingBrokerId != null)
      if ($util.Long)
        (message.introducingBrokerId = $util.Long.fromValue(
          object.introducingBrokerId
        )).unsigned = false;
      else if (typeof object.introducingBrokerId === "string")
        message.introducingBrokerId = parseInt(object.introducingBrokerId, 10);
      else if (typeof object.introducingBrokerId === "number")
        message.introducingBrokerId = object.introducingBrokerId;
      else if (typeof object.introducingBrokerId === "object")
        message.introducingBrokerId = new $util.LongBits(
          object.introducingBrokerId.low >>> 0,
          object.introducingBrokerId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOABonusDepositWithdraw message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOABonusDepositWithdraw
   * @static
   * @param {ProtoOABonusDepositWithdraw} message ProtoOABonusDepositWithdraw
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOABonusDepositWithdraw.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.operationType = options.enums === String ? "BONUS_DEPOSIT" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.bonusHistoryId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.bonusHistoryId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.managerBonus =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.managerBonus = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.managerDelta =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.managerDelta = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ibBonus =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ibBonus = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.ibDelta =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ibDelta = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.changeBonusTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.changeBonusTimestamp = options.longs === String ? "0" : 0;
      object.externalNote = "";
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.introducingBrokerId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.introducingBrokerId = options.longs === String ? "0" : 0;
    }
    if (
      message.operationType != null &&
      message.hasOwnProperty("operationType")
    )
      object.operationType =
        options.enums === String
          ? $root.ProtoOAChangeBonusType[message.operationType]
          : message.operationType;
    if (
      message.bonusHistoryId != null &&
      message.hasOwnProperty("bonusHistoryId")
    )
      if (typeof message.bonusHistoryId === "number")
        object.bonusHistoryId =
          options.longs === String
            ? String(message.bonusHistoryId)
            : message.bonusHistoryId;
      else
        object.bonusHistoryId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.bonusHistoryId)
            : options.longs === Number
            ? new $util.LongBits(
                message.bonusHistoryId.low >>> 0,
                message.bonusHistoryId.high >>> 0
              ).toNumber()
            : message.bonusHistoryId;
    if (message.managerBonus != null && message.hasOwnProperty("managerBonus"))
      if (typeof message.managerBonus === "number")
        object.managerBonus =
          options.longs === String
            ? String(message.managerBonus)
            : message.managerBonus;
      else
        object.managerBonus =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.managerBonus)
            : options.longs === Number
            ? new $util.LongBits(
                message.managerBonus.low >>> 0,
                message.managerBonus.high >>> 0
              ).toNumber()
            : message.managerBonus;
    if (message.managerDelta != null && message.hasOwnProperty("managerDelta"))
      if (typeof message.managerDelta === "number")
        object.managerDelta =
          options.longs === String
            ? String(message.managerDelta)
            : message.managerDelta;
      else
        object.managerDelta =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.managerDelta)
            : options.longs === Number
            ? new $util.LongBits(
                message.managerDelta.low >>> 0,
                message.managerDelta.high >>> 0
              ).toNumber()
            : message.managerDelta;
    if (message.ibBonus != null && message.hasOwnProperty("ibBonus"))
      if (typeof message.ibBonus === "number")
        object.ibBonus =
          options.longs === String ? String(message.ibBonus) : message.ibBonus;
      else
        object.ibBonus =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ibBonus)
            : options.longs === Number
            ? new $util.LongBits(
                message.ibBonus.low >>> 0,
                message.ibBonus.high >>> 0
              ).toNumber()
            : message.ibBonus;
    if (message.ibDelta != null && message.hasOwnProperty("ibDelta"))
      if (typeof message.ibDelta === "number")
        object.ibDelta =
          options.longs === String ? String(message.ibDelta) : message.ibDelta;
      else
        object.ibDelta =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ibDelta)
            : options.longs === Number
            ? new $util.LongBits(
                message.ibDelta.low >>> 0,
                message.ibDelta.high >>> 0
              ).toNumber()
            : message.ibDelta;
    if (
      message.changeBonusTimestamp != null &&
      message.hasOwnProperty("changeBonusTimestamp")
    )
      if (typeof message.changeBonusTimestamp === "number")
        object.changeBonusTimestamp =
          options.longs === String
            ? String(message.changeBonusTimestamp)
            : message.changeBonusTimestamp;
      else
        object.changeBonusTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.changeBonusTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.changeBonusTimestamp.low >>> 0,
                message.changeBonusTimestamp.high >>> 0
              ).toNumber()
            : message.changeBonusTimestamp;
    if (message.externalNote != null && message.hasOwnProperty("externalNote"))
      object.externalNote = message.externalNote;
    if (
      message.introducingBrokerId != null &&
      message.hasOwnProperty("introducingBrokerId")
    )
      if (typeof message.introducingBrokerId === "number")
        object.introducingBrokerId =
          options.longs === String
            ? String(message.introducingBrokerId)
            : message.introducingBrokerId;
      else
        object.introducingBrokerId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.introducingBrokerId)
            : options.longs === Number
            ? new $util.LongBits(
                message.introducingBrokerId.low >>> 0,
                message.introducingBrokerId.high >>> 0
              ).toNumber()
            : message.introducingBrokerId;
    return object;
  };

  /**
   * Converts this ProtoOABonusDepositWithdraw to JSON.
   * @function toJSON
   * @memberof ProtoOABonusDepositWithdraw
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOABonusDepositWithdraw.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOABonusDepositWithdraw;
})();

/**
 * Bonus operation type ENUM.
 * @exports ProtoOAChangeBonusType
 * @enum {string}
 * @property {number} BONUS_DEPOSIT=0 BONUS_DEPOSIT value
 * @property {number} BONUS_WITHDRAW=1 BONUS_WITHDRAW value
 */
$root.ProtoOAChangeBonusType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "BONUS_DEPOSIT")] = 0;
  values[(valuesById[1] = "BONUS_WITHDRAW")] = 1;
  return values;
})();

$root.ProtoOADepositWithdraw = (function() {
  /**
   * Properties of a ProtoOADepositWithdraw.
   * @exports IProtoOADepositWithdraw
   * @interface IProtoOADepositWithdraw
   * @property {ProtoOAChangeBalanceType} operationType ProtoOADepositWithdraw operationType
   * @property {number|Long} balanceHistoryId ProtoOADepositWithdraw balanceHistoryId
   * @property {number|Long} balance ProtoOADepositWithdraw balance
   * @property {number|Long} delta ProtoOADepositWithdraw delta
   * @property {number|Long} changeBalanceTimestamp ProtoOADepositWithdraw changeBalanceTimestamp
   * @property {string|null} [externalNote] ProtoOADepositWithdraw externalNote
   * @property {number|Long|null} [balanceVersion] ProtoOADepositWithdraw balanceVersion
   * @property {number|Long|null} [equity] ProtoOADepositWithdraw equity
   */

  /**
   * Constructs a new ProtoOADepositWithdraw.
   * @exports ProtoOADepositWithdraw
   * @classdesc Account deposit/withdrawal operation entity.
   * @implements IProtoOADepositWithdraw
   * @constructor
   * @param {IProtoOADepositWithdraw=} [properties] Properties to set
   */
  function ProtoOADepositWithdraw(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOADepositWithdraw operationType.
   * @member {ProtoOAChangeBalanceType} operationType
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.operationType = 0;

  /**
   * ProtoOADepositWithdraw balanceHistoryId.
   * @member {number|Long} balanceHistoryId
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.balanceHistoryId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADepositWithdraw balance.
   * @member {number|Long} balance
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.balance = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADepositWithdraw delta.
   * @member {number|Long} delta
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.delta = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADepositWithdraw changeBalanceTimestamp.
   * @member {number|Long} changeBalanceTimestamp
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.changeBalanceTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADepositWithdraw externalNote.
   * @member {string} externalNote
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.externalNote = "";

  /**
   * ProtoOADepositWithdraw balanceVersion.
   * @member {number|Long} balanceVersion
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.balanceVersion = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADepositWithdraw equity.
   * @member {number|Long} equity
   * @memberof ProtoOADepositWithdraw
   * @instance
   */
  ProtoOADepositWithdraw.prototype.equity = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOADepositWithdraw instance using the specified properties.
   * @function create
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {IProtoOADepositWithdraw=} [properties] Properties to set
   * @returns {ProtoOADepositWithdraw} ProtoOADepositWithdraw instance
   */
  ProtoOADepositWithdraw.create = function create(properties) {
    return new ProtoOADepositWithdraw(properties);
  };

  /**
   * Encodes the specified ProtoOADepositWithdraw message. Does not implicitly {@link ProtoOADepositWithdraw.verify|verify} messages.
   * @function encode
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {IProtoOADepositWithdraw} message ProtoOADepositWithdraw message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADepositWithdraw.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int32(message.operationType);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.balanceHistoryId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.balance);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.delta);
    writer
      .uint32(/* id 5, wireType 0 =*/ 40)
      .int64(message.changeBalanceTimestamp);
    if (message.externalNote != null && message.hasOwnProperty("externalNote"))
      writer.uint32(/* id 6, wireType 2 =*/ 50).string(message.externalNote);
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      writer.uint32(/* id 7, wireType 0 =*/ 56).int64(message.balanceVersion);
    if (message.equity != null && message.hasOwnProperty("equity"))
      writer.uint32(/* id 8, wireType 0 =*/ 64).int64(message.equity);
    return writer;
  };

  /**
   * Encodes the specified ProtoOADepositWithdraw message, length delimited. Does not implicitly {@link ProtoOADepositWithdraw.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {IProtoOADepositWithdraw} message ProtoOADepositWithdraw message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADepositWithdraw.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOADepositWithdraw message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOADepositWithdraw} ProtoOADepositWithdraw
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADepositWithdraw.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOADepositWithdraw();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.operationType = reader.int32();
          break;
        case 2:
          message.balanceHistoryId = reader.int64();
          break;
        case 3:
          message.balance = reader.int64();
          break;
        case 4:
          message.delta = reader.int64();
          break;
        case 5:
          message.changeBalanceTimestamp = reader.int64();
          break;
        case 6:
          message.externalNote = reader.string();
          break;
        case 7:
          message.balanceVersion = reader.int64();
          break;
        case 8:
          message.equity = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("operationType"))
      throw $util.ProtocolError("missing required 'operationType'", {
        instance: message
      });
    if (!message.hasOwnProperty("balanceHistoryId"))
      throw $util.ProtocolError("missing required 'balanceHistoryId'", {
        instance: message
      });
    if (!message.hasOwnProperty("balance"))
      throw $util.ProtocolError("missing required 'balance'", {
        instance: message
      });
    if (!message.hasOwnProperty("delta"))
      throw $util.ProtocolError("missing required 'delta'", {
        instance: message
      });
    if (!message.hasOwnProperty("changeBalanceTimestamp"))
      throw $util.ProtocolError("missing required 'changeBalanceTimestamp'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOADepositWithdraw message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOADepositWithdraw} ProtoOADepositWithdraw
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADepositWithdraw.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOADepositWithdraw message.
   * @function verify
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOADepositWithdraw.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    switch (message.operationType) {
      default:
        return "operationType: enum value expected";
      case 0:
      case 1:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 27:
      case 28:
      case 29:
      case 35:
        break;
    }
    if (
      !$util.isInteger(message.balanceHistoryId) &&
      !(
        message.balanceHistoryId &&
        $util.isInteger(message.balanceHistoryId.low) &&
        $util.isInteger(message.balanceHistoryId.high)
      )
    )
      return "balanceHistoryId: integer|Long expected";
    if (
      !$util.isInteger(message.balance) &&
      !(
        message.balance &&
        $util.isInteger(message.balance.low) &&
        $util.isInteger(message.balance.high)
      )
    )
      return "balance: integer|Long expected";
    if (
      !$util.isInteger(message.delta) &&
      !(
        message.delta &&
        $util.isInteger(message.delta.low) &&
        $util.isInteger(message.delta.high)
      )
    )
      return "delta: integer|Long expected";
    if (
      !$util.isInteger(message.changeBalanceTimestamp) &&
      !(
        message.changeBalanceTimestamp &&
        $util.isInteger(message.changeBalanceTimestamp.low) &&
        $util.isInteger(message.changeBalanceTimestamp.high)
      )
    )
      return "changeBalanceTimestamp: integer|Long expected";
    if (message.externalNote != null && message.hasOwnProperty("externalNote"))
      if (!$util.isString(message.externalNote))
        return "externalNote: string expected";
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      if (
        !$util.isInteger(message.balanceVersion) &&
        !(
          message.balanceVersion &&
          $util.isInteger(message.balanceVersion.low) &&
          $util.isInteger(message.balanceVersion.high)
        )
      )
        return "balanceVersion: integer|Long expected";
    if (message.equity != null && message.hasOwnProperty("equity"))
      if (
        !$util.isInteger(message.equity) &&
        !(
          message.equity &&
          $util.isInteger(message.equity.low) &&
          $util.isInteger(message.equity.high)
        )
      )
        return "equity: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOADepositWithdraw message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOADepositWithdraw} ProtoOADepositWithdraw
   */
  ProtoOADepositWithdraw.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOADepositWithdraw) return object;
    var message = new $root.ProtoOADepositWithdraw();
    switch (object.operationType) {
      case "BALANCE_DEPOSIT":
      case 0:
        message.operationType = 0;
        break;
      case "BALANCE_WITHDRAW":
      case 1:
        message.operationType = 1;
        break;
      case "BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER":
      case 3:
        message.operationType = 3;
        break;
      case "BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER":
      case 4:
        message.operationType = 4;
        break;
      case "BALANCE_DEPOSIT_IB_COMMISSIONS":
      case 5:
        message.operationType = 5;
        break;
      case "BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE":
      case 6:
        message.operationType = 6;
        break;
      case "BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB":
      case 7:
        message.operationType = 7;
        break;
      case "BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER":
      case 8:
        message.operationType = 8;
        break;
      case "BALANCE_DEPOSIT_REBATE":
      case 9:
        message.operationType = 9;
        break;
      case "BALANCE_WITHDRAW_REBATE":
      case 10:
        message.operationType = 10;
        break;
      case "BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER":
      case 11:
        message.operationType = 11;
        break;
      case "BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER":
      case 12:
        message.operationType = 12;
        break;
      case "BALANCE_WITHDRAW_BONUS_COMPENSATION":
      case 13:
        message.operationType = 13;
        break;
      case "BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER":
      case 14:
        message.operationType = 14;
        break;
      case "BALANCE_DEPOSIT_DIVIDENDS":
      case 15:
        message.operationType = 15;
        break;
      case "BALANCE_WITHDRAW_DIVIDENDS":
      case 16:
        message.operationType = 16;
        break;
      case "BALANCE_WITHDRAW_GSL_CHARGE":
      case 17:
        message.operationType = 17;
        break;
      case "BALANCE_WITHDRAW_ROLLOVER":
      case 18:
        message.operationType = 18;
        break;
      case "BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS":
      case 19:
        message.operationType = 19;
        break;
      case "BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS":
      case 20:
        message.operationType = 20;
        break;
      case "BALANCE_DEPOSIT_SWAP":
      case 21:
        message.operationType = 21;
        break;
      case "BALANCE_WITHDRAW_SWAP":
      case 22:
        message.operationType = 22;
        break;
      case "BALANCE_DEPOSIT_MANAGEMENT_FEE":
      case 27:
        message.operationType = 27;
        break;
      case "BALANCE_WITHDRAW_MANAGEMENT_FEE":
      case 28:
        message.operationType = 28;
        break;
      case "BALANCE_DEPOSIT_PERFORMANCE_FEE":
      case 29:
        message.operationType = 29;
        break;
      case "BALANCE_WITHDRAW_INACTIVITY_FEE":
      case 35:
        message.operationType = 35;
        break;
    }
    if (object.balanceHistoryId != null)
      if ($util.Long)
        (message.balanceHistoryId = $util.Long.fromValue(
          object.balanceHistoryId
        )).unsigned = false;
      else if (typeof object.balanceHistoryId === "string")
        message.balanceHistoryId = parseInt(object.balanceHistoryId, 10);
      else if (typeof object.balanceHistoryId === "number")
        message.balanceHistoryId = object.balanceHistoryId;
      else if (typeof object.balanceHistoryId === "object")
        message.balanceHistoryId = new $util.LongBits(
          object.balanceHistoryId.low >>> 0,
          object.balanceHistoryId.high >>> 0
        ).toNumber();
    if (object.balance != null)
      if ($util.Long)
        (message.balance = $util.Long.fromValue(
          object.balance
        )).unsigned = false;
      else if (typeof object.balance === "string")
        message.balance = parseInt(object.balance, 10);
      else if (typeof object.balance === "number")
        message.balance = object.balance;
      else if (typeof object.balance === "object")
        message.balance = new $util.LongBits(
          object.balance.low >>> 0,
          object.balance.high >>> 0
        ).toNumber();
    if (object.delta != null)
      if ($util.Long)
        (message.delta = $util.Long.fromValue(object.delta)).unsigned = false;
      else if (typeof object.delta === "string")
        message.delta = parseInt(object.delta, 10);
      else if (typeof object.delta === "number") message.delta = object.delta;
      else if (typeof object.delta === "object")
        message.delta = new $util.LongBits(
          object.delta.low >>> 0,
          object.delta.high >>> 0
        ).toNumber();
    if (object.changeBalanceTimestamp != null)
      if ($util.Long)
        (message.changeBalanceTimestamp = $util.Long.fromValue(
          object.changeBalanceTimestamp
        )).unsigned = false;
      else if (typeof object.changeBalanceTimestamp === "string")
        message.changeBalanceTimestamp = parseInt(
          object.changeBalanceTimestamp,
          10
        );
      else if (typeof object.changeBalanceTimestamp === "number")
        message.changeBalanceTimestamp = object.changeBalanceTimestamp;
      else if (typeof object.changeBalanceTimestamp === "object")
        message.changeBalanceTimestamp = new $util.LongBits(
          object.changeBalanceTimestamp.low >>> 0,
          object.changeBalanceTimestamp.high >>> 0
        ).toNumber();
    if (object.externalNote != null)
      message.externalNote = String(object.externalNote);
    if (object.balanceVersion != null)
      if ($util.Long)
        (message.balanceVersion = $util.Long.fromValue(
          object.balanceVersion
        )).unsigned = false;
      else if (typeof object.balanceVersion === "string")
        message.balanceVersion = parseInt(object.balanceVersion, 10);
      else if (typeof object.balanceVersion === "number")
        message.balanceVersion = object.balanceVersion;
      else if (typeof object.balanceVersion === "object")
        message.balanceVersion = new $util.LongBits(
          object.balanceVersion.low >>> 0,
          object.balanceVersion.high >>> 0
        ).toNumber();
    if (object.equity != null)
      if ($util.Long)
        (message.equity = $util.Long.fromValue(object.equity)).unsigned = false;
      else if (typeof object.equity === "string")
        message.equity = parseInt(object.equity, 10);
      else if (typeof object.equity === "number")
        message.equity = object.equity;
      else if (typeof object.equity === "object")
        message.equity = new $util.LongBits(
          object.equity.low >>> 0,
          object.equity.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOADepositWithdraw message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOADepositWithdraw
   * @static
   * @param {ProtoOADepositWithdraw} message ProtoOADepositWithdraw
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOADepositWithdraw.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.operationType = options.enums === String ? "BALANCE_DEPOSIT" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.balanceHistoryId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.balanceHistoryId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.balance =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.balance = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.delta =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.delta = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.changeBalanceTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.changeBalanceTimestamp = options.longs === String ? "0" : 0;
      object.externalNote = "";
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.balanceVersion =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.balanceVersion = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.equity =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.equity = options.longs === String ? "0" : 0;
    }
    if (
      message.operationType != null &&
      message.hasOwnProperty("operationType")
    )
      object.operationType =
        options.enums === String
          ? $root.ProtoOAChangeBalanceType[message.operationType]
          : message.operationType;
    if (
      message.balanceHistoryId != null &&
      message.hasOwnProperty("balanceHistoryId")
    )
      if (typeof message.balanceHistoryId === "number")
        object.balanceHistoryId =
          options.longs === String
            ? String(message.balanceHistoryId)
            : message.balanceHistoryId;
      else
        object.balanceHistoryId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.balanceHistoryId)
            : options.longs === Number
            ? new $util.LongBits(
                message.balanceHistoryId.low >>> 0,
                message.balanceHistoryId.high >>> 0
              ).toNumber()
            : message.balanceHistoryId;
    if (message.balance != null && message.hasOwnProperty("balance"))
      if (typeof message.balance === "number")
        object.balance =
          options.longs === String ? String(message.balance) : message.balance;
      else
        object.balance =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.balance)
            : options.longs === Number
            ? new $util.LongBits(
                message.balance.low >>> 0,
                message.balance.high >>> 0
              ).toNumber()
            : message.balance;
    if (message.delta != null && message.hasOwnProperty("delta"))
      if (typeof message.delta === "number")
        object.delta =
          options.longs === String ? String(message.delta) : message.delta;
      else
        object.delta =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.delta)
            : options.longs === Number
            ? new $util.LongBits(
                message.delta.low >>> 0,
                message.delta.high >>> 0
              ).toNumber()
            : message.delta;
    if (
      message.changeBalanceTimestamp != null &&
      message.hasOwnProperty("changeBalanceTimestamp")
    )
      if (typeof message.changeBalanceTimestamp === "number")
        object.changeBalanceTimestamp =
          options.longs === String
            ? String(message.changeBalanceTimestamp)
            : message.changeBalanceTimestamp;
      else
        object.changeBalanceTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.changeBalanceTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.changeBalanceTimestamp.low >>> 0,
                message.changeBalanceTimestamp.high >>> 0
              ).toNumber()
            : message.changeBalanceTimestamp;
    if (message.externalNote != null && message.hasOwnProperty("externalNote"))
      object.externalNote = message.externalNote;
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      if (typeof message.balanceVersion === "number")
        object.balanceVersion =
          options.longs === String
            ? String(message.balanceVersion)
            : message.balanceVersion;
      else
        object.balanceVersion =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.balanceVersion)
            : options.longs === Number
            ? new $util.LongBits(
                message.balanceVersion.low >>> 0,
                message.balanceVersion.high >>> 0
              ).toNumber()
            : message.balanceVersion;
    if (message.equity != null && message.hasOwnProperty("equity"))
      if (typeof message.equity === "number")
        object.equity =
          options.longs === String ? String(message.equity) : message.equity;
      else
        object.equity =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.equity)
            : options.longs === Number
            ? new $util.LongBits(
                message.equity.low >>> 0,
                message.equity.high >>> 0
              ).toNumber()
            : message.equity;
    return object;
  };

  /**
   * Converts this ProtoOADepositWithdraw to JSON.
   * @function toJSON
   * @memberof ProtoOADepositWithdraw
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOADepositWithdraw.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOADepositWithdraw;
})();

/**
 * Balance operation entity. Covers all cash movement operations related to account, trading, IB operations, mirroring, etc.
 * @exports ProtoOAChangeBalanceType
 * @enum {string}
 * @property {number} BALANCE_DEPOSIT=0 BALANCE_DEPOSIT value
 * @property {number} BALANCE_WITHDRAW=1 BALANCE_WITHDRAW value
 * @property {number} BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER=3 BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER value
 * @property {number} BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER=4 BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER value
 * @property {number} BALANCE_DEPOSIT_IB_COMMISSIONS=5 BALANCE_DEPOSIT_IB_COMMISSIONS value
 * @property {number} BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE=6 BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE value
 * @property {number} BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB=7 BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB value
 * @property {number} BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER=8 BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER value
 * @property {number} BALANCE_DEPOSIT_REBATE=9 BALANCE_DEPOSIT_REBATE value
 * @property {number} BALANCE_WITHDRAW_REBATE=10 BALANCE_WITHDRAW_REBATE value
 * @property {number} BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER=11 BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER value
 * @property {number} BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER=12 BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER value
 * @property {number} BALANCE_WITHDRAW_BONUS_COMPENSATION=13 BALANCE_WITHDRAW_BONUS_COMPENSATION value
 * @property {number} BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER=14 BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER value
 * @property {number} BALANCE_DEPOSIT_DIVIDENDS=15 BALANCE_DEPOSIT_DIVIDENDS value
 * @property {number} BALANCE_WITHDRAW_DIVIDENDS=16 BALANCE_WITHDRAW_DIVIDENDS value
 * @property {number} BALANCE_WITHDRAW_GSL_CHARGE=17 BALANCE_WITHDRAW_GSL_CHARGE value
 * @property {number} BALANCE_WITHDRAW_ROLLOVER=18 BALANCE_WITHDRAW_ROLLOVER value
 * @property {number} BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS=19 BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS value
 * @property {number} BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS=20 BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS value
 * @property {number} BALANCE_DEPOSIT_SWAP=21 BALANCE_DEPOSIT_SWAP value
 * @property {number} BALANCE_WITHDRAW_SWAP=22 BALANCE_WITHDRAW_SWAP value
 * @property {number} BALANCE_DEPOSIT_MANAGEMENT_FEE=27 BALANCE_DEPOSIT_MANAGEMENT_FEE value
 * @property {number} BALANCE_WITHDRAW_MANAGEMENT_FEE=28 BALANCE_WITHDRAW_MANAGEMENT_FEE value
 * @property {number} BALANCE_DEPOSIT_PERFORMANCE_FEE=29 BALANCE_DEPOSIT_PERFORMANCE_FEE value
 * @property {number} BALANCE_WITHDRAW_INACTIVITY_FEE=35 BALANCE_WITHDRAW_INACTIVITY_FEE value
 */
$root.ProtoOAChangeBalanceType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "BALANCE_DEPOSIT")] = 0;
  values[(valuesById[1] = "BALANCE_WITHDRAW")] = 1;
  values[(valuesById[3] = "BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER")] = 3;
  values[(valuesById[4] = "BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER")] = 4;
  values[(valuesById[5] = "BALANCE_DEPOSIT_IB_COMMISSIONS")] = 5;
  values[(valuesById[6] = "BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE")] = 6;
  values[
    (valuesById[7] = "BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB")
  ] = 7;
  values[
    (valuesById[8] = "BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER")
  ] = 8;
  values[(valuesById[9] = "BALANCE_DEPOSIT_REBATE")] = 9;
  values[(valuesById[10] = "BALANCE_WITHDRAW_REBATE")] = 10;
  values[(valuesById[11] = "BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER")] = 11;
  values[(valuesById[12] = "BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER")] = 12;
  values[(valuesById[13] = "BALANCE_WITHDRAW_BONUS_COMPENSATION")] = 13;
  values[
    (valuesById[14] = "BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER")
  ] = 14;
  values[(valuesById[15] = "BALANCE_DEPOSIT_DIVIDENDS")] = 15;
  values[(valuesById[16] = "BALANCE_WITHDRAW_DIVIDENDS")] = 16;
  values[(valuesById[17] = "BALANCE_WITHDRAW_GSL_CHARGE")] = 17;
  values[(valuesById[18] = "BALANCE_WITHDRAW_ROLLOVER")] = 18;
  values[(valuesById[19] = "BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS")] = 19;
  values[(valuesById[20] = "BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS")] = 20;
  values[(valuesById[21] = "BALANCE_DEPOSIT_SWAP")] = 21;
  values[(valuesById[22] = "BALANCE_WITHDRAW_SWAP")] = 22;
  values[(valuesById[27] = "BALANCE_DEPOSIT_MANAGEMENT_FEE")] = 27;
  values[(valuesById[28] = "BALANCE_WITHDRAW_MANAGEMENT_FEE")] = 28;
  values[(valuesById[29] = "BALANCE_DEPOSIT_PERFORMANCE_FEE")] = 29;
  values[(valuesById[35] = "BALANCE_WITHDRAW_INACTIVITY_FEE")] = 35;
  return values;
})();

$root.ProtoOADeal = (function() {
  /**
   * Properties of a ProtoOADeal.
   * @exports IProtoOADeal
   * @interface IProtoOADeal
   * @property {number|Long} dealId ProtoOADeal dealId
   * @property {number|Long} orderId ProtoOADeal orderId
   * @property {number|Long} positionId ProtoOADeal positionId
   * @property {number|Long} volume ProtoOADeal volume
   * @property {number|Long} filledVolume ProtoOADeal filledVolume
   * @property {number|Long} symbolId ProtoOADeal symbolId
   * @property {number|Long} createTimestamp ProtoOADeal createTimestamp
   * @property {number|Long} executionTimestamp ProtoOADeal executionTimestamp
   * @property {number|Long|null} [utcLastUpdateTimestamp] ProtoOADeal utcLastUpdateTimestamp
   * @property {number|null} [executionPrice] ProtoOADeal executionPrice
   * @property {ProtoOATradeSide} tradeSide ProtoOADeal tradeSide
   * @property {ProtoOADealStatus} dealStatus ProtoOADeal dealStatus
   * @property {number|null} [marginRate] ProtoOADeal marginRate
   * @property {number|Long|null} [commission] ProtoOADeal commission
   * @property {number|null} [baseToUsdConversionRate] ProtoOADeal baseToUsdConversionRate
   * @property {IProtoOAClosePositionDetail|null} [closePositionDetail] ProtoOADeal closePositionDetail
   */

  /**
   * Constructs a new ProtoOADeal.
   * @exports ProtoOADeal
   * @classdesc Execution entity.
   * @implements IProtoOADeal
   * @constructor
   * @param {IProtoOADeal=} [properties] Properties to set
   */
  function ProtoOADeal(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOADeal dealId.
   * @member {number|Long} dealId
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.dealId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal orderId.
   * @member {number|Long} orderId
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.orderId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal positionId.
   * @member {number|Long} positionId
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.positionId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal volume.
   * @member {number|Long} volume
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.volume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal filledVolume.
   * @member {number|Long} filledVolume
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.filledVolume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal symbolId.
   * @member {number|Long} symbolId
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.symbolId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal createTimestamp.
   * @member {number|Long} createTimestamp
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.createTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal executionTimestamp.
   * @member {number|Long} executionTimestamp
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.executionTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal utcLastUpdateTimestamp.
   * @member {number|Long} utcLastUpdateTimestamp
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.utcLastUpdateTimestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal executionPrice.
   * @member {number} executionPrice
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.executionPrice = 0;

  /**
   * ProtoOADeal tradeSide.
   * @member {ProtoOATradeSide} tradeSide
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.tradeSide = 1;

  /**
   * ProtoOADeal dealStatus.
   * @member {ProtoOADealStatus} dealStatus
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.dealStatus = 2;

  /**
   * ProtoOADeal marginRate.
   * @member {number} marginRate
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.marginRate = 0;

  /**
   * ProtoOADeal commission.
   * @member {number|Long} commission
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.commission = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOADeal baseToUsdConversionRate.
   * @member {number} baseToUsdConversionRate
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.baseToUsdConversionRate = 0;

  /**
   * ProtoOADeal closePositionDetail.
   * @member {IProtoOAClosePositionDetail|null|undefined} closePositionDetail
   * @memberof ProtoOADeal
   * @instance
   */
  ProtoOADeal.prototype.closePositionDetail = null;

  /**
   * Creates a new ProtoOADeal instance using the specified properties.
   * @function create
   * @memberof ProtoOADeal
   * @static
   * @param {IProtoOADeal=} [properties] Properties to set
   * @returns {ProtoOADeal} ProtoOADeal instance
   */
  ProtoOADeal.create = function create(properties) {
    return new ProtoOADeal(properties);
  };

  /**
   * Encodes the specified ProtoOADeal message. Does not implicitly {@link ProtoOADeal.verify|verify} messages.
   * @function encode
   * @memberof ProtoOADeal
   * @static
   * @param {IProtoOADeal} message ProtoOADeal message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADeal.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.dealId);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.orderId);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.positionId);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.volume);
    writer.uint32(/* id 5, wireType 0 =*/ 40).int64(message.filledVolume);
    writer.uint32(/* id 6, wireType 0 =*/ 48).int64(message.symbolId);
    writer.uint32(/* id 7, wireType 0 =*/ 56).int64(message.createTimestamp);
    writer.uint32(/* id 8, wireType 0 =*/ 64).int64(message.executionTimestamp);
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      writer
        .uint32(/* id 9, wireType 0 =*/ 72)
        .int64(message.utcLastUpdateTimestamp);
    if (
      message.executionPrice != null &&
      message.hasOwnProperty("executionPrice")
    )
      writer.uint32(/* id 10, wireType 1 =*/ 81).double(message.executionPrice);
    writer.uint32(/* id 11, wireType 0 =*/ 88).int32(message.tradeSide);
    writer.uint32(/* id 12, wireType 0 =*/ 96).int32(message.dealStatus);
    if (message.marginRate != null && message.hasOwnProperty("marginRate"))
      writer.uint32(/* id 13, wireType 1 =*/ 105).double(message.marginRate);
    if (message.commission != null && message.hasOwnProperty("commission"))
      writer.uint32(/* id 14, wireType 0 =*/ 112).int64(message.commission);
    if (
      message.baseToUsdConversionRate != null &&
      message.hasOwnProperty("baseToUsdConversionRate")
    )
      writer
        .uint32(/* id 15, wireType 1 =*/ 121)
        .double(message.baseToUsdConversionRate);
    if (
      message.closePositionDetail != null &&
      message.hasOwnProperty("closePositionDetail")
    )
      $root.ProtoOAClosePositionDetail.encode(
        message.closePositionDetail,
        writer.uint32(/* id 16, wireType 2 =*/ 130).fork()
      ).ldelim();
    return writer;
  };

  /**
   * Encodes the specified ProtoOADeal message, length delimited. Does not implicitly {@link ProtoOADeal.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOADeal
   * @static
   * @param {IProtoOADeal} message ProtoOADeal message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADeal.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOADeal message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOADeal
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOADeal} ProtoOADeal
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADeal.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOADeal();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.dealId = reader.int64();
          break;
        case 2:
          message.orderId = reader.int64();
          break;
        case 3:
          message.positionId = reader.int64();
          break;
        case 4:
          message.volume = reader.int64();
          break;
        case 5:
          message.filledVolume = reader.int64();
          break;
        case 6:
          message.symbolId = reader.int64();
          break;
        case 7:
          message.createTimestamp = reader.int64();
          break;
        case 8:
          message.executionTimestamp = reader.int64();
          break;
        case 9:
          message.utcLastUpdateTimestamp = reader.int64();
          break;
        case 10:
          message.executionPrice = reader.double();
          break;
        case 11:
          message.tradeSide = reader.int32();
          break;
        case 12:
          message.dealStatus = reader.int32();
          break;
        case 13:
          message.marginRate = reader.double();
          break;
        case 14:
          message.commission = reader.int64();
          break;
        case 15:
          message.baseToUsdConversionRate = reader.double();
          break;
        case 16:
          message.closePositionDetail = $root.ProtoOAClosePositionDetail.decode(
            reader,
            reader.uint32()
          );
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("dealId"))
      throw $util.ProtocolError("missing required 'dealId'", {
        instance: message
      });
    if (!message.hasOwnProperty("orderId"))
      throw $util.ProtocolError("missing required 'orderId'", {
        instance: message
      });
    if (!message.hasOwnProperty("positionId"))
      throw $util.ProtocolError("missing required 'positionId'", {
        instance: message
      });
    if (!message.hasOwnProperty("volume"))
      throw $util.ProtocolError("missing required 'volume'", {
        instance: message
      });
    if (!message.hasOwnProperty("filledVolume"))
      throw $util.ProtocolError("missing required 'filledVolume'", {
        instance: message
      });
    if (!message.hasOwnProperty("symbolId"))
      throw $util.ProtocolError("missing required 'symbolId'", {
        instance: message
      });
    if (!message.hasOwnProperty("createTimestamp"))
      throw $util.ProtocolError("missing required 'createTimestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("executionTimestamp"))
      throw $util.ProtocolError("missing required 'executionTimestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("tradeSide"))
      throw $util.ProtocolError("missing required 'tradeSide'", {
        instance: message
      });
    if (!message.hasOwnProperty("dealStatus"))
      throw $util.ProtocolError("missing required 'dealStatus'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOADeal message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOADeal
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOADeal} ProtoOADeal
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADeal.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOADeal message.
   * @function verify
   * @memberof ProtoOADeal
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOADeal.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.dealId) &&
      !(
        message.dealId &&
        $util.isInteger(message.dealId.low) &&
        $util.isInteger(message.dealId.high)
      )
    )
      return "dealId: integer|Long expected";
    if (
      !$util.isInteger(message.orderId) &&
      !(
        message.orderId &&
        $util.isInteger(message.orderId.low) &&
        $util.isInteger(message.orderId.high)
      )
    )
      return "orderId: integer|Long expected";
    if (
      !$util.isInteger(message.positionId) &&
      !(
        message.positionId &&
        $util.isInteger(message.positionId.low) &&
        $util.isInteger(message.positionId.high)
      )
    )
      return "positionId: integer|Long expected";
    if (
      !$util.isInteger(message.volume) &&
      !(
        message.volume &&
        $util.isInteger(message.volume.low) &&
        $util.isInteger(message.volume.high)
      )
    )
      return "volume: integer|Long expected";
    if (
      !$util.isInteger(message.filledVolume) &&
      !(
        message.filledVolume &&
        $util.isInteger(message.filledVolume.low) &&
        $util.isInteger(message.filledVolume.high)
      )
    )
      return "filledVolume: integer|Long expected";
    if (
      !$util.isInteger(message.symbolId) &&
      !(
        message.symbolId &&
        $util.isInteger(message.symbolId.low) &&
        $util.isInteger(message.symbolId.high)
      )
    )
      return "symbolId: integer|Long expected";
    if (
      !$util.isInteger(message.createTimestamp) &&
      !(
        message.createTimestamp &&
        $util.isInteger(message.createTimestamp.low) &&
        $util.isInteger(message.createTimestamp.high)
      )
    )
      return "createTimestamp: integer|Long expected";
    if (
      !$util.isInteger(message.executionTimestamp) &&
      !(
        message.executionTimestamp &&
        $util.isInteger(message.executionTimestamp.low) &&
        $util.isInteger(message.executionTimestamp.high)
      )
    )
      return "executionTimestamp: integer|Long expected";
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      if (
        !$util.isInteger(message.utcLastUpdateTimestamp) &&
        !(
          message.utcLastUpdateTimestamp &&
          $util.isInteger(message.utcLastUpdateTimestamp.low) &&
          $util.isInteger(message.utcLastUpdateTimestamp.high)
        )
      )
        return "utcLastUpdateTimestamp: integer|Long expected";
    if (
      message.executionPrice != null &&
      message.hasOwnProperty("executionPrice")
    )
      if (typeof message.executionPrice !== "number")
        return "executionPrice: number expected";
    switch (message.tradeSide) {
      default:
        return "tradeSide: enum value expected";
      case 1:
      case 2:
        break;
    }
    switch (message.dealStatus) {
      default:
        return "dealStatus: enum value expected";
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        break;
    }
    if (message.marginRate != null && message.hasOwnProperty("marginRate"))
      if (typeof message.marginRate !== "number")
        return "marginRate: number expected";
    if (message.commission != null && message.hasOwnProperty("commission"))
      if (
        !$util.isInteger(message.commission) &&
        !(
          message.commission &&
          $util.isInteger(message.commission.low) &&
          $util.isInteger(message.commission.high)
        )
      )
        return "commission: integer|Long expected";
    if (
      message.baseToUsdConversionRate != null &&
      message.hasOwnProperty("baseToUsdConversionRate")
    )
      if (typeof message.baseToUsdConversionRate !== "number")
        return "baseToUsdConversionRate: number expected";
    if (
      message.closePositionDetail != null &&
      message.hasOwnProperty("closePositionDetail")
    ) {
      var error = $root.ProtoOAClosePositionDetail.verify(
        message.closePositionDetail
      );
      if (error) return "closePositionDetail." + error;
    }
    return null;
  };

  /**
   * Creates a ProtoOADeal message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOADeal
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOADeal} ProtoOADeal
   */
  ProtoOADeal.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOADeal) return object;
    var message = new $root.ProtoOADeal();
    if (object.dealId != null)
      if ($util.Long)
        (message.dealId = $util.Long.fromValue(object.dealId)).unsigned = false;
      else if (typeof object.dealId === "string")
        message.dealId = parseInt(object.dealId, 10);
      else if (typeof object.dealId === "number")
        message.dealId = object.dealId;
      else if (typeof object.dealId === "object")
        message.dealId = new $util.LongBits(
          object.dealId.low >>> 0,
          object.dealId.high >>> 0
        ).toNumber();
    if (object.orderId != null)
      if ($util.Long)
        (message.orderId = $util.Long.fromValue(
          object.orderId
        )).unsigned = false;
      else if (typeof object.orderId === "string")
        message.orderId = parseInt(object.orderId, 10);
      else if (typeof object.orderId === "number")
        message.orderId = object.orderId;
      else if (typeof object.orderId === "object")
        message.orderId = new $util.LongBits(
          object.orderId.low >>> 0,
          object.orderId.high >>> 0
        ).toNumber();
    if (object.positionId != null)
      if ($util.Long)
        (message.positionId = $util.Long.fromValue(
          object.positionId
        )).unsigned = false;
      else if (typeof object.positionId === "string")
        message.positionId = parseInt(object.positionId, 10);
      else if (typeof object.positionId === "number")
        message.positionId = object.positionId;
      else if (typeof object.positionId === "object")
        message.positionId = new $util.LongBits(
          object.positionId.low >>> 0,
          object.positionId.high >>> 0
        ).toNumber();
    if (object.volume != null)
      if ($util.Long)
        (message.volume = $util.Long.fromValue(object.volume)).unsigned = false;
      else if (typeof object.volume === "string")
        message.volume = parseInt(object.volume, 10);
      else if (typeof object.volume === "number")
        message.volume = object.volume;
      else if (typeof object.volume === "object")
        message.volume = new $util.LongBits(
          object.volume.low >>> 0,
          object.volume.high >>> 0
        ).toNumber();
    if (object.filledVolume != null)
      if ($util.Long)
        (message.filledVolume = $util.Long.fromValue(
          object.filledVolume
        )).unsigned = false;
      else if (typeof object.filledVolume === "string")
        message.filledVolume = parseInt(object.filledVolume, 10);
      else if (typeof object.filledVolume === "number")
        message.filledVolume = object.filledVolume;
      else if (typeof object.filledVolume === "object")
        message.filledVolume = new $util.LongBits(
          object.filledVolume.low >>> 0,
          object.filledVolume.high >>> 0
        ).toNumber();
    if (object.symbolId != null)
      if ($util.Long)
        (message.symbolId = $util.Long.fromValue(
          object.symbolId
        )).unsigned = false;
      else if (typeof object.symbolId === "string")
        message.symbolId = parseInt(object.symbolId, 10);
      else if (typeof object.symbolId === "number")
        message.symbolId = object.symbolId;
      else if (typeof object.symbolId === "object")
        message.symbolId = new $util.LongBits(
          object.symbolId.low >>> 0,
          object.symbolId.high >>> 0
        ).toNumber();
    if (object.createTimestamp != null)
      if ($util.Long)
        (message.createTimestamp = $util.Long.fromValue(
          object.createTimestamp
        )).unsigned = false;
      else if (typeof object.createTimestamp === "string")
        message.createTimestamp = parseInt(object.createTimestamp, 10);
      else if (typeof object.createTimestamp === "number")
        message.createTimestamp = object.createTimestamp;
      else if (typeof object.createTimestamp === "object")
        message.createTimestamp = new $util.LongBits(
          object.createTimestamp.low >>> 0,
          object.createTimestamp.high >>> 0
        ).toNumber();
    if (object.executionTimestamp != null)
      if ($util.Long)
        (message.executionTimestamp = $util.Long.fromValue(
          object.executionTimestamp
        )).unsigned = false;
      else if (typeof object.executionTimestamp === "string")
        message.executionTimestamp = parseInt(object.executionTimestamp, 10);
      else if (typeof object.executionTimestamp === "number")
        message.executionTimestamp = object.executionTimestamp;
      else if (typeof object.executionTimestamp === "object")
        message.executionTimestamp = new $util.LongBits(
          object.executionTimestamp.low >>> 0,
          object.executionTimestamp.high >>> 0
        ).toNumber();
    if (object.utcLastUpdateTimestamp != null)
      if ($util.Long)
        (message.utcLastUpdateTimestamp = $util.Long.fromValue(
          object.utcLastUpdateTimestamp
        )).unsigned = false;
      else if (typeof object.utcLastUpdateTimestamp === "string")
        message.utcLastUpdateTimestamp = parseInt(
          object.utcLastUpdateTimestamp,
          10
        );
      else if (typeof object.utcLastUpdateTimestamp === "number")
        message.utcLastUpdateTimestamp = object.utcLastUpdateTimestamp;
      else if (typeof object.utcLastUpdateTimestamp === "object")
        message.utcLastUpdateTimestamp = new $util.LongBits(
          object.utcLastUpdateTimestamp.low >>> 0,
          object.utcLastUpdateTimestamp.high >>> 0
        ).toNumber();
    if (object.executionPrice != null)
      message.executionPrice = Number(object.executionPrice);
    switch (object.tradeSide) {
      case "BUY":
      case 1:
        message.tradeSide = 1;
        break;
      case "SELL":
      case 2:
        message.tradeSide = 2;
        break;
    }
    switch (object.dealStatus) {
      case "FILLED":
      case 2:
        message.dealStatus = 2;
        break;
      case "PARTIALLY_FILLED":
      case 3:
        message.dealStatus = 3;
        break;
      case "REJECTED":
      case 4:
        message.dealStatus = 4;
        break;
      case "INTERNALLY_REJECTED":
      case 5:
        message.dealStatus = 5;
        break;
      case "ERROR":
      case 6:
        message.dealStatus = 6;
        break;
      case "MISSED":
      case 7:
        message.dealStatus = 7;
        break;
    }
    if (object.marginRate != null)
      message.marginRate = Number(object.marginRate);
    if (object.commission != null)
      if ($util.Long)
        (message.commission = $util.Long.fromValue(
          object.commission
        )).unsigned = false;
      else if (typeof object.commission === "string")
        message.commission = parseInt(object.commission, 10);
      else if (typeof object.commission === "number")
        message.commission = object.commission;
      else if (typeof object.commission === "object")
        message.commission = new $util.LongBits(
          object.commission.low >>> 0,
          object.commission.high >>> 0
        ).toNumber();
    if (object.baseToUsdConversionRate != null)
      message.baseToUsdConversionRate = Number(object.baseToUsdConversionRate);
    if (object.closePositionDetail != null) {
      if (typeof object.closePositionDetail !== "object")
        throw TypeError(".ProtoOADeal.closePositionDetail: object expected");
      message.closePositionDetail = $root.ProtoOAClosePositionDetail.fromObject(
        object.closePositionDetail
      );
    }
    return message;
  };

  /**
   * Creates a plain object from a ProtoOADeal message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOADeal
   * @static
   * @param {ProtoOADeal} message ProtoOADeal
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOADeal.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.dealId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.dealId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.orderId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.orderId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.positionId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.positionId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.volume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.volume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.filledVolume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.filledVolume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.symbolId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.symbolId = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.createTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.createTimestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.executionTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.executionTimestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.utcLastUpdateTimestamp = options.longs === String ? "0" : 0;
      object.executionPrice = 0;
      object.tradeSide = options.enums === String ? "BUY" : 1;
      object.dealStatus = options.enums === String ? "FILLED" : 2;
      object.marginRate = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.commission =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.commission = options.longs === String ? "0" : 0;
      object.baseToUsdConversionRate = 0;
      object.closePositionDetail = null;
    }
    if (message.dealId != null && message.hasOwnProperty("dealId"))
      if (typeof message.dealId === "number")
        object.dealId =
          options.longs === String ? String(message.dealId) : message.dealId;
      else
        object.dealId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.dealId)
            : options.longs === Number
            ? new $util.LongBits(
                message.dealId.low >>> 0,
                message.dealId.high >>> 0
              ).toNumber()
            : message.dealId;
    if (message.orderId != null && message.hasOwnProperty("orderId"))
      if (typeof message.orderId === "number")
        object.orderId =
          options.longs === String ? String(message.orderId) : message.orderId;
      else
        object.orderId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.orderId)
            : options.longs === Number
            ? new $util.LongBits(
                message.orderId.low >>> 0,
                message.orderId.high >>> 0
              ).toNumber()
            : message.orderId;
    if (message.positionId != null && message.hasOwnProperty("positionId"))
      if (typeof message.positionId === "number")
        object.positionId =
          options.longs === String
            ? String(message.positionId)
            : message.positionId;
      else
        object.positionId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.positionId)
            : options.longs === Number
            ? new $util.LongBits(
                message.positionId.low >>> 0,
                message.positionId.high >>> 0
              ).toNumber()
            : message.positionId;
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (typeof message.volume === "number")
        object.volume =
          options.longs === String ? String(message.volume) : message.volume;
      else
        object.volume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.volume)
            : options.longs === Number
            ? new $util.LongBits(
                message.volume.low >>> 0,
                message.volume.high >>> 0
              ).toNumber()
            : message.volume;
    if (message.filledVolume != null && message.hasOwnProperty("filledVolume"))
      if (typeof message.filledVolume === "number")
        object.filledVolume =
          options.longs === String
            ? String(message.filledVolume)
            : message.filledVolume;
      else
        object.filledVolume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.filledVolume)
            : options.longs === Number
            ? new $util.LongBits(
                message.filledVolume.low >>> 0,
                message.filledVolume.high >>> 0
              ).toNumber()
            : message.filledVolume;
    if (message.symbolId != null && message.hasOwnProperty("symbolId"))
      if (typeof message.symbolId === "number")
        object.symbolId =
          options.longs === String
            ? String(message.symbolId)
            : message.symbolId;
      else
        object.symbolId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.symbolId)
            : options.longs === Number
            ? new $util.LongBits(
                message.symbolId.low >>> 0,
                message.symbolId.high >>> 0
              ).toNumber()
            : message.symbolId;
    if (
      message.createTimestamp != null &&
      message.hasOwnProperty("createTimestamp")
    )
      if (typeof message.createTimestamp === "number")
        object.createTimestamp =
          options.longs === String
            ? String(message.createTimestamp)
            : message.createTimestamp;
      else
        object.createTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.createTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.createTimestamp.low >>> 0,
                message.createTimestamp.high >>> 0
              ).toNumber()
            : message.createTimestamp;
    if (
      message.executionTimestamp != null &&
      message.hasOwnProperty("executionTimestamp")
    )
      if (typeof message.executionTimestamp === "number")
        object.executionTimestamp =
          options.longs === String
            ? String(message.executionTimestamp)
            : message.executionTimestamp;
      else
        object.executionTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.executionTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.executionTimestamp.low >>> 0,
                message.executionTimestamp.high >>> 0
              ).toNumber()
            : message.executionTimestamp;
    if (
      message.utcLastUpdateTimestamp != null &&
      message.hasOwnProperty("utcLastUpdateTimestamp")
    )
      if (typeof message.utcLastUpdateTimestamp === "number")
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? String(message.utcLastUpdateTimestamp)
            : message.utcLastUpdateTimestamp;
      else
        object.utcLastUpdateTimestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.utcLastUpdateTimestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.utcLastUpdateTimestamp.low >>> 0,
                message.utcLastUpdateTimestamp.high >>> 0
              ).toNumber()
            : message.utcLastUpdateTimestamp;
    if (
      message.executionPrice != null &&
      message.hasOwnProperty("executionPrice")
    )
      object.executionPrice =
        options.json && !isFinite(message.executionPrice)
          ? String(message.executionPrice)
          : message.executionPrice;
    if (message.tradeSide != null && message.hasOwnProperty("tradeSide"))
      object.tradeSide =
        options.enums === String
          ? $root.ProtoOATradeSide[message.tradeSide]
          : message.tradeSide;
    if (message.dealStatus != null && message.hasOwnProperty("dealStatus"))
      object.dealStatus =
        options.enums === String
          ? $root.ProtoOADealStatus[message.dealStatus]
          : message.dealStatus;
    if (message.marginRate != null && message.hasOwnProperty("marginRate"))
      object.marginRate =
        options.json && !isFinite(message.marginRate)
          ? String(message.marginRate)
          : message.marginRate;
    if (message.commission != null && message.hasOwnProperty("commission"))
      if (typeof message.commission === "number")
        object.commission =
          options.longs === String
            ? String(message.commission)
            : message.commission;
      else
        object.commission =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.commission)
            : options.longs === Number
            ? new $util.LongBits(
                message.commission.low >>> 0,
                message.commission.high >>> 0
              ).toNumber()
            : message.commission;
    if (
      message.baseToUsdConversionRate != null &&
      message.hasOwnProperty("baseToUsdConversionRate")
    )
      object.baseToUsdConversionRate =
        options.json && !isFinite(message.baseToUsdConversionRate)
          ? String(message.baseToUsdConversionRate)
          : message.baseToUsdConversionRate;
    if (
      message.closePositionDetail != null &&
      message.hasOwnProperty("closePositionDetail")
    )
      object.closePositionDetail = $root.ProtoOAClosePositionDetail.toObject(
        message.closePositionDetail,
        options
      );
    return object;
  };

  /**
   * Converts this ProtoOADeal to JSON.
   * @function toJSON
   * @memberof ProtoOADeal
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOADeal.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOADeal;
})();

/**
 * Deal status ENUM.
 * @exports ProtoOADealStatus
 * @enum {string}
 * @property {number} FILLED=2 FILLED value
 * @property {number} PARTIALLY_FILLED=3 PARTIALLY_FILLED value
 * @property {number} REJECTED=4 REJECTED value
 * @property {number} INTERNALLY_REJECTED=5 INTERNALLY_REJECTED value
 * @property {number} ERROR=6 ERROR value
 * @property {number} MISSED=7 MISSED value
 */
$root.ProtoOADealStatus = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[2] = "FILLED")] = 2;
  values[(valuesById[3] = "PARTIALLY_FILLED")] = 3;
  values[(valuesById[4] = "REJECTED")] = 4;
  values[(valuesById[5] = "INTERNALLY_REJECTED")] = 5;
  values[(valuesById[6] = "ERROR")] = 6;
  values[(valuesById[7] = "MISSED")] = 7;
  return values;
})();

$root.ProtoOAClosePositionDetail = (function() {
  /**
   * Properties of a ProtoOAClosePositionDetail.
   * @exports IProtoOAClosePositionDetail
   * @interface IProtoOAClosePositionDetail
   * @property {number} entryPrice ProtoOAClosePositionDetail entryPrice
   * @property {number|Long} grossProfit ProtoOAClosePositionDetail grossProfit
   * @property {number|Long} swap ProtoOAClosePositionDetail swap
   * @property {number|Long} commission ProtoOAClosePositionDetail commission
   * @property {number|Long} balance ProtoOAClosePositionDetail balance
   * @property {number|null} [quoteToDepositConversionRate] ProtoOAClosePositionDetail quoteToDepositConversionRate
   * @property {number|Long|null} [closedVolume] ProtoOAClosePositionDetail closedVolume
   * @property {number|Long|null} [balanceVersion] ProtoOAClosePositionDetail balanceVersion
   */

  /**
   * Constructs a new ProtoOAClosePositionDetail.
   * @exports ProtoOAClosePositionDetail
   * @classdesc Trading details for closing deal.
   * @implements IProtoOAClosePositionDetail
   * @constructor
   * @param {IProtoOAClosePositionDetail=} [properties] Properties to set
   */
  function ProtoOAClosePositionDetail(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAClosePositionDetail entryPrice.
   * @member {number} entryPrice
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.entryPrice = 0;

  /**
   * ProtoOAClosePositionDetail grossProfit.
   * @member {number|Long} grossProfit
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.grossProfit = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAClosePositionDetail swap.
   * @member {number|Long} swap
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.swap = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAClosePositionDetail commission.
   * @member {number|Long} commission
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.commission = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAClosePositionDetail balance.
   * @member {number|Long} balance
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.balance = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAClosePositionDetail quoteToDepositConversionRate.
   * @member {number} quoteToDepositConversionRate
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.quoteToDepositConversionRate = 0;

  /**
   * ProtoOAClosePositionDetail closedVolume.
   * @member {number|Long} closedVolume
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.closedVolume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAClosePositionDetail balanceVersion.
   * @member {number|Long} balanceVersion
   * @memberof ProtoOAClosePositionDetail
   * @instance
   */
  ProtoOAClosePositionDetail.prototype.balanceVersion = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAClosePositionDetail instance using the specified properties.
   * @function create
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {IProtoOAClosePositionDetail=} [properties] Properties to set
   * @returns {ProtoOAClosePositionDetail} ProtoOAClosePositionDetail instance
   */
  ProtoOAClosePositionDetail.create = function create(properties) {
    return new ProtoOAClosePositionDetail(properties);
  };

  /**
   * Encodes the specified ProtoOAClosePositionDetail message. Does not implicitly {@link ProtoOAClosePositionDetail.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {IProtoOAClosePositionDetail} message ProtoOAClosePositionDetail message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAClosePositionDetail.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 1 =*/ 9).double(message.entryPrice);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.grossProfit);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.swap);
    writer.uint32(/* id 4, wireType 0 =*/ 32).int64(message.commission);
    writer.uint32(/* id 5, wireType 0 =*/ 40).int64(message.balance);
    if (
      message.quoteToDepositConversionRate != null &&
      message.hasOwnProperty("quoteToDepositConversionRate")
    )
      writer
        .uint32(/* id 6, wireType 1 =*/ 49)
        .double(message.quoteToDepositConversionRate);
    if (message.closedVolume != null && message.hasOwnProperty("closedVolume"))
      writer.uint32(/* id 7, wireType 0 =*/ 56).int64(message.closedVolume);
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      writer.uint32(/* id 8, wireType 0 =*/ 64).int64(message.balanceVersion);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAClosePositionDetail message, length delimited. Does not implicitly {@link ProtoOAClosePositionDetail.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {IProtoOAClosePositionDetail} message ProtoOAClosePositionDetail message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAClosePositionDetail.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAClosePositionDetail message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAClosePositionDetail} ProtoOAClosePositionDetail
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAClosePositionDetail.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAClosePositionDetail();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.entryPrice = reader.double();
          break;
        case 2:
          message.grossProfit = reader.int64();
          break;
        case 3:
          message.swap = reader.int64();
          break;
        case 4:
          message.commission = reader.int64();
          break;
        case 5:
          message.balance = reader.int64();
          break;
        case 6:
          message.quoteToDepositConversionRate = reader.double();
          break;
        case 7:
          message.closedVolume = reader.int64();
          break;
        case 8:
          message.balanceVersion = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("entryPrice"))
      throw $util.ProtocolError("missing required 'entryPrice'", {
        instance: message
      });
    if (!message.hasOwnProperty("grossProfit"))
      throw $util.ProtocolError("missing required 'grossProfit'", {
        instance: message
      });
    if (!message.hasOwnProperty("swap"))
      throw $util.ProtocolError("missing required 'swap'", {
        instance: message
      });
    if (!message.hasOwnProperty("commission"))
      throw $util.ProtocolError("missing required 'commission'", {
        instance: message
      });
    if (!message.hasOwnProperty("balance"))
      throw $util.ProtocolError("missing required 'balance'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAClosePositionDetail message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAClosePositionDetail} ProtoOAClosePositionDetail
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAClosePositionDetail.decodeDelimited = function decodeDelimited(
    reader
  ) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAClosePositionDetail message.
   * @function verify
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAClosePositionDetail.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (typeof message.entryPrice !== "number")
      return "entryPrice: number expected";
    if (
      !$util.isInteger(message.grossProfit) &&
      !(
        message.grossProfit &&
        $util.isInteger(message.grossProfit.low) &&
        $util.isInteger(message.grossProfit.high)
      )
    )
      return "grossProfit: integer|Long expected";
    if (
      !$util.isInteger(message.swap) &&
      !(
        message.swap &&
        $util.isInteger(message.swap.low) &&
        $util.isInteger(message.swap.high)
      )
    )
      return "swap: integer|Long expected";
    if (
      !$util.isInteger(message.commission) &&
      !(
        message.commission &&
        $util.isInteger(message.commission.low) &&
        $util.isInteger(message.commission.high)
      )
    )
      return "commission: integer|Long expected";
    if (
      !$util.isInteger(message.balance) &&
      !(
        message.balance &&
        $util.isInteger(message.balance.low) &&
        $util.isInteger(message.balance.high)
      )
    )
      return "balance: integer|Long expected";
    if (
      message.quoteToDepositConversionRate != null &&
      message.hasOwnProperty("quoteToDepositConversionRate")
    )
      if (typeof message.quoteToDepositConversionRate !== "number")
        return "quoteToDepositConversionRate: number expected";
    if (message.closedVolume != null && message.hasOwnProperty("closedVolume"))
      if (
        !$util.isInteger(message.closedVolume) &&
        !(
          message.closedVolume &&
          $util.isInteger(message.closedVolume.low) &&
          $util.isInteger(message.closedVolume.high)
        )
      )
        return "closedVolume: integer|Long expected";
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      if (
        !$util.isInteger(message.balanceVersion) &&
        !(
          message.balanceVersion &&
          $util.isInteger(message.balanceVersion.low) &&
          $util.isInteger(message.balanceVersion.high)
        )
      )
        return "balanceVersion: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAClosePositionDetail message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAClosePositionDetail} ProtoOAClosePositionDetail
   */
  ProtoOAClosePositionDetail.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAClosePositionDetail) return object;
    var message = new $root.ProtoOAClosePositionDetail();
    if (object.entryPrice != null)
      message.entryPrice = Number(object.entryPrice);
    if (object.grossProfit != null)
      if ($util.Long)
        (message.grossProfit = $util.Long.fromValue(
          object.grossProfit
        )).unsigned = false;
      else if (typeof object.grossProfit === "string")
        message.grossProfit = parseInt(object.grossProfit, 10);
      else if (typeof object.grossProfit === "number")
        message.grossProfit = object.grossProfit;
      else if (typeof object.grossProfit === "object")
        message.grossProfit = new $util.LongBits(
          object.grossProfit.low >>> 0,
          object.grossProfit.high >>> 0
        ).toNumber();
    if (object.swap != null)
      if ($util.Long)
        (message.swap = $util.Long.fromValue(object.swap)).unsigned = false;
      else if (typeof object.swap === "string")
        message.swap = parseInt(object.swap, 10);
      else if (typeof object.swap === "number") message.swap = object.swap;
      else if (typeof object.swap === "object")
        message.swap = new $util.LongBits(
          object.swap.low >>> 0,
          object.swap.high >>> 0
        ).toNumber();
    if (object.commission != null)
      if ($util.Long)
        (message.commission = $util.Long.fromValue(
          object.commission
        )).unsigned = false;
      else if (typeof object.commission === "string")
        message.commission = parseInt(object.commission, 10);
      else if (typeof object.commission === "number")
        message.commission = object.commission;
      else if (typeof object.commission === "object")
        message.commission = new $util.LongBits(
          object.commission.low >>> 0,
          object.commission.high >>> 0
        ).toNumber();
    if (object.balance != null)
      if ($util.Long)
        (message.balance = $util.Long.fromValue(
          object.balance
        )).unsigned = false;
      else if (typeof object.balance === "string")
        message.balance = parseInt(object.balance, 10);
      else if (typeof object.balance === "number")
        message.balance = object.balance;
      else if (typeof object.balance === "object")
        message.balance = new $util.LongBits(
          object.balance.low >>> 0,
          object.balance.high >>> 0
        ).toNumber();
    if (object.quoteToDepositConversionRate != null)
      message.quoteToDepositConversionRate = Number(
        object.quoteToDepositConversionRate
      );
    if (object.closedVolume != null)
      if ($util.Long)
        (message.closedVolume = $util.Long.fromValue(
          object.closedVolume
        )).unsigned = false;
      else if (typeof object.closedVolume === "string")
        message.closedVolume = parseInt(object.closedVolume, 10);
      else if (typeof object.closedVolume === "number")
        message.closedVolume = object.closedVolume;
      else if (typeof object.closedVolume === "object")
        message.closedVolume = new $util.LongBits(
          object.closedVolume.low >>> 0,
          object.closedVolume.high >>> 0
        ).toNumber();
    if (object.balanceVersion != null)
      if ($util.Long)
        (message.balanceVersion = $util.Long.fromValue(
          object.balanceVersion
        )).unsigned = false;
      else if (typeof object.balanceVersion === "string")
        message.balanceVersion = parseInt(object.balanceVersion, 10);
      else if (typeof object.balanceVersion === "number")
        message.balanceVersion = object.balanceVersion;
      else if (typeof object.balanceVersion === "object")
        message.balanceVersion = new $util.LongBits(
          object.balanceVersion.low >>> 0,
          object.balanceVersion.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAClosePositionDetail message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAClosePositionDetail
   * @static
   * @param {ProtoOAClosePositionDetail} message ProtoOAClosePositionDetail
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAClosePositionDetail.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      object.entryPrice = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.grossProfit =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.grossProfit = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.swap =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.swap = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.commission =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.commission = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.balance =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.balance = options.longs === String ? "0" : 0;
      object.quoteToDepositConversionRate = 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.closedVolume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.closedVolume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.balanceVersion =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.balanceVersion = options.longs === String ? "0" : 0;
    }
    if (message.entryPrice != null && message.hasOwnProperty("entryPrice"))
      object.entryPrice =
        options.json && !isFinite(message.entryPrice)
          ? String(message.entryPrice)
          : message.entryPrice;
    if (message.grossProfit != null && message.hasOwnProperty("grossProfit"))
      if (typeof message.grossProfit === "number")
        object.grossProfit =
          options.longs === String
            ? String(message.grossProfit)
            : message.grossProfit;
      else
        object.grossProfit =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.grossProfit)
            : options.longs === Number
            ? new $util.LongBits(
                message.grossProfit.low >>> 0,
                message.grossProfit.high >>> 0
              ).toNumber()
            : message.grossProfit;
    if (message.swap != null && message.hasOwnProperty("swap"))
      if (typeof message.swap === "number")
        object.swap =
          options.longs === String ? String(message.swap) : message.swap;
      else
        object.swap =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.swap)
            : options.longs === Number
            ? new $util.LongBits(
                message.swap.low >>> 0,
                message.swap.high >>> 0
              ).toNumber()
            : message.swap;
    if (message.commission != null && message.hasOwnProperty("commission"))
      if (typeof message.commission === "number")
        object.commission =
          options.longs === String
            ? String(message.commission)
            : message.commission;
      else
        object.commission =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.commission)
            : options.longs === Number
            ? new $util.LongBits(
                message.commission.low >>> 0,
                message.commission.high >>> 0
              ).toNumber()
            : message.commission;
    if (message.balance != null && message.hasOwnProperty("balance"))
      if (typeof message.balance === "number")
        object.balance =
          options.longs === String ? String(message.balance) : message.balance;
      else
        object.balance =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.balance)
            : options.longs === Number
            ? new $util.LongBits(
                message.balance.low >>> 0,
                message.balance.high >>> 0
              ).toNumber()
            : message.balance;
    if (
      message.quoteToDepositConversionRate != null &&
      message.hasOwnProperty("quoteToDepositConversionRate")
    )
      object.quoteToDepositConversionRate =
        options.json && !isFinite(message.quoteToDepositConversionRate)
          ? String(message.quoteToDepositConversionRate)
          : message.quoteToDepositConversionRate;
    if (message.closedVolume != null && message.hasOwnProperty("closedVolume"))
      if (typeof message.closedVolume === "number")
        object.closedVolume =
          options.longs === String
            ? String(message.closedVolume)
            : message.closedVolume;
      else
        object.closedVolume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.closedVolume)
            : options.longs === Number
            ? new $util.LongBits(
                message.closedVolume.low >>> 0,
                message.closedVolume.high >>> 0
              ).toNumber()
            : message.closedVolume;
    if (
      message.balanceVersion != null &&
      message.hasOwnProperty("balanceVersion")
    )
      if (typeof message.balanceVersion === "number")
        object.balanceVersion =
          options.longs === String
            ? String(message.balanceVersion)
            : message.balanceVersion;
      else
        object.balanceVersion =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.balanceVersion)
            : options.longs === Number
            ? new $util.LongBits(
                message.balanceVersion.low >>> 0,
                message.balanceVersion.high >>> 0
              ).toNumber()
            : message.balanceVersion;
    return object;
  };

  /**
   * Converts this ProtoOAClosePositionDetail to JSON.
   * @function toJSON
   * @memberof ProtoOAClosePositionDetail
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAClosePositionDetail.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAClosePositionDetail;
})();

/**
 * Trendbar period ENUM.
 * @exports ProtoOATrendbarPeriod
 * @enum {string}
 * @property {number} M1=1 M1 value
 * @property {number} M2=2 M2 value
 * @property {number} M3=3 M3 value
 * @property {number} M4=4 M4 value
 * @property {number} M5=5 M5 value
 * @property {number} M10=6 M10 value
 * @property {number} M15=7 M15 value
 * @property {number} M30=8 M30 value
 * @property {number} H1=9 H1 value
 * @property {number} H4=10 H4 value
 * @property {number} H12=11 H12 value
 * @property {number} D1=12 D1 value
 * @property {number} W1=13 W1 value
 * @property {number} MN1=14 MN1 value
 */
$root.ProtoOATrendbarPeriod = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "M1")] = 1;
  values[(valuesById[2] = "M2")] = 2;
  values[(valuesById[3] = "M3")] = 3;
  values[(valuesById[4] = "M4")] = 4;
  values[(valuesById[5] = "M5")] = 5;
  values[(valuesById[6] = "M10")] = 6;
  values[(valuesById[7] = "M15")] = 7;
  values[(valuesById[8] = "M30")] = 8;
  values[(valuesById[9] = "H1")] = 9;
  values[(valuesById[10] = "H4")] = 10;
  values[(valuesById[11] = "H12")] = 11;
  values[(valuesById[12] = "D1")] = 12;
  values[(valuesById[13] = "W1")] = 13;
  values[(valuesById[14] = "MN1")] = 14;
  return values;
})();

$root.ProtoOATrendbar = (function() {
  /**
   * Properties of a ProtoOATrendbar.
   * @exports IProtoOATrendbar
   * @interface IProtoOATrendbar
   * @property {number|Long} volume ProtoOATrendbar volume
   * @property {ProtoOATrendbarPeriod|null} [period] ProtoOATrendbar period
   * @property {number|Long|null} [low] ProtoOATrendbar low
   * @property {number|Long|null} [deltaOpen] ProtoOATrendbar deltaOpen
   * @property {number|Long|null} [deltaClose] ProtoOATrendbar deltaClose
   * @property {number|Long|null} [deltaHigh] ProtoOATrendbar deltaHigh
   * @property {number|null} [utcTimestampInMinutes] ProtoOATrendbar utcTimestampInMinutes
   */

  /**
   * Constructs a new ProtoOATrendbar.
   * @exports ProtoOATrendbar
   * @classdesc Historical Trendbar entity.
   * @implements IProtoOATrendbar
   * @constructor
   * @param {IProtoOATrendbar=} [properties] Properties to set
   */
  function ProtoOATrendbar(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATrendbar volume.
   * @member {number|Long} volume
   * @memberof ProtoOATrendbar
   * @instance
   */
  ProtoOATrendbar.prototype.volume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrendbar period.
   * @member {ProtoOATrendbarPeriod} period
   * @memberof ProtoOATrendbar
   * @instance
   */
  ProtoOATrendbar.prototype.period = 1;

  /**
   * ProtoOATrendbar low.
   * @member {number|Long} low
   * @memberof ProtoOATrendbar
   * @instance
   */
  ProtoOATrendbar.prototype.low = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATrendbar deltaOpen.
   * @member {number|Long} deltaOpen
   * @memberof ProtoOATrendbar
   * @instance
   */
  ProtoOATrendbar.prototype.deltaOpen = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOATrendbar deltaClose.
   * @member {number|Long} deltaClose
   * @memberof ProtoOATrendbar
   * @instance
   */
  ProtoOATrendbar.prototype.deltaClose = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOATrendbar deltaHigh.
   * @member {number|Long} deltaHigh
   * @memberof ProtoOATrendbar
   * @instance
   */
  ProtoOATrendbar.prototype.deltaHigh = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOATrendbar utcTimestampInMinutes.
   * @member {number} utcTimestampInMinutes
   * @memberof ProtoOATrendbar
   * @instance
   */
  ProtoOATrendbar.prototype.utcTimestampInMinutes = 0;

  /**
   * Creates a new ProtoOATrendbar instance using the specified properties.
   * @function create
   * @memberof ProtoOATrendbar
   * @static
   * @param {IProtoOATrendbar=} [properties] Properties to set
   * @returns {ProtoOATrendbar} ProtoOATrendbar instance
   */
  ProtoOATrendbar.create = function create(properties) {
    return new ProtoOATrendbar(properties);
  };

  /**
   * Encodes the specified ProtoOATrendbar message. Does not implicitly {@link ProtoOATrendbar.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATrendbar
   * @static
   * @param {IProtoOATrendbar} message ProtoOATrendbar message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATrendbar.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.volume);
    if (message.period != null && message.hasOwnProperty("period"))
      writer.uint32(/* id 4, wireType 0 =*/ 32).int32(message.period);
    if (message.low != null && message.hasOwnProperty("low"))
      writer.uint32(/* id 5, wireType 0 =*/ 40).int64(message.low);
    if (message.deltaOpen != null && message.hasOwnProperty("deltaOpen"))
      writer.uint32(/* id 6, wireType 0 =*/ 48).uint64(message.deltaOpen);
    if (message.deltaClose != null && message.hasOwnProperty("deltaClose"))
      writer.uint32(/* id 7, wireType 0 =*/ 56).uint64(message.deltaClose);
    if (message.deltaHigh != null && message.hasOwnProperty("deltaHigh"))
      writer.uint32(/* id 8, wireType 0 =*/ 64).uint64(message.deltaHigh);
    if (
      message.utcTimestampInMinutes != null &&
      message.hasOwnProperty("utcTimestampInMinutes")
    )
      writer
        .uint32(/* id 9, wireType 0 =*/ 72)
        .uint32(message.utcTimestampInMinutes);
    return writer;
  };

  /**
   * Encodes the specified ProtoOATrendbar message, length delimited. Does not implicitly {@link ProtoOATrendbar.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATrendbar
   * @static
   * @param {IProtoOATrendbar} message ProtoOATrendbar message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATrendbar.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATrendbar message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATrendbar
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATrendbar} ProtoOATrendbar
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATrendbar.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATrendbar();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 3:
          message.volume = reader.int64();
          break;
        case 4:
          message.period = reader.int32();
          break;
        case 5:
          message.low = reader.int64();
          break;
        case 6:
          message.deltaOpen = reader.uint64();
          break;
        case 7:
          message.deltaClose = reader.uint64();
          break;
        case 8:
          message.deltaHigh = reader.uint64();
          break;
        case 9:
          message.utcTimestampInMinutes = reader.uint32();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("volume"))
      throw $util.ProtocolError("missing required 'volume'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATrendbar message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATrendbar
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATrendbar} ProtoOATrendbar
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATrendbar.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATrendbar message.
   * @function verify
   * @memberof ProtoOATrendbar
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATrendbar.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.volume) &&
      !(
        message.volume &&
        $util.isInteger(message.volume.low) &&
        $util.isInteger(message.volume.high)
      )
    )
      return "volume: integer|Long expected";
    if (message.period != null && message.hasOwnProperty("period"))
      switch (message.period) {
        default:
          return "period: enum value expected";
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
          break;
      }
    if (message.low != null && message.hasOwnProperty("low"))
      if (
        !$util.isInteger(message.low) &&
        !(
          message.low &&
          $util.isInteger(message.low.low) &&
          $util.isInteger(message.low.high)
        )
      )
        return "low: integer|Long expected";
    if (message.deltaOpen != null && message.hasOwnProperty("deltaOpen"))
      if (
        !$util.isInteger(message.deltaOpen) &&
        !(
          message.deltaOpen &&
          $util.isInteger(message.deltaOpen.low) &&
          $util.isInteger(message.deltaOpen.high)
        )
      )
        return "deltaOpen: integer|Long expected";
    if (message.deltaClose != null && message.hasOwnProperty("deltaClose"))
      if (
        !$util.isInteger(message.deltaClose) &&
        !(
          message.deltaClose &&
          $util.isInteger(message.deltaClose.low) &&
          $util.isInteger(message.deltaClose.high)
        )
      )
        return "deltaClose: integer|Long expected";
    if (message.deltaHigh != null && message.hasOwnProperty("deltaHigh"))
      if (
        !$util.isInteger(message.deltaHigh) &&
        !(
          message.deltaHigh &&
          $util.isInteger(message.deltaHigh.low) &&
          $util.isInteger(message.deltaHigh.high)
        )
      )
        return "deltaHigh: integer|Long expected";
    if (
      message.utcTimestampInMinutes != null &&
      message.hasOwnProperty("utcTimestampInMinutes")
    )
      if (!$util.isInteger(message.utcTimestampInMinutes))
        return "utcTimestampInMinutes: integer expected";
    return null;
  };

  /**
   * Creates a ProtoOATrendbar message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATrendbar
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATrendbar} ProtoOATrendbar
   */
  ProtoOATrendbar.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATrendbar) return object;
    var message = new $root.ProtoOATrendbar();
    if (object.volume != null)
      if ($util.Long)
        (message.volume = $util.Long.fromValue(object.volume)).unsigned = false;
      else if (typeof object.volume === "string")
        message.volume = parseInt(object.volume, 10);
      else if (typeof object.volume === "number")
        message.volume = object.volume;
      else if (typeof object.volume === "object")
        message.volume = new $util.LongBits(
          object.volume.low >>> 0,
          object.volume.high >>> 0
        ).toNumber();
    switch (object.period) {
      case "M1":
      case 1:
        message.period = 1;
        break;
      case "M2":
      case 2:
        message.period = 2;
        break;
      case "M3":
      case 3:
        message.period = 3;
        break;
      case "M4":
      case 4:
        message.period = 4;
        break;
      case "M5":
      case 5:
        message.period = 5;
        break;
      case "M10":
      case 6:
        message.period = 6;
        break;
      case "M15":
      case 7:
        message.period = 7;
        break;
      case "M30":
      case 8:
        message.period = 8;
        break;
      case "H1":
      case 9:
        message.period = 9;
        break;
      case "H4":
      case 10:
        message.period = 10;
        break;
      case "H12":
      case 11:
        message.period = 11;
        break;
      case "D1":
      case 12:
        message.period = 12;
        break;
      case "W1":
      case 13:
        message.period = 13;
        break;
      case "MN1":
      case 14:
        message.period = 14;
        break;
    }
    if (object.low != null)
      if ($util.Long)
        (message.low = $util.Long.fromValue(object.low)).unsigned = false;
      else if (typeof object.low === "string")
        message.low = parseInt(object.low, 10);
      else if (typeof object.low === "number") message.low = object.low;
      else if (typeof object.low === "object")
        message.low = new $util.LongBits(
          object.low.low >>> 0,
          object.low.high >>> 0
        ).toNumber();
    if (object.deltaOpen != null)
      if ($util.Long)
        (message.deltaOpen = $util.Long.fromValue(
          object.deltaOpen
        )).unsigned = true;
      else if (typeof object.deltaOpen === "string")
        message.deltaOpen = parseInt(object.deltaOpen, 10);
      else if (typeof object.deltaOpen === "number")
        message.deltaOpen = object.deltaOpen;
      else if (typeof object.deltaOpen === "object")
        message.deltaOpen = new $util.LongBits(
          object.deltaOpen.low >>> 0,
          object.deltaOpen.high >>> 0
        ).toNumber(true);
    if (object.deltaClose != null)
      if ($util.Long)
        (message.deltaClose = $util.Long.fromValue(
          object.deltaClose
        )).unsigned = true;
      else if (typeof object.deltaClose === "string")
        message.deltaClose = parseInt(object.deltaClose, 10);
      else if (typeof object.deltaClose === "number")
        message.deltaClose = object.deltaClose;
      else if (typeof object.deltaClose === "object")
        message.deltaClose = new $util.LongBits(
          object.deltaClose.low >>> 0,
          object.deltaClose.high >>> 0
        ).toNumber(true);
    if (object.deltaHigh != null)
      if ($util.Long)
        (message.deltaHigh = $util.Long.fromValue(
          object.deltaHigh
        )).unsigned = true;
      else if (typeof object.deltaHigh === "string")
        message.deltaHigh = parseInt(object.deltaHigh, 10);
      else if (typeof object.deltaHigh === "number")
        message.deltaHigh = object.deltaHigh;
      else if (typeof object.deltaHigh === "object")
        message.deltaHigh = new $util.LongBits(
          object.deltaHigh.low >>> 0,
          object.deltaHigh.high >>> 0
        ).toNumber(true);
    if (object.utcTimestampInMinutes != null)
      message.utcTimestampInMinutes = object.utcTimestampInMinutes >>> 0;
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATrendbar message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATrendbar
   * @static
   * @param {ProtoOATrendbar} message ProtoOATrendbar
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATrendbar.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.volume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.volume = options.longs === String ? "0" : 0;
      object.period = options.enums === String ? "M1" : 1;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.low =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.low = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.deltaOpen =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.deltaOpen = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.deltaClose =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.deltaClose = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.deltaHigh =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.deltaHigh = options.longs === String ? "0" : 0;
      object.utcTimestampInMinutes = 0;
    }
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (typeof message.volume === "number")
        object.volume =
          options.longs === String ? String(message.volume) : message.volume;
      else
        object.volume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.volume)
            : options.longs === Number
            ? new $util.LongBits(
                message.volume.low >>> 0,
                message.volume.high >>> 0
              ).toNumber()
            : message.volume;
    if (message.period != null && message.hasOwnProperty("period"))
      object.period =
        options.enums === String
          ? $root.ProtoOATrendbarPeriod[message.period]
          : message.period;
    if (message.low != null && message.hasOwnProperty("low"))
      if (typeof message.low === "number")
        object.low =
          options.longs === String ? String(message.low) : message.low;
      else
        object.low =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.low)
            : options.longs === Number
            ? new $util.LongBits(
                message.low.low >>> 0,
                message.low.high >>> 0
              ).toNumber()
            : message.low;
    if (message.deltaOpen != null && message.hasOwnProperty("deltaOpen"))
      if (typeof message.deltaOpen === "number")
        object.deltaOpen =
          options.longs === String
            ? String(message.deltaOpen)
            : message.deltaOpen;
      else
        object.deltaOpen =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.deltaOpen)
            : options.longs === Number
            ? new $util.LongBits(
                message.deltaOpen.low >>> 0,
                message.deltaOpen.high >>> 0
              ).toNumber(true)
            : message.deltaOpen;
    if (message.deltaClose != null && message.hasOwnProperty("deltaClose"))
      if (typeof message.deltaClose === "number")
        object.deltaClose =
          options.longs === String
            ? String(message.deltaClose)
            : message.deltaClose;
      else
        object.deltaClose =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.deltaClose)
            : options.longs === Number
            ? new $util.LongBits(
                message.deltaClose.low >>> 0,
                message.deltaClose.high >>> 0
              ).toNumber(true)
            : message.deltaClose;
    if (message.deltaHigh != null && message.hasOwnProperty("deltaHigh"))
      if (typeof message.deltaHigh === "number")
        object.deltaHigh =
          options.longs === String
            ? String(message.deltaHigh)
            : message.deltaHigh;
      else
        object.deltaHigh =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.deltaHigh)
            : options.longs === Number
            ? new $util.LongBits(
                message.deltaHigh.low >>> 0,
                message.deltaHigh.high >>> 0
              ).toNumber(true)
            : message.deltaHigh;
    if (
      message.utcTimestampInMinutes != null &&
      message.hasOwnProperty("utcTimestampInMinutes")
    )
      object.utcTimestampInMinutes = message.utcTimestampInMinutes;
    return object;
  };

  /**
   * Converts this ProtoOATrendbar to JSON.
   * @function toJSON
   * @memberof ProtoOATrendbar
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATrendbar.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATrendbar;
})();

$root.ProtoOAExpectedMargin = (function() {
  /**
   * Properties of a ProtoOAExpectedMargin.
   * @exports IProtoOAExpectedMargin
   * @interface IProtoOAExpectedMargin
   * @property {number|Long} volume ProtoOAExpectedMargin volume
   * @property {number|Long} buyMargin ProtoOAExpectedMargin buyMargin
   * @property {number|Long} sellMargin ProtoOAExpectedMargin sellMargin
   */

  /**
   * Constructs a new ProtoOAExpectedMargin.
   * @exports ProtoOAExpectedMargin
   * @classdesc Expected margin computation entity.
   * @implements IProtoOAExpectedMargin
   * @constructor
   * @param {IProtoOAExpectedMargin=} [properties] Properties to set
   */
  function ProtoOAExpectedMargin(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAExpectedMargin volume.
   * @member {number|Long} volume
   * @memberof ProtoOAExpectedMargin
   * @instance
   */
  ProtoOAExpectedMargin.prototype.volume = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAExpectedMargin buyMargin.
   * @member {number|Long} buyMargin
   * @memberof ProtoOAExpectedMargin
   * @instance
   */
  ProtoOAExpectedMargin.prototype.buyMargin = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAExpectedMargin sellMargin.
   * @member {number|Long} sellMargin
   * @memberof ProtoOAExpectedMargin
   * @instance
   */
  ProtoOAExpectedMargin.prototype.sellMargin = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOAExpectedMargin instance using the specified properties.
   * @function create
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {IProtoOAExpectedMargin=} [properties] Properties to set
   * @returns {ProtoOAExpectedMargin} ProtoOAExpectedMargin instance
   */
  ProtoOAExpectedMargin.create = function create(properties) {
    return new ProtoOAExpectedMargin(properties);
  };

  /**
   * Encodes the specified ProtoOAExpectedMargin message. Does not implicitly {@link ProtoOAExpectedMargin.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {IProtoOAExpectedMargin} message ProtoOAExpectedMargin message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExpectedMargin.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.volume);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.buyMargin);
    writer.uint32(/* id 3, wireType 0 =*/ 24).int64(message.sellMargin);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAExpectedMargin message, length delimited. Does not implicitly {@link ProtoOAExpectedMargin.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {IProtoOAExpectedMargin} message ProtoOAExpectedMargin message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAExpectedMargin.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAExpectedMargin message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAExpectedMargin} ProtoOAExpectedMargin
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExpectedMargin.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAExpectedMargin();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.volume = reader.int64();
          break;
        case 2:
          message.buyMargin = reader.int64();
          break;
        case 3:
          message.sellMargin = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("volume"))
      throw $util.ProtocolError("missing required 'volume'", {
        instance: message
      });
    if (!message.hasOwnProperty("buyMargin"))
      throw $util.ProtocolError("missing required 'buyMargin'", {
        instance: message
      });
    if (!message.hasOwnProperty("sellMargin"))
      throw $util.ProtocolError("missing required 'sellMargin'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOAExpectedMargin message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAExpectedMargin} ProtoOAExpectedMargin
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAExpectedMargin.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAExpectedMargin message.
   * @function verify
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAExpectedMargin.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.volume) &&
      !(
        message.volume &&
        $util.isInteger(message.volume.low) &&
        $util.isInteger(message.volume.high)
      )
    )
      return "volume: integer|Long expected";
    if (
      !$util.isInteger(message.buyMargin) &&
      !(
        message.buyMargin &&
        $util.isInteger(message.buyMargin.low) &&
        $util.isInteger(message.buyMargin.high)
      )
    )
      return "buyMargin: integer|Long expected";
    if (
      !$util.isInteger(message.sellMargin) &&
      !(
        message.sellMargin &&
        $util.isInteger(message.sellMargin.low) &&
        $util.isInteger(message.sellMargin.high)
      )
    )
      return "sellMargin: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOAExpectedMargin message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAExpectedMargin} ProtoOAExpectedMargin
   */
  ProtoOAExpectedMargin.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAExpectedMargin) return object;
    var message = new $root.ProtoOAExpectedMargin();
    if (object.volume != null)
      if ($util.Long)
        (message.volume = $util.Long.fromValue(object.volume)).unsigned = false;
      else if (typeof object.volume === "string")
        message.volume = parseInt(object.volume, 10);
      else if (typeof object.volume === "number")
        message.volume = object.volume;
      else if (typeof object.volume === "object")
        message.volume = new $util.LongBits(
          object.volume.low >>> 0,
          object.volume.high >>> 0
        ).toNumber();
    if (object.buyMargin != null)
      if ($util.Long)
        (message.buyMargin = $util.Long.fromValue(
          object.buyMargin
        )).unsigned = false;
      else if (typeof object.buyMargin === "string")
        message.buyMargin = parseInt(object.buyMargin, 10);
      else if (typeof object.buyMargin === "number")
        message.buyMargin = object.buyMargin;
      else if (typeof object.buyMargin === "object")
        message.buyMargin = new $util.LongBits(
          object.buyMargin.low >>> 0,
          object.buyMargin.high >>> 0
        ).toNumber();
    if (object.sellMargin != null)
      if ($util.Long)
        (message.sellMargin = $util.Long.fromValue(
          object.sellMargin
        )).unsigned = false;
      else if (typeof object.sellMargin === "string")
        message.sellMargin = parseInt(object.sellMargin, 10);
      else if (typeof object.sellMargin === "number")
        message.sellMargin = object.sellMargin;
      else if (typeof object.sellMargin === "object")
        message.sellMargin = new $util.LongBits(
          object.sellMargin.low >>> 0,
          object.sellMargin.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAExpectedMargin message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAExpectedMargin
   * @static
   * @param {ProtoOAExpectedMargin} message ProtoOAExpectedMargin
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAExpectedMargin.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.volume =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.volume = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.buyMargin =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.buyMargin = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.sellMargin =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.sellMargin = options.longs === String ? "0" : 0;
    }
    if (message.volume != null && message.hasOwnProperty("volume"))
      if (typeof message.volume === "number")
        object.volume =
          options.longs === String ? String(message.volume) : message.volume;
      else
        object.volume =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.volume)
            : options.longs === Number
            ? new $util.LongBits(
                message.volume.low >>> 0,
                message.volume.high >>> 0
              ).toNumber()
            : message.volume;
    if (message.buyMargin != null && message.hasOwnProperty("buyMargin"))
      if (typeof message.buyMargin === "number")
        object.buyMargin =
          options.longs === String
            ? String(message.buyMargin)
            : message.buyMargin;
      else
        object.buyMargin =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.buyMargin)
            : options.longs === Number
            ? new $util.LongBits(
                message.buyMargin.low >>> 0,
                message.buyMargin.high >>> 0
              ).toNumber()
            : message.buyMargin;
    if (message.sellMargin != null && message.hasOwnProperty("sellMargin"))
      if (typeof message.sellMargin === "number")
        object.sellMargin =
          options.longs === String
            ? String(message.sellMargin)
            : message.sellMargin;
      else
        object.sellMargin =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.sellMargin)
            : options.longs === Number
            ? new $util.LongBits(
                message.sellMargin.low >>> 0,
                message.sellMargin.high >>> 0
              ).toNumber()
            : message.sellMargin;
    return object;
  };

  /**
   * Converts this ProtoOAExpectedMargin to JSON.
   * @function toJSON
   * @memberof ProtoOAExpectedMargin
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAExpectedMargin.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAExpectedMargin;
})();

/**
 * Price quote type.
 * @exports ProtoOAQuoteType
 * @enum {string}
 * @property {number} BID=1 BID value
 * @property {number} ASK=2 ASK value
 */
$root.ProtoOAQuoteType = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "BID")] = 1;
  values[(valuesById[2] = "ASK")] = 2;
  return values;
})();

$root.ProtoOATickData = (function() {
  /**
   * Properties of a ProtoOATickData.
   * @exports IProtoOATickData
   * @interface IProtoOATickData
   * @property {number|Long} timestamp ProtoOATickData timestamp
   * @property {number|Long} tick ProtoOATickData tick
   */

  /**
   * Constructs a new ProtoOATickData.
   * @exports ProtoOATickData
   * @classdesc Historical tick data type.
   * @implements IProtoOATickData
   * @constructor
   * @param {IProtoOATickData=} [properties] Properties to set
   */
  function ProtoOATickData(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOATickData timestamp.
   * @member {number|Long} timestamp
   * @memberof ProtoOATickData
   * @instance
   */
  ProtoOATickData.prototype.timestamp = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOATickData tick.
   * @member {number|Long} tick
   * @memberof ProtoOATickData
   * @instance
   */
  ProtoOATickData.prototype.tick = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOATickData instance using the specified properties.
   * @function create
   * @memberof ProtoOATickData
   * @static
   * @param {IProtoOATickData=} [properties] Properties to set
   * @returns {ProtoOATickData} ProtoOATickData instance
   */
  ProtoOATickData.create = function create(properties) {
    return new ProtoOATickData(properties);
  };

  /**
   * Encodes the specified ProtoOATickData message. Does not implicitly {@link ProtoOATickData.verify|verify} messages.
   * @function encode
   * @memberof ProtoOATickData
   * @static
   * @param {IProtoOATickData} message ProtoOATickData message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATickData.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.timestamp);
    writer.uint32(/* id 2, wireType 0 =*/ 16).int64(message.tick);
    return writer;
  };

  /**
   * Encodes the specified ProtoOATickData message, length delimited. Does not implicitly {@link ProtoOATickData.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOATickData
   * @static
   * @param {IProtoOATickData} message ProtoOATickData message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOATickData.encodeDelimited = function encodeDelimited(message, writer) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOATickData message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOATickData
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOATickData} ProtoOATickData
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATickData.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOATickData();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.timestamp = reader.int64();
          break;
        case 2:
          message.tick = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("timestamp"))
      throw $util.ProtocolError("missing required 'timestamp'", {
        instance: message
      });
    if (!message.hasOwnProperty("tick"))
      throw $util.ProtocolError("missing required 'tick'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOATickData message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOATickData
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOATickData} ProtoOATickData
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOATickData.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOATickData message.
   * @function verify
   * @memberof ProtoOATickData
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOATickData.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.timestamp) &&
      !(
        message.timestamp &&
        $util.isInteger(message.timestamp.low) &&
        $util.isInteger(message.timestamp.high)
      )
    )
      return "timestamp: integer|Long expected";
    if (
      !$util.isInteger(message.tick) &&
      !(
        message.tick &&
        $util.isInteger(message.tick.low) &&
        $util.isInteger(message.tick.high)
      )
    )
      return "tick: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOATickData message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOATickData
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOATickData} ProtoOATickData
   */
  ProtoOATickData.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOATickData) return object;
    var message = new $root.ProtoOATickData();
    if (object.timestamp != null)
      if ($util.Long)
        (message.timestamp = $util.Long.fromValue(
          object.timestamp
        )).unsigned = false;
      else if (typeof object.timestamp === "string")
        message.timestamp = parseInt(object.timestamp, 10);
      else if (typeof object.timestamp === "number")
        message.timestamp = object.timestamp;
      else if (typeof object.timestamp === "object")
        message.timestamp = new $util.LongBits(
          object.timestamp.low >>> 0,
          object.timestamp.high >>> 0
        ).toNumber();
    if (object.tick != null)
      if ($util.Long)
        (message.tick = $util.Long.fromValue(object.tick)).unsigned = false;
      else if (typeof object.tick === "string")
        message.tick = parseInt(object.tick, 10);
      else if (typeof object.tick === "number") message.tick = object.tick;
      else if (typeof object.tick === "object")
        message.tick = new $util.LongBits(
          object.tick.low >>> 0,
          object.tick.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOATickData message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOATickData
   * @static
   * @param {ProtoOATickData} message ProtoOATickData
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOATickData.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.timestamp =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.timestamp = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.tick =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.tick = options.longs === String ? "0" : 0;
    }
    if (message.timestamp != null && message.hasOwnProperty("timestamp"))
      if (typeof message.timestamp === "number")
        object.timestamp =
          options.longs === String
            ? String(message.timestamp)
            : message.timestamp;
      else
        object.timestamp =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.timestamp)
            : options.longs === Number
            ? new $util.LongBits(
                message.timestamp.low >>> 0,
                message.timestamp.high >>> 0
              ).toNumber()
            : message.timestamp;
    if (message.tick != null && message.hasOwnProperty("tick"))
      if (typeof message.tick === "number")
        object.tick =
          options.longs === String ? String(message.tick) : message.tick;
      else
        object.tick =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.tick)
            : options.longs === Number
            ? new $util.LongBits(
                message.tick.low >>> 0,
                message.tick.high >>> 0
              ).toNumber()
            : message.tick;
    return object;
  };

  /**
   * Converts this ProtoOATickData to JSON.
   * @function toJSON
   * @memberof ProtoOATickData
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOATickData.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOATickData;
})();

/**
 * Open API application permission in regards to token ENUM.
 * @exports ProtoOAClientPermissionScope
 * @enum {string}
 * @property {number} SCOPE_VIEW=0 SCOPE_VIEW value
 * @property {number} SCOPE_TRADE=1 SCOPE_TRADE value
 */
$root.ProtoOAClientPermissionScope = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[0] = "SCOPE_VIEW")] = 0;
  values[(valuesById[1] = "SCOPE_TRADE")] = 1;
  return values;
})();

$root.ProtoOACtidProfile = (function() {
  /**
   * Properties of a ProtoOACtidProfile.
   * @exports IProtoOACtidProfile
   * @interface IProtoOACtidProfile
   * @property {number|Long} userId ProtoOACtidProfile userId
   */

  /**
   * Constructs a new ProtoOACtidProfile.
   * @exports ProtoOACtidProfile
   * @classdesc Trader profile entity. Empty due to GDPR.
   * @implements IProtoOACtidProfile
   * @constructor
   * @param {IProtoOACtidProfile=} [properties] Properties to set
   */
  function ProtoOACtidProfile(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOACtidProfile userId.
   * @member {number|Long} userId
   * @memberof ProtoOACtidProfile
   * @instance
   */
  ProtoOACtidProfile.prototype.userId = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * Creates a new ProtoOACtidProfile instance using the specified properties.
   * @function create
   * @memberof ProtoOACtidProfile
   * @static
   * @param {IProtoOACtidProfile=} [properties] Properties to set
   * @returns {ProtoOACtidProfile} ProtoOACtidProfile instance
   */
  ProtoOACtidProfile.create = function create(properties) {
    return new ProtoOACtidProfile(properties);
  };

  /**
   * Encodes the specified ProtoOACtidProfile message. Does not implicitly {@link ProtoOACtidProfile.verify|verify} messages.
   * @function encode
   * @memberof ProtoOACtidProfile
   * @static
   * @param {IProtoOACtidProfile} message ProtoOACtidProfile message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACtidProfile.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.userId);
    return writer;
  };

  /**
   * Encodes the specified ProtoOACtidProfile message, length delimited. Does not implicitly {@link ProtoOACtidProfile.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOACtidProfile
   * @static
   * @param {IProtoOACtidProfile} message ProtoOACtidProfile message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACtidProfile.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOACtidProfile message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOACtidProfile
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOACtidProfile} ProtoOACtidProfile
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACtidProfile.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOACtidProfile();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.userId = reader.int64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("userId"))
      throw $util.ProtocolError("missing required 'userId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOACtidProfile message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOACtidProfile
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOACtidProfile} ProtoOACtidProfile
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACtidProfile.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOACtidProfile message.
   * @function verify
   * @memberof ProtoOACtidProfile
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOACtidProfile.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.userId) &&
      !(
        message.userId &&
        $util.isInteger(message.userId.low) &&
        $util.isInteger(message.userId.high)
      )
    )
      return "userId: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOACtidProfile message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOACtidProfile
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOACtidProfile} ProtoOACtidProfile
   */
  ProtoOACtidProfile.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOACtidProfile) return object;
    var message = new $root.ProtoOACtidProfile();
    if (object.userId != null)
      if ($util.Long)
        (message.userId = $util.Long.fromValue(object.userId)).unsigned = false;
      else if (typeof object.userId === "string")
        message.userId = parseInt(object.userId, 10);
      else if (typeof object.userId === "number")
        message.userId = object.userId;
      else if (typeof object.userId === "object")
        message.userId = new $util.LongBits(
          object.userId.low >>> 0,
          object.userId.high >>> 0
        ).toNumber();
    return message;
  };

  /**
   * Creates a plain object from a ProtoOACtidProfile message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOACtidProfile
   * @static
   * @param {ProtoOACtidProfile} message ProtoOACtidProfile
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOACtidProfile.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults)
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.userId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.userId = options.longs === String ? "0" : 0;
    if (message.userId != null && message.hasOwnProperty("userId"))
      if (typeof message.userId === "number")
        object.userId =
          options.longs === String ? String(message.userId) : message.userId;
      else
        object.userId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.userId)
            : options.longs === Number
            ? new $util.LongBits(
                message.userId.low >>> 0,
                message.userId.high >>> 0
              ).toNumber()
            : message.userId;
    return object;
  };

  /**
   * Converts this ProtoOACtidProfile to JSON.
   * @function toJSON
   * @memberof ProtoOACtidProfile
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOACtidProfile.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOACtidProfile;
})();

$root.ProtoOACtidTraderAccount = (function() {
  /**
   * Properties of a ProtoOACtidTraderAccount.
   * @exports IProtoOACtidTraderAccount
   * @interface IProtoOACtidTraderAccount
   * @property {number|Long} ctidTraderAccountId ProtoOACtidTraderAccount ctidTraderAccountId
   * @property {boolean|null} [isLive] ProtoOACtidTraderAccount isLive
   */

  /**
   * Constructs a new ProtoOACtidTraderAccount.
   * @exports ProtoOACtidTraderAccount
   * @classdesc Trader account entity.
   * @implements IProtoOACtidTraderAccount
   * @constructor
   * @param {IProtoOACtidTraderAccount=} [properties] Properties to set
   */
  function ProtoOACtidTraderAccount(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOACtidTraderAccount ctidTraderAccountId.
   * @member {number|Long} ctidTraderAccountId
   * @memberof ProtoOACtidTraderAccount
   * @instance
   */
  ProtoOACtidTraderAccount.prototype.ctidTraderAccountId = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOACtidTraderAccount isLive.
   * @member {boolean} isLive
   * @memberof ProtoOACtidTraderAccount
   * @instance
   */
  ProtoOACtidTraderAccount.prototype.isLive = false;

  /**
   * Creates a new ProtoOACtidTraderAccount instance using the specified properties.
   * @function create
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {IProtoOACtidTraderAccount=} [properties] Properties to set
   * @returns {ProtoOACtidTraderAccount} ProtoOACtidTraderAccount instance
   */
  ProtoOACtidTraderAccount.create = function create(properties) {
    return new ProtoOACtidTraderAccount(properties);
  };

  /**
   * Encodes the specified ProtoOACtidTraderAccount message. Does not implicitly {@link ProtoOACtidTraderAccount.verify|verify} messages.
   * @function encode
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {IProtoOACtidTraderAccount} message ProtoOACtidTraderAccount message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACtidTraderAccount.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer
      .uint32(/* id 1, wireType 0 =*/ 8)
      .uint64(message.ctidTraderAccountId);
    if (message.isLive != null && message.hasOwnProperty("isLive"))
      writer.uint32(/* id 2, wireType 0 =*/ 16).bool(message.isLive);
    return writer;
  };

  /**
   * Encodes the specified ProtoOACtidTraderAccount message, length delimited. Does not implicitly {@link ProtoOACtidTraderAccount.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {IProtoOACtidTraderAccount} message ProtoOACtidTraderAccount message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOACtidTraderAccount.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOACtidTraderAccount message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOACtidTraderAccount} ProtoOACtidTraderAccount
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACtidTraderAccount.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOACtidTraderAccount();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.ctidTraderAccountId = reader.uint64();
          break;
        case 2:
          message.isLive = reader.bool();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("ctidTraderAccountId"))
      throw $util.ProtocolError("missing required 'ctidTraderAccountId'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOACtidTraderAccount message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOACtidTraderAccount} ProtoOACtidTraderAccount
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOACtidTraderAccount.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOACtidTraderAccount message.
   * @function verify
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOACtidTraderAccount.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.ctidTraderAccountId) &&
      !(
        message.ctidTraderAccountId &&
        $util.isInteger(message.ctidTraderAccountId.low) &&
        $util.isInteger(message.ctidTraderAccountId.high)
      )
    )
      return "ctidTraderAccountId: integer|Long expected";
    if (message.isLive != null && message.hasOwnProperty("isLive"))
      if (typeof message.isLive !== "boolean")
        return "isLive: boolean expected";
    return null;
  };

  /**
   * Creates a ProtoOACtidTraderAccount message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOACtidTraderAccount} ProtoOACtidTraderAccount
   */
  ProtoOACtidTraderAccount.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOACtidTraderAccount) return object;
    var message = new $root.ProtoOACtidTraderAccount();
    if (object.ctidTraderAccountId != null)
      if ($util.Long)
        (message.ctidTraderAccountId = $util.Long.fromValue(
          object.ctidTraderAccountId
        )).unsigned = true;
      else if (typeof object.ctidTraderAccountId === "string")
        message.ctidTraderAccountId = parseInt(object.ctidTraderAccountId, 10);
      else if (typeof object.ctidTraderAccountId === "number")
        message.ctidTraderAccountId = object.ctidTraderAccountId;
      else if (typeof object.ctidTraderAccountId === "object")
        message.ctidTraderAccountId = new $util.LongBits(
          object.ctidTraderAccountId.low >>> 0,
          object.ctidTraderAccountId.high >>> 0
        ).toNumber(true);
    if (object.isLive != null) message.isLive = Boolean(object.isLive);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOACtidTraderAccount message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOACtidTraderAccount
   * @static
   * @param {ProtoOACtidTraderAccount} message ProtoOACtidTraderAccount
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOACtidTraderAccount.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.ctidTraderAccountId =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ctidTraderAccountId = options.longs === String ? "0" : 0;
      object.isLive = false;
    }
    if (
      message.ctidTraderAccountId != null &&
      message.hasOwnProperty("ctidTraderAccountId")
    )
      if (typeof message.ctidTraderAccountId === "number")
        object.ctidTraderAccountId =
          options.longs === String
            ? String(message.ctidTraderAccountId)
            : message.ctidTraderAccountId;
      else
        object.ctidTraderAccountId =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ctidTraderAccountId)
            : options.longs === Number
            ? new $util.LongBits(
                message.ctidTraderAccountId.low >>> 0,
                message.ctidTraderAccountId.high >>> 0
              ).toNumber(true)
            : message.ctidTraderAccountId;
    if (message.isLive != null && message.hasOwnProperty("isLive"))
      object.isLive = message.isLive;
    return object;
  };

  /**
   * Converts this ProtoOACtidTraderAccount to JSON.
   * @function toJSON
   * @memberof ProtoOACtidTraderAccount
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOACtidTraderAccount.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOACtidTraderAccount;
})();

$root.ProtoOAAssetClass = (function() {
  /**
   * Properties of a ProtoOAAssetClass.
   * @exports IProtoOAAssetClass
   * @interface IProtoOAAssetClass
   * @property {number|Long|null} [id] ProtoOAAssetClass id
   * @property {string|null} [name] ProtoOAAssetClass name
   */

  /**
   * Constructs a new ProtoOAAssetClass.
   * @exports ProtoOAAssetClass
   * @classdesc Asset class entity.
   * @implements IProtoOAAssetClass
   * @constructor
   * @param {IProtoOAAssetClass=} [properties] Properties to set
   */
  function ProtoOAAssetClass(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOAAssetClass id.
   * @member {number|Long} id
   * @memberof ProtoOAAssetClass
   * @instance
   */
  ProtoOAAssetClass.prototype.id = $util.Long
    ? $util.Long.fromBits(0, 0, false)
    : 0;

  /**
   * ProtoOAAssetClass name.
   * @member {string} name
   * @memberof ProtoOAAssetClass
   * @instance
   */
  ProtoOAAssetClass.prototype.name = "";

  /**
   * Creates a new ProtoOAAssetClass instance using the specified properties.
   * @function create
   * @memberof ProtoOAAssetClass
   * @static
   * @param {IProtoOAAssetClass=} [properties] Properties to set
   * @returns {ProtoOAAssetClass} ProtoOAAssetClass instance
   */
  ProtoOAAssetClass.create = function create(properties) {
    return new ProtoOAAssetClass(properties);
  };

  /**
   * Encodes the specified ProtoOAAssetClass message. Does not implicitly {@link ProtoOAAssetClass.verify|verify} messages.
   * @function encode
   * @memberof ProtoOAAssetClass
   * @static
   * @param {IProtoOAAssetClass} message ProtoOAAssetClass message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetClass.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    if (message.id != null && message.hasOwnProperty("id"))
      writer.uint32(/* id 1, wireType 0 =*/ 8).int64(message.id);
    if (message.name != null && message.hasOwnProperty("name"))
      writer.uint32(/* id 2, wireType 2 =*/ 18).string(message.name);
    return writer;
  };

  /**
   * Encodes the specified ProtoOAAssetClass message, length delimited. Does not implicitly {@link ProtoOAAssetClass.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOAAssetClass
   * @static
   * @param {IProtoOAAssetClass} message ProtoOAAssetClass message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOAAssetClass.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOAAssetClass message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOAAssetClass
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOAAssetClass} ProtoOAAssetClass
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetClass.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOAAssetClass();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.int64();
          break;
        case 2:
          message.name = reader.string();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    return message;
  };

  /**
   * Decodes a ProtoOAAssetClass message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOAAssetClass
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOAAssetClass} ProtoOAAssetClass
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOAAssetClass.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOAAssetClass message.
   * @function verify
   * @memberof ProtoOAAssetClass
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOAAssetClass.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (message.id != null && message.hasOwnProperty("id"))
      if (
        !$util.isInteger(message.id) &&
        !(
          message.id &&
          $util.isInteger(message.id.low) &&
          $util.isInteger(message.id.high)
        )
      )
        return "id: integer|Long expected";
    if (message.name != null && message.hasOwnProperty("name"))
      if (!$util.isString(message.name)) return "name: string expected";
    return null;
  };

  /**
   * Creates a ProtoOAAssetClass message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOAAssetClass
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOAAssetClass} ProtoOAAssetClass
   */
  ProtoOAAssetClass.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOAAssetClass) return object;
    var message = new $root.ProtoOAAssetClass();
    if (object.id != null)
      if ($util.Long)
        (message.id = $util.Long.fromValue(object.id)).unsigned = false;
      else if (typeof object.id === "string")
        message.id = parseInt(object.id, 10);
      else if (typeof object.id === "number") message.id = object.id;
      else if (typeof object.id === "object")
        message.id = new $util.LongBits(
          object.id.low >>> 0,
          object.id.high >>> 0
        ).toNumber();
    if (object.name != null) message.name = String(object.name);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOAAssetClass message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOAAssetClass
   * @static
   * @param {ProtoOAAssetClass} message ProtoOAAssetClass
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOAAssetClass.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, false);
        object.id =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.id = options.longs === String ? "0" : 0;
      object.name = "";
    }
    if (message.id != null && message.hasOwnProperty("id"))
      if (typeof message.id === "number")
        object.id = options.longs === String ? String(message.id) : message.id;
      else
        object.id =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.id)
            : options.longs === Number
            ? new $util.LongBits(
                message.id.low >>> 0,
                message.id.high >>> 0
              ).toNumber()
            : message.id;
    if (message.name != null && message.hasOwnProperty("name"))
      object.name = message.name;
    return object;
  };

  /**
   * Converts this ProtoOAAssetClass to JSON.
   * @function toJSON
   * @memberof ProtoOAAssetClass
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOAAssetClass.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOAAssetClass;
})();

$root.ProtoOADepthQuote = (function() {
  /**
   * Properties of a ProtoOADepthQuote.
   * @exports IProtoOADepthQuote
   * @interface IProtoOADepthQuote
   * @property {number|Long} id ProtoOADepthQuote id
   * @property {number|Long} size ProtoOADepthQuote size
   * @property {number|Long|null} [bid] ProtoOADepthQuote bid
   * @property {number|Long|null} [ask] ProtoOADepthQuote ask
   */

  /**
   * Constructs a new ProtoOADepthQuote.
   * @exports ProtoOADepthQuote
   * @classdesc Depth of market entity.
   * @implements IProtoOADepthQuote
   * @constructor
   * @param {IProtoOADepthQuote=} [properties] Properties to set
   */
  function ProtoOADepthQuote(properties) {
    if (properties)
      for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
        if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];
  }

  /**
   * ProtoOADepthQuote id.
   * @member {number|Long} id
   * @memberof ProtoOADepthQuote
   * @instance
   */
  ProtoOADepthQuote.prototype.id = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOADepthQuote size.
   * @member {number|Long} size
   * @memberof ProtoOADepthQuote
   * @instance
   */
  ProtoOADepthQuote.prototype.size = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOADepthQuote bid.
   * @member {number|Long} bid
   * @memberof ProtoOADepthQuote
   * @instance
   */
  ProtoOADepthQuote.prototype.bid = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * ProtoOADepthQuote ask.
   * @member {number|Long} ask
   * @memberof ProtoOADepthQuote
   * @instance
   */
  ProtoOADepthQuote.prototype.ask = $util.Long
    ? $util.Long.fromBits(0, 0, true)
    : 0;

  /**
   * Creates a new ProtoOADepthQuote instance using the specified properties.
   * @function create
   * @memberof ProtoOADepthQuote
   * @static
   * @param {IProtoOADepthQuote=} [properties] Properties to set
   * @returns {ProtoOADepthQuote} ProtoOADepthQuote instance
   */
  ProtoOADepthQuote.create = function create(properties) {
    return new ProtoOADepthQuote(properties);
  };

  /**
   * Encodes the specified ProtoOADepthQuote message. Does not implicitly {@link ProtoOADepthQuote.verify|verify} messages.
   * @function encode
   * @memberof ProtoOADepthQuote
   * @static
   * @param {IProtoOADepthQuote} message ProtoOADepthQuote message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADepthQuote.encode = function encode(message, writer) {
    if (!writer) writer = $Writer.create();
    writer.uint32(/* id 1, wireType 0 =*/ 8).uint64(message.id);
    writer.uint32(/* id 3, wireType 0 =*/ 24).uint64(message.size);
    if (message.bid != null && message.hasOwnProperty("bid"))
      writer.uint32(/* id 4, wireType 0 =*/ 32).uint64(message.bid);
    if (message.ask != null && message.hasOwnProperty("ask"))
      writer.uint32(/* id 5, wireType 0 =*/ 40).uint64(message.ask);
    return writer;
  };

  /**
   * Encodes the specified ProtoOADepthQuote message, length delimited. Does not implicitly {@link ProtoOADepthQuote.verify|verify} messages.
   * @function encodeDelimited
   * @memberof ProtoOADepthQuote
   * @static
   * @param {IProtoOADepthQuote} message ProtoOADepthQuote message or plain object to encode
   * @param {$protobuf.Writer} [writer] Writer to encode to
   * @returns {$protobuf.Writer} Writer
   */
  ProtoOADepthQuote.encodeDelimited = function encodeDelimited(
    message,
    writer
  ) {
    return this.encode(message, writer).ldelim();
  };

  /**
   * Decodes a ProtoOADepthQuote message from the specified reader or buffer.
   * @function decode
   * @memberof ProtoOADepthQuote
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @param {number} [length] Message length if known beforehand
   * @returns {ProtoOADepthQuote} ProtoOADepthQuote
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADepthQuote.decode = function decode(reader, length) {
    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);
    var end = length === undefined ? reader.len : reader.pos + length,
      message = new $root.ProtoOADepthQuote();
    while (reader.pos < end) {
      var tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.id = reader.uint64();
          break;
        case 3:
          message.size = reader.uint64();
          break;
        case 4:
          message.bid = reader.uint64();
          break;
        case 5:
          message.ask = reader.uint64();
          break;
        default:
          reader.skipType(tag & 7);
          break;
      }
    }
    if (!message.hasOwnProperty("id"))
      throw $util.ProtocolError("missing required 'id'", { instance: message });
    if (!message.hasOwnProperty("size"))
      throw $util.ProtocolError("missing required 'size'", {
        instance: message
      });
    return message;
  };

  /**
   * Decodes a ProtoOADepthQuote message from the specified reader or buffer, length delimited.
   * @function decodeDelimited
   * @memberof ProtoOADepthQuote
   * @static
   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
   * @returns {ProtoOADepthQuote} ProtoOADepthQuote
   * @throws {Error} If the payload is not a reader or valid buffer
   * @throws {$protobuf.util.ProtocolError} If required fields are missing
   */
  ProtoOADepthQuote.decodeDelimited = function decodeDelimited(reader) {
    if (!(reader instanceof $Reader)) reader = new $Reader(reader);
    return this.decode(reader, reader.uint32());
  };

  /**
   * Verifies a ProtoOADepthQuote message.
   * @function verify
   * @memberof ProtoOADepthQuote
   * @static
   * @param {Object.<string,*>} message Plain object to verify
   * @returns {string|null} `null` if valid, otherwise the reason why it is not
   */
  ProtoOADepthQuote.verify = function verify(message) {
    if (typeof message !== "object" || message === null)
      return "object expected";
    if (
      !$util.isInteger(message.id) &&
      !(
        message.id &&
        $util.isInteger(message.id.low) &&
        $util.isInteger(message.id.high)
      )
    )
      return "id: integer|Long expected";
    if (
      !$util.isInteger(message.size) &&
      !(
        message.size &&
        $util.isInteger(message.size.low) &&
        $util.isInteger(message.size.high)
      )
    )
      return "size: integer|Long expected";
    if (message.bid != null && message.hasOwnProperty("bid"))
      if (
        !$util.isInteger(message.bid) &&
        !(
          message.bid &&
          $util.isInteger(message.bid.low) &&
          $util.isInteger(message.bid.high)
        )
      )
        return "bid: integer|Long expected";
    if (message.ask != null && message.hasOwnProperty("ask"))
      if (
        !$util.isInteger(message.ask) &&
        !(
          message.ask &&
          $util.isInteger(message.ask.low) &&
          $util.isInteger(message.ask.high)
        )
      )
        return "ask: integer|Long expected";
    return null;
  };

  /**
   * Creates a ProtoOADepthQuote message from a plain object. Also converts values to their respective internal types.
   * @function fromObject
   * @memberof ProtoOADepthQuote
   * @static
   * @param {Object.<string,*>} object Plain object
   * @returns {ProtoOADepthQuote} ProtoOADepthQuote
   */
  ProtoOADepthQuote.fromObject = function fromObject(object) {
    if (object instanceof $root.ProtoOADepthQuote) return object;
    var message = new $root.ProtoOADepthQuote();
    if (object.id != null)
      if ($util.Long)
        (message.id = $util.Long.fromValue(object.id)).unsigned = true;
      else if (typeof object.id === "string")
        message.id = parseInt(object.id, 10);
      else if (typeof object.id === "number") message.id = object.id;
      else if (typeof object.id === "object")
        message.id = new $util.LongBits(
          object.id.low >>> 0,
          object.id.high >>> 0
        ).toNumber(true);
    if (object.size != null)
      if ($util.Long)
        (message.size = $util.Long.fromValue(object.size)).unsigned = true;
      else if (typeof object.size === "string")
        message.size = parseInt(object.size, 10);
      else if (typeof object.size === "number") message.size = object.size;
      else if (typeof object.size === "object")
        message.size = new $util.LongBits(
          object.size.low >>> 0,
          object.size.high >>> 0
        ).toNumber(true);
    if (object.bid != null)
      if ($util.Long)
        (message.bid = $util.Long.fromValue(object.bid)).unsigned = true;
      else if (typeof object.bid === "string")
        message.bid = parseInt(object.bid, 10);
      else if (typeof object.bid === "number") message.bid = object.bid;
      else if (typeof object.bid === "object")
        message.bid = new $util.LongBits(
          object.bid.low >>> 0,
          object.bid.high >>> 0
        ).toNumber(true);
    if (object.ask != null)
      if ($util.Long)
        (message.ask = $util.Long.fromValue(object.ask)).unsigned = true;
      else if (typeof object.ask === "string")
        message.ask = parseInt(object.ask, 10);
      else if (typeof object.ask === "number") message.ask = object.ask;
      else if (typeof object.ask === "object")
        message.ask = new $util.LongBits(
          object.ask.low >>> 0,
          object.ask.high >>> 0
        ).toNumber(true);
    return message;
  };

  /**
   * Creates a plain object from a ProtoOADepthQuote message. Also converts values to other types if specified.
   * @function toObject
   * @memberof ProtoOADepthQuote
   * @static
   * @param {ProtoOADepthQuote} message ProtoOADepthQuote
   * @param {$protobuf.IConversionOptions} [options] Conversion options
   * @returns {Object.<string,*>} Plain object
   */
  ProtoOADepthQuote.toObject = function toObject(message, options) {
    if (!options) options = {};
    var object = {};
    if (options.defaults) {
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.id =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.id = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.size =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.size = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.bid =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.bid = options.longs === String ? "0" : 0;
      if ($util.Long) {
        var long = new $util.Long(0, 0, true);
        object.ask =
          options.longs === String
            ? long.toString()
            : options.longs === Number
            ? long.toNumber()
            : long;
      } else object.ask = options.longs === String ? "0" : 0;
    }
    if (message.id != null && message.hasOwnProperty("id"))
      if (typeof message.id === "number")
        object.id = options.longs === String ? String(message.id) : message.id;
      else
        object.id =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.id)
            : options.longs === Number
            ? new $util.LongBits(
                message.id.low >>> 0,
                message.id.high >>> 0
              ).toNumber(true)
            : message.id;
    if (message.size != null && message.hasOwnProperty("size"))
      if (typeof message.size === "number")
        object.size =
          options.longs === String ? String(message.size) : message.size;
      else
        object.size =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.size)
            : options.longs === Number
            ? new $util.LongBits(
                message.size.low >>> 0,
                message.size.high >>> 0
              ).toNumber(true)
            : message.size;
    if (message.bid != null && message.hasOwnProperty("bid"))
      if (typeof message.bid === "number")
        object.bid =
          options.longs === String ? String(message.bid) : message.bid;
      else
        object.bid =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.bid)
            : options.longs === Number
            ? new $util.LongBits(
                message.bid.low >>> 0,
                message.bid.high >>> 0
              ).toNumber(true)
            : message.bid;
    if (message.ask != null && message.hasOwnProperty("ask"))
      if (typeof message.ask === "number")
        object.ask =
          options.longs === String ? String(message.ask) : message.ask;
      else
        object.ask =
          options.longs === String
            ? $util.Long.prototype.toString.call(message.ask)
            : options.longs === Number
            ? new $util.LongBits(
                message.ask.low >>> 0,
                message.ask.high >>> 0
              ).toNumber(true)
            : message.ask;
    return object;
  };

  /**
   * Converts this ProtoOADepthQuote to JSON.
   * @function toJSON
   * @memberof ProtoOADepthQuote
   * @instance
   * @returns {Object.<string,*>} JSON object
   */
  ProtoOADepthQuote.prototype.toJSON = function toJSON() {
    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
  };

  return ProtoOADepthQuote;
})();

/**
 * Error code ENUM.
 * @exports ProtoOAErrorCode
 * @enum {string}
 * @property {number} OA_AUTH_TOKEN_EXPIRED=1 OA_AUTH_TOKEN_EXPIRED value
 * @property {number} ACCOUNT_NOT_AUTHORIZED=2 ACCOUNT_NOT_AUTHORIZED value
 * @property {number} INCORRECT_BOUNDARIES=35 INCORRECT_BOUNDARIES value
 * @property {number} CONNECTIONS_LIMIT_EXCEEDED=67 CONNECTIONS_LIMIT_EXCEEDED value
 */
$root.ProtoOAErrorCode = (function() {
  var valuesById = {},
    values = Object.create(valuesById);
  values[(valuesById[1] = "OA_AUTH_TOKEN_EXPIRED")] = 1;
  values[(valuesById[2] = "ACCOUNT_NOT_AUTHORIZED")] = 2;
  values[(valuesById[35] = "INCORRECT_BOUNDARIES")] = 35;
  values[(valuesById[67] = "CONNECTIONS_LIMIT_EXCEEDED")] = 67;
  return values;
})();

module.exports = $root;
